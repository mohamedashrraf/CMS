{
    "pipes": [],
    "interfaces": [
        {
            "name": "CardData",
            "id": "interface-CardData-ffe2a693cf5e4348358fa5e73716e801f8194f46e9f77bd4974b0b6edc09bad336336ae39b8535b22d9fe77801c6cec8fcacc9f31f303c3a29299ed042ebba6d",
            "file": "src/app/components/Authentication/sendmail/sendmail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n\r\nexport interface CardData {\r\n  state: \"default\" | \"flipped\" | \"matched\";\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sendmail',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, SpinnerComponent],\r\n  templateUrl: './sendmail.component.html',\r\n  styleUrl: './sendmail.component.css',\r\n  // animations: [\r\n  //   trigger('flipInOut', [\r\n  //     transition(':enter', [\r\n  //       animate('0.5s', style({ transform: 'rotateY(90deg)' })),\r\n  //     ]),\r\n  //     transition(':leave', [\r\n  //       animate('0.5s', style({ transform: 'rotateY(180deg)' })),\r\n  //     ]),\r\n  //   ]),\r\n  // ],\r\n  animations: [\r\n    trigger(\"cardFlip\", [\r\n      state(\r\n        \"*\",\r\n        style({\r\n          transform: \"rotateY(270deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"flipped\",\r\n        style({\r\n          transform: \"rotateY(360deg)\"\r\n        })\r\n      ),\r\n      transition(\"* <=> flipped\", [animate(\"1000ms\")]),\r\n    ])\r\n  ]\r\n})\r\nexport class SendmailComponent implements OnInit {\r\n\r\n  spinner!: Boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private _authService: AuthService, private _Router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spinner = false;\r\n    this.formSendMail = this.formBuilder.group({\r\n      forgetEmail: ['', [Validators.required, Validators.email]],\r\n    });\r\n\r\n  }\r\n\r\n  formSendMail = new FormGroup({\r\n    forgetEmail: new FormControl(''),\r\n  });\r\n\r\n\r\n  resetSubmit() { // send mail\r\n    this.spinner = true;\r\n\r\n    if (this.formSendMail.invalid) {\r\n      this.spinner = false;\r\n      console.log(this.formSendMail);\r\n      return;\r\n    }\r\n    const email = this.formSendMail.controls.forgetEmail.value?.toString() ?? '';\r\n    this._authService.sendMail(email).subscribe({\r\n      next: (res) => {\r\n        // sessionStorage.setItem('token' , res.token);\r\n        this.spinner = false;\r\n\r\n        sessionStorage.setItem('email', email);\r\n        sessionStorage.setItem('message', res.message);\r\n        console.log(res);\r\n        this._Router.navigateByUrl('/auth/emailverification');\r\n      }, error: (err) => {\r\n        this.spinner = false;\r\n\r\n        console.log(err);\r\n      }\r\n    })\r\n    // this._authService.sendMail(email).subscribe({\r\n    //   next: (res)=>{ \r\n    //     sessionStorage.setItem('token' , res.token);\r\n    //     sessionStorage.setItem('email' , res.email);\r\n    //     sessionStorage.setItem('message',res.message);\r\n    //     console.log(this.formSendMail.controls.forgetEmail.value);\r\n\r\n    //     console.log(res.message);\r\n    //     console.log(res.token)\r\n    //     console.log(res);\r\n\r\n    //     this._Router.navigateByUrl('/emailverification');\r\n    // },\r\n    //   error:(err)=>{alert(err.message)}\r\n    // });\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"flipped\" | \"matched\"",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CardData",
            "id": "interface-CardData-ec585a078cbb7f8585551871fc3016b850263a384cd3f2323269c0e0a961e08e3d16df256f7ca6e0f0a8593d5084c87feba5b44cb67d689f9532cc3af09b2330-1",
            "file": "src/app/components/Authentication/signin/signin.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, DoCheck, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { ILogin } from '../../../interfaces/logininterface';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { PasswordDirective } from '../directives/password.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n\r\nexport interface CardData {\r\n  state: \"default\" | \"flipped\" | \"matched\";\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, FontAwesomeModule, PasswordDirective, SpinnerComponent],\r\n  templateUrl: './signin.component.html',\r\n  styleUrl: './signin.component.css',\r\n  animations: [\r\n    trigger(\"cardFlip\", [\r\n      state(\r\n        \"*\",\r\n        style({\r\n          transform: \"rotateY(-90deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"flipped\",\r\n        style({\r\n          transform: \"rotateY(0deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"default\",\r\n        style({\r\n          transform: \"rotateY(90deg)\"\r\n        })\r\n      ),\r\n      transition(\"* => flipped\", [animate(\"1000ms\")]),\r\n      transition(\"default => *\", [animate(\"1000ms\")]),\r\n    ])\r\n  ]\r\n})\r\nexport class SigninComponent implements OnInit, DoCheck, OnDestroy {\r\n\r\n  Index: number = 1;\r\n  submitted: boolean = false;\r\n  passwordHint: boolean = false;\r\n  eyeshow: boolean = false;\r\n  uppercase: boolean = false;\r\n  specialChar: boolean = false;\r\n  Number: boolean = false;\r\n  numberLength: boolean = false;\r\n  signInRequest: ILogin = {} as ILogin;\r\n  faEye = faEye;\r\n  faEyaSlash = faEyeSlash;\r\n  errorExit: boolean = false;\r\n  resendOTPBool!: Boolean;\r\n  resendOtpMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  data: CardData = {\r\n    state: \"flipped\"\r\n  };\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _Router: Router) {\r\n    this.spinner = false;\r\n    this.resendOTPBool = false;\r\n  }\r\n\r\n  formInfo = new FormGroup({\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n  });\r\n\r\n  ngDoCheck(): void { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.formInfo = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n        ],\r\n      ],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  Submit() { //login\r\n    this.submitted = true;\r\n    if (this.formInfo.invalid) {\r\n      console.log(this.formInfo);\r\n      return;\r\n    }\r\n    const fv = this.formInfo.value!;\r\n    this.signInRequest = {\r\n      email: fv.email?.toString() ?? '',\r\n      password: fv.password?.toString() ?? '',\r\n    }\r\n\r\n    this._authService.Login(this.signInRequest).subscribe({\r\n      next: (res) => {\r\n\r\n\r\n        console.log(res);\r\n        this._authService.saveUserSession(res);\r\n        this._authService.setUser(res);\r\n\r\n        // this._Router.navigateByUrl('/cms');\r\n        this._Router.navigate(['/cms'], { skipLocationChange: true })\r\n      },\r\n      error: (err) => {\r\n        // console.log(err);\r\n        this.errorExit = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkbox() {\r\n    localStorage.setItem('email', this.formInfo.controls.email?.toString() ?? '');\r\n    localStorage.setItem('password', this.formInfo.controls.password?.toString() ?? '');\r\n  }\r\n\r\n  showConfirmPass: boolean = false\r\n  showConfirmPassword() {\r\n    this.showConfirmPass = !this.showConfirmPass\r\n  }\r\n\r\n  showPass: boolean = false;\r\n  showPassword() {\r\n    this.showPass = !this.showPass;\r\n  }\r\n\r\n  checkPasswordLength(controlName: string) {\r\n    if (this.formInfo.get(controlName)?.value) {\r\n      if (+this.formInfo.get(controlName)?.value.length > 40)\r\n        this.formInfo.get(controlName)?.patchValue(this.formInfo.get(controlName)?.value.slice(0, 40));\r\n    }\r\n  }\r\n\r\n  clearErrorExit() {\r\n    this.errorExit = false;\r\n  }\r\n\r\n  shooww(event: any, controlName: string) {\r\n    this.formInfo.get(controlName)?.patchValue(event)\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.state = \"default\";\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"flipped\" | \"matched\"",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CardData-1"
        },
        {
            "name": "IForgetPassRequest",
            "id": "interface-IForgetPassRequest-21be6f330a57614e6d6b80f9528284cde45a6741f2c17f0e067f504c023be3e42da3609bc16030dc0e8248a2bca58f4e917b1627952806cd9c9a8b5b87a38a09",
            "file": "src/app/interfaces/iforget-pass-request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IForgetPassRequest {\r\n    password:string;\r\n    confirmNewPassword:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "confirmNewPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ILogin",
            "id": "interface-ILogin-fb3704532450198dc64db48984d0218b0ffac3c546a90a7f4ae5560f6b63bad961ad9f04e3ba998dc9cbd2d191029016c2b27a660221c8a6fab07c7c2747e779",
            "file": "src/app/interfaces/logininterface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ILogin {\r\n    email:string;\r\n    password:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISignInResponse",
            "id": "interface-ISignInResponse-cae07239c6160633cad1b48d191ce63a6f55c964ac3dd04bda95d4bf8b4f47f3a5048cc916e21b6107b006c0f084dd44672bb5609e1291ca9ee8854449a4f28e",
            "file": "src/app/interfaces/isign-in-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISignInResponse {\r\n    message:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISignUpResponse",
            "id": "interface-ISignUpResponse-59031b4270ec924523c7043ddf891f27406d6955f84d4c98d4097f28f5e670e07c7302a9ba6c23ced55c8bd33d628bd7ed92992315b4a3902a39b2a2d963007f",
            "file": "src/app/interfaces/isign-up-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISignUpResponse {\r\n    message:string;\r\n    email:string;\r\n    token:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ManageUser",
            "id": "interface-ManageUser-15decdf87935464ea213329715216c3628443a800b9b9eff8baa0aad6c5fa00c62e5d68a11c967bc195e0dedd5b0a15f7cff3fec2ac17ae53543eaf1e22b74f0",
            "file": "src/app/interfaces/manage-user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ManageUser {\r\n    id: string;\r\n    fullName: string;\r\n    profileImagePath: string;\r\n    userStatus: Boolean;\r\n    email: string;\r\n    createdAt: string;\r\n    roleName: string;\r\n}",
            "properties": [
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "profileImagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "userStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SubscriptionPlan",
            "id": "interface-SubscriptionPlan-f587d0e93c2e69f9cb81d197eab2460f8e07daf112eef8c994f02c5f338b368225935cafb0ae14652f600d65a14f213768c94b1fade1735956d65a7b6f2ec63f",
            "file": "src/app/components/core/Setting/interfaces/subscriptionPlan.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SubscriptionPlan {\r\n    id: number,\r\n    title: string,\r\n    subTitle: string,\r\n    price: number,\r\n    duration: number,\r\n    numberOfUsers: number,\r\n    seoUsage: Boolean,\r\n    numberOfPosts: number,\r\n    storageCapacity: number,\r\n    isCurrentPlan: Boolean\r\n}",
            "properties": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isCurrentPlan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "numberOfPosts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "numberOfUsers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "seoUsage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "storageCapacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "subTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "userInfo",
            "id": "interface-userInfo-4949ac9302ed59ce47aaa17831c4468ae7a2cc345033fbd112eec62e4f3e15750962100d578397f84187a40fd1d8a8fc8a372088f7d9399a441a55041fbef0a6",
            "file": "src/app/interfaces/user-info.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface userInfo {\r\n  id: string\r\n  fullName: string\r\n  profileImagePath: string\r\n  isAccountActive: boolean\r\n  email: string\r\n  createdAt: string\r\n  roleName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isAccountActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "profileImagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-6730dcbfb4e10761f47f29c9ed74bb91db69055fececeba4f57add0df1fffeca756ff1c4764c7bd786c93b4e712ea0570160f338d14ac4fb2408193b2da78774",
            "file": "src/app/services/auth.service.ts",
            "properties": [
                {
                    "name": "user$",
                    "defaultValue": "new BehaviorSubject<AppUser>({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    token: \"\",\r\n    emailConfirmed: \"\",\r\n    expireDate: \"\",\r\n    imageProfilePath: '',\r\n    roleName: ''\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<AppUser>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "forgetPassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<AppUser>",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Login",
                    "args": [
                        {
                            "name": "request",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AppUser>",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resendOTP",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ResendOTPForgetPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetVerificationCode",
                    "args": [
                        {
                            "name": "res",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveUserSession",
                    "args": [
                        {
                            "name": "applicationUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "applicationUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendMail",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTokenInSessionStorage",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUserOnBootstrap",
                    "args": [
                        {
                            "name": "user",
                            "type": "AppUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "AppUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "registerData",
                            "type": "ISignupRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ISignUpResponse>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerData",
                            "type": "ISignupRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verificationCode",
                    "args": [
                        {
                            "name": "otp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "otp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { ISignupRequest } from '../interfaces/signupinterface';\r\nimport { ILogin } from '../interfaces/logininterface';\r\nimport { ISignUpResponse } from '../interfaces/isign-up-response';\r\nimport { AppUser } from '../interfaces/app-user';\r\nimport { LocalStorageKeys } from '../keys/local-storage-keys';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n\r\n  private user$: BehaviorSubject<AppUser> = new BehaviorSubject<AppUser>({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    token: \"\",\r\n    emailConfirmed: \"\",\r\n    expireDate: \"\",\r\n    imageProfilePath: '',\r\n    roleName: ''\r\n  });\r\n\r\n  constructor(private http: HttpClient, private _Route: Router) {\r\n    this.user$.next({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      token: \"\",\r\n      emailConfirmed: \"\",\r\n      expireDate: \"\",\r\n      imageProfilePath: '',\r\n      roleName: ''\r\n    })\r\n  }\r\n\r\n  signUp(registerData: ISignupRequest): Observable<ISignUpResponse> {\r\n    return this.http.post<ISignUpResponse>(\r\n      environment.BASEURL + 'api/Authentication/Register',\r\n      registerData\r\n    );\r\n  }\r\n\r\n  verificationCode(otp: string): Observable<any> {\r\n    var obj = {\r\n      email: sessionStorage.getItem('email')?.toString(),\r\n      otp: otp.toString(),\r\n      token: sessionStorage.getItem('token')?.toString(),\r\n    };\r\n    return this.http.post(\r\n      `${environment.BASEURL}api/Authentication/ConfirmEmail`,\r\n      obj\r\n    );\r\n  }\r\n\r\n  resendOTP() {\r\n    var obj = {\r\n      email: sessionStorage.getItem(\"email\"),\r\n    };\r\n    return this.http.post(\r\n      environment.BASEURL + `api/Authentication/ResendOTP?email=${obj.email}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n\r\n  ResendOTPForgetPassword() {\r\n    var obj = {\r\n      email: sessionStorage.getItem(\"email\"),\r\n    };\r\n    return this.http.post(\r\n      environment.BASEURL + `api/Authentication/ResendOTPForgetPassword?email=${obj.email}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  setToken(token: string) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  setTokenInSessionStorage(token: string) {\r\n    sessionStorage.setItem('token', token);\r\n  }\r\n\r\n  setUser(user: any) {\r\n    const data = {\r\n      email: user.data.email,\r\n      fullName: user.data.fullName,\r\n      expireDate: user.data.expireDate,\r\n      emailConfirmed: user.data.emailConfirmed,\r\n      token: user.data.token,\r\n      imageProfilePath: user.imageProfilePath,\r\n      roleName: user.roleName\r\n    }\r\n    this.user$.next(data);\r\n  }\r\n\r\n  setUserOnBootstrap(user: AppUser) {\r\n    this.user$.next(user);\r\n  }\r\n\r\n  getUser(): Observable<AppUser> {\r\n    return this.user$;\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const userData = localStorage.getItem(LocalStorageKeys.USER_SESSION);\r\n    if (userData) {\r\n      const jsonUserData: AppUser = JSON.parse(userData);\r\n      const token = jsonUserData.token;\r\n      const tokenExpireDate =\r\n        jsonUserData.expireDate;\r\n      return !!token && new Date(tokenExpireDate) >= new Date();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  saveUserSession(applicationUser: any) {\r\n    const data = {\r\n      email: applicationUser.data.email,\r\n      fullName: applicationUser.data.fullName,\r\n      expireDate: applicationUser.data.expireDate,\r\n      emailConfirmed: applicationUser.data.emailConfirmed,\r\n      token: applicationUser.data.token,\r\n      imageProfilePath: applicationUser.imageProfilePath,\r\n      roleName: applicationUser.roleName\r\n    }\r\n    localStorage.setItem(\r\n      'userSession',\r\n      JSON.stringify(data)\r\n    );\r\n  }\r\n\r\n  get Name() {\r\n    if (this.isLoggedIn) {\r\n      let userData = localStorage.getItem(LocalStorageKeys.USER_SESSION);\r\n      if (userData) return (JSON.parse(userData) as AppUser).fullName;\r\n      return null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get Token() {\r\n    if (this.isLoggedIn) {\r\n      let userData = localStorage.getItem(LocalStorageKeys.USER_SESSION);\r\n      if (userData) return (JSON.parse(userData) as AppUser).token;\r\n      return null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  sendMail(email: string): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.BASEURL}api/Authentication/ForgetPassword?email=${email}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  resetVerificationCode(res: string): Observable<any> {\r\n    var obj = {\r\n      email: sessionStorage.getItem('email')?.toString(),\r\n      otp: res.toString(),\r\n      //token: sessionStorage.getItem('token')?.toString(),\r\n    };\r\n    return this.http.post(\r\n      `${environment.BASEURL}api/Authentication/ConfirmForgetPasswordOTP`,\r\n      obj\r\n    );\r\n  }\r\n\r\n  Login(request: ILogin): Observable<AppUser> {\r\n    return this.http.post<AppUser>(\r\n      environment.BASEURL + 'api/Authentication/Login',\r\n      request\r\n    );\r\n  }\r\n\r\n  forgetPassword(email: string) {\r\n    return this.http.post<any>(\r\n      `${environment.BASEURL}api/Authentication/ForgetPassword?email=${email}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(LocalStorageKeys.USER_SESSION);\r\n    this._Route.navigate(['/auth/signin']);\r\n    this.user$.next({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      token: \"\",\r\n      emailConfirmed: \"\",\r\n      expireDate: \"\",\r\n      imageProfilePath: '',\r\n      roleName: ''\r\n    })\r\n  }\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isLoggedIn": {
                    "name": "isLoggedIn",
                    "getSignature": {
                        "name": "isLoggedIn",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 110
                    }
                },
                "Name": {
                    "name": "Name",
                    "getSignature": {
                        "name": "Name",
                        "type": "",
                        "returnType": "",
                        "line": 138
                    }
                },
                "Token": {
                    "name": "Token",
                    "getSignature": {
                        "name": "Token",
                        "type": "",
                        "returnType": "",
                        "line": 147
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BreadcrumbService",
            "id": "injectable-BreadcrumbService-225b104699a5be7048809c0f40b4dacf4e3f176a81f07e5d1b4f2e64aaaada9939297ddbcbce88fe4a26f15178d8a6529981989385b578efbae2ca0432eabff0",
            "file": "src/app/services/breadcrumb/breadcrumb.service.ts",
            "properties": [
                {
                    "name": "fullPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changeCurrentPath",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentPath",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { LocationStrategy } from '@angular/common';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class BreadcrumbService {\r\n  private fullPath!: BehaviorSubject<string[]>;\r\n  constructor(private _LocationStrategy: LocationStrategy) {\r\n    this.fullPath = new BehaviorSubject<string[]>([]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fullPath.next(this._LocationStrategy.path().split('/'));\r\n  }\r\n\r\n  changeCurrentPath() {\r\n    this.fullPath.next(this._LocationStrategy.path().split('/'));\r\n  }\r\n\r\n  getCurrentPath(): Observable<any> {\r\n    this.fullPath.next(this._LocationStrategy.path().split('/'));\r\n    return this.fullPath;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_LocationStrategy",
                        "type": "LocationStrategy",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_LocationStrategy",
                        "type": "LocationStrategy",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "InterceptorLoaderRequestService",
            "id": "injectable-InterceptorLoaderRequestService-ad7d1c8ecf4740a276f2e559c1db4c7e5a70fdc0f8378723a2af1b8d405bf6c77a940df6a14a9d77d3e887e2010e7cd33c3dd65b33c17a03fb2ecb71c11e1909",
            "file": "src/app/services/request/interceptor-loader-request.service.ts",
            "properties": [
                {
                    "name": "incomingRequests",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getIncomingRequests",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Boolean>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setIncomingRequests",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorLoaderRequestService {\r\n\r\n  private incomingRequests: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n  constructor() { }\r\n\r\n  setIncomingRequests() {\r\n    // this.incomingRequests.next(!this.incomingRequests.value);\r\n    // console.log(this.incomingRequests.value);\r\n    \r\n  }\r\n\r\n  getIncomingRequests(): Observable<Boolean> {\r\n    return this.incomingRequests\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NavigationService",
            "id": "injectable-NavigationService-e19ddf4ac8408281fe852f3ec38d79804bb4aa6e29e8cfe232e5d92d644fb1d1602348e0ae36409a202e50cb6e84e07b2d236effe77138f9d1b737773f2dfbd3",
            "file": "src/app/globalAnimation/navigation.service.ts",
            "properties": [
                {
                    "name": "animationValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "lastValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "newValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAnimationNumber",
                    "args": [
                        {
                            "name": "lastValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lastValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivationEnd, NavigationEnd, Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n    public lastValue: any;\r\n    public newValue: any;\r\n    public animationValue: any;\r\n\r\n    constructor(\r\n        private router: Router,\r\n    ) {\r\n        this.router\r\n            .events\r\n            .subscribe((event) => {\r\n                if (event instanceof ActivationEnd) {\r\n                    const snapshot = event.snapshot;\r\n                    if (snapshot.data['num']) {\r\n                        this.lastValue = this.newValue;\r\n                        this.newValue = snapshot.data['num'];\r\n                        this.animationValue = this.getAnimationNumber(this.lastValue, this.newValue);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    getAnimationNumber(lastValue: number, newValue: number) {\r\n        let result = 0;\r\n        if (lastValue && newValue) {\r\n            result = 2;\r\n            if (lastValue) {\r\n                if (newValue > lastValue) {\r\n                    result = 2;\r\n                } else {\r\n                    result = 1;\r\n                }\r\n            } else {\r\n                result = 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ResetPasswordService",
            "id": "injectable-ResetPasswordService-dc365dbd623fcbaee45065401ed75b0d380bfbdeeba13b92b157639a0f7063c70d0fe8977db12abbd71d259afdac4e24b880631498efd651f013ffa372a8c35f",
            "file": "src/app/services/reset-password.service.ts",
            "properties": [
                {
                    "name": "authenticationURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "baseURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "resetPassword",
                    "args": [
                        {
                            "name": "res",
                            "type": "IForgetPassRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "IForgetPassRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { IForgetPassRequest } from '../interfaces/iforget-pass-request';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPasswordService {\r\n  authenticationURL!: string;\r\n  baseURL!: string;\r\n\r\n  constructor(private _HttpClient: HttpClient) {\r\n    this.baseURL = environment.BASEURL;\r\n    this.authenticationURL = '/api/Authentication'\r\n  }\r\n\r\n  resetPassword(res:IForgetPassRequest): Observable<any> {\r\n    const obj = {\r\n      email: sessionStorage.getItem('email')?.toString(),\r\n      token: sessionStorage.getItem('token')?.toString(),\r\n      // message: sessionStorage.getItem('message')?.toString(),\r\n      newPassword: res.password.toString(),\r\n      confirmNewPassword: res.confirmNewPassword.toString()\r\n    }\r\n    return this._HttpClient.post<any>(`${this.baseURL}api/Authentication/ConfirmForgetPassword`, obj);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SettingsService",
            "id": "injectable-SettingsService-1f8d9d785bff2ebcf0340d62a405120aa24b452aa0c4f693418151f1d85963a8fe88a33706995ef7cd223926dcca438a85195ee294238ea6e8a9ba28852b0fa9",
            "file": "src/app/components/core/Setting/services/settings.service.ts",
            "properties": [
                {
                    "name": "baseURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "getStripeSessionIdToCheckout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSubscriptionPlans",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<SubscriptionPlan[]>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendSessionId",
                    "args": [
                        {
                            "name": "session",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "session",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchSubscriptionPlan",
                    "args": [
                        {
                            "name": "subscriptionPlanId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subscriptionPlanId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nimport { SubscriptionPlan } from '../interfaces/subscriptionPlan';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n\r\n  baseURL!: string;\r\n\r\n  constructor(private _HttpClient: HttpClient) {\r\n    this.baseURL = environment.BASEURL;\r\n  }\r\n\r\n  getSubscriptionPlans(): Observable<SubscriptionPlan[]> {\r\n    return this._HttpClient.get<SubscriptionPlan[]>(`${this.baseURL}api/Subscription/GetAllSubscription`)\r\n  }\r\n\r\n  switchSubscriptionPlan(subscriptionPlanId: number): Observable<number> {\r\n    return this._HttpClient.put<any>(`${this.baseURL}api/Subscription/SwitchSubscriptionPlan?newSubscriptionId=${subscriptionPlanId}`, {})\r\n  }\r\n\r\n  getStripeSessionIdToCheckout(): Observable<string> {\r\n    return this._HttpClient.get<string>(`${this.baseURL}api/Subscription/SwitchSubscriptionPlan`);\r\n  }\r\n\r\n  sendSessionId(session: string): Observable<any> {\r\n    return this._HttpClient.post<any>(`http://192.168.1.57:7035/api/CheckOut/SucessPayment`, { sessionId: session });\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ToastService",
            "id": "injectable-ToastService-b6d6e1979b0adedffa72a7dcf885d90039e67517dd7abc7a39ee0432a5525a324213b7b569b4f09b3b44e52784ba3300c65d01edbc14f14304c878b48c7d927d",
            "file": "src/app/services/toast/toast.service.ts",
            "properties": [
                {
                    "name": "currentToast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Toast[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "timeOut",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Toast$",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addToast",
                    "args": [
                        {
                            "name": "toast",
                            "type": "Toast",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "toast",
                            "type": "Toast",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentToast",
                    "args": [],
                    "optional": false,
                    "returnType": "Toast",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToast",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Boolean>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Toast, ToastType } from '../../interfaces/toast';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  private Toast$: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n  timeOut!: any;\r\n  currentToast!: Toast[];\r\n\r\n  constructor() {\r\n    this.currentToast = []\r\n  }\r\n\r\n  addToast(toast: Toast) {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n    }\r\n    this.currentToast = [];\r\n    this.currentToast.push(toast);\r\n    this.Toast$.next(true);\r\n\r\n    this.timeOut = setTimeout(() => {\r\n      this.Toast$.next(false);\r\n      this.currentToast = [];\r\n    }, this.currentToast[0].duration)\r\n  }\r\n\r\n  toggleToast() {\r\n    this.Toast$.next(!this.Toast$.value);\r\n  }\r\n\r\n  getToast(): Observable<Boolean> {\r\n    return this.Toast$;\r\n  }\r\n\r\n  getCurrentToast(): Toast {\r\n    return this.currentToast[0];\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ToggleDeleteModalService",
            "id": "injectable-ToggleDeleteModalService-bcbc030a3e483a44962fc239fc249bad2c02ad9f75f67f9c27bff3cb378ef855f06a86c2140c5020dc99d54a60ad2e975ad7862c47d60ac3e26736fd8d5b8be5",
            "file": "src/app/services/toggleModal/toggle-delete-modal.service.ts",
            "properties": [
                {
                    "name": "filterToggler",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sortToggler",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggler",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getFilterValue",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Boolean>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSortValue",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Boolean>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToggleValue",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Boolean>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToggleDeleteModalService {\r\n\r\n  constructor() { }\r\n\r\n  private toggler: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  private filterToggler: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  private sortToggler: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  toggle() {\r\n    this.toggler.next(!this.toggler.value);\r\n  }\r\n\r\n  getToggleValue(): Observable<Boolean> {\r\n    return this.toggler;\r\n  }\r\n\r\n  toggleFilter() {\r\n    this.filterToggler.next(!this.filterToggler.value);\r\n  }\r\n\r\n  getFilterValue(): Observable<Boolean> {\r\n    return this.filterToggler;\r\n  }\r\n  toggleSort() {\r\n    this.sortToggler.next(!this.sortToggler.value);\r\n  }\r\n\r\n  getSortValue(): Observable<Boolean> {\r\n    return this.sortToggler;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ToggleService",
            "id": "injectable-ToggleService-824cbec0242beeb153a361ce64ec6ede704536a9d22ce9c7a66eed3fa56caca75959ae2b56c5e6c0f9718f06eecb2af1790121e613df8420bc5d04bc5405d970",
            "file": "src/app/services/toggleBtn/toggle.service.ts",
            "properties": [
                {
                    "name": "toggler",
                    "defaultValue": "new BehaviorSubject<Boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getToggleValue",
                    "args": [],
                    "optional": false,
                    "returnType": "BehaviorSubject<Boolean>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToggleService {\r\n  constructor() { }\r\n\r\n  private toggler: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\r\n\r\n  toggle() {\r\n    this.toggler.next(!this.toggler.value);\r\n  }\r\n\r\n  getToggleValue(): BehaviorSubject<Boolean> {\r\n    return this.toggler;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserManagementsService",
            "id": "injectable-UserManagementsService-606ea49eff42dd64294f48529584f78d162356ab66feafd830a2319aba881d7a35a8adf845e0f08395b8923d405285064070423b1a312c0fcb54d235dfb2be75",
            "file": "src/app/services/user-managements/user-managements.service.ts",
            "properties": [
                {
                    "name": "IsDescending",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "formData",
                            "type": "IUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "IUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ManageUser[]>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IUser } from '../../interfaces/iuser';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ManageUser } from '../../interfaces/manage-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserManagementsService {\r\n  IsDescending: boolean = false;\r\n  constructor(private _HttpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  addUser(formData: IUser): Observable<any> {\r\n    return this._HttpClient.post(``, formData);\r\n\r\n  }\r\n\r\n  getAllUsers(): Observable<ManageUser[]> {\r\n    return this._HttpClient.get<ManageUser[]>(`${environment.BASEURL}api/UserManagment/GetUserAllUsers`);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_HttpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppUser",
            "id": "class-AppUser-35775303c2574f4e3c3eac04aa2203265d405b53972ca7cdd9c6d505d7027497782cf003c3ec07ef7989149ff606d43fc36448ea5886e373e49b680ef8b58e8c",
            "file": "src/app/interfaces/app-user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AppUser {\r\n    fullName!: string;\r\n    email!: string;\r\n    token!: string;\r\n    emailConfirmed!: string;\r\n    expireDate!: string;\r\n    imageProfilePath?: string\r\n    roleName?: string;\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "emailConfirmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "expireDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageProfilePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ISignupRequest",
            "id": "class-ISignupRequest-70d5c2e22df4029003367edc7337b2f34440bd041a77a6a0ac96e83611066806e7f39867a99f4e1e5f06624fdad46e009fd78d7444ea76c6083bbe5f3bec9dbf",
            "file": "src/app/interfaces/signupinterface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ISignupRequest {\r\n    fullName!:string;\r\n    email!:string;\r\n    password!:string;\r\n    confirmPassword!:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "confirmPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IUser",
            "id": "class-IUser-3f5d42ebf4d7eec0579201eaba5f63a8311647b59fe6e32e9ec9e0f9d781b925b40387ded988522964f4eb14d57789123723e2661a4beba095a527b7da24988e",
            "file": "src/app/interfaces/iuser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class IUser {\r\n    fullName!:string;\r\n    email!:string;\r\n    password!:string;\r\n    confirmPassword!:string;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "confirmPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocalStorageKeys",
            "id": "class-LocalStorageKeys-89094cbce16e412e093982e74b6e0f80b12665e77c645b5cd5922a63b849402d600dcc5e0d3ecb3eda606b8cb962b2a6985bda0fd5ed663a52fc76df92659ef0",
            "file": "src/app/keys/local-storage-keys.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class LocalStorageKeys {\r\n    static USER_SESSION: string = \"userSession\";\r\n    static TOKEN: string = \"token\";\r\n}",
            "properties": [
                {
                    "name": "TOKEN",
                    "defaultValue": "\"token\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "USER_SESSION",
                    "defaultValue": "\"userSession\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Toast",
            "id": "class-Toast-246b2f047d00ce34753c91f935905a8d9ac94a2f15ce7ad8c40c462d6e9651a3293b2eb07af83acb7cdb2717e70c95f6da6ee586581905c730a03e72e452c020",
            "file": "src/app/interfaces/toast.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export enum ToastType {\r\n    System = \"system\",\r\n    Success = \"success\",\r\n    Failed = \"failed\",\r\n    Warning = \"warning\",\r\n}\r\n\r\nexport class Toast {\r\n\r\n    type: ToastType;\r\n    title: string;\r\n    message: string;\r\n    duration?: number;\r\n\r\n    constructor(type: ToastType, title: string, message: string, duration?: number) {\r\n        this.type = type;\r\n        this.title = title;\r\n        this.message = message;\r\n        if (duration)\r\n            this.duration = duration;\r\n        else\r\n            this.duration = 3000;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "type",
                        "type": "ToastType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "ToastType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToastType",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AutoFocusDirective",
            "id": "directive-AutoFocusDirective-5b209acad85a1fd5991d9433f9870482bd702d849cd9c801f480cafe86f63a7c05e037c5bbc627d3145af797c35e9611cb057b1cd0279e1ab20e6949bd0359c2",
            "file": "src/app/components/Authentication/directives/auto-focus.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAutoFocus]',\r\n  standalone: true\r\n})\r\nexport class AutoFocusDirective {\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('input', ['$event']) OnInput(event: KeyboardEvent): void {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.value && input.nextElementSibling) {\r\n      (input.nextElementSibling as HTMLInputElement).select();\r\n      (input.nextElementSibling as HTMLInputElement).focus();\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[appAutoFocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "OnInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'input', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "OutsideClickDirective",
            "id": "directive-OutsideClickDirective-b39d3e0681f2a36ec8f5d8ce81937174d17bbf353dcf86d3677747fa24876421117ca5c2b04fe54d1cb997b0a76cb345c70685af1f89be4afac3115f4efe7fb7",
            "file": "src/app/shared/directives/outside-click.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appOutsideClick]',\r\n  standalone: true\r\n})\r\nexport class OutsideClickDirective {\r\n\r\n  @Input() appOutSideClick!: boolean;\r\n  @Output() outSideClick: EventEmitter<void> = new EventEmitter();\r\n  constructor(private element: ElementRef, private renderer: Renderer2) { }\r\n\r\n  private listener: (() => void) | undefined;\r\n\r\n  // Execute this function when click outside of the dropdown-container\r\n  onDocumentClick = (event: Event) => {\r\n    if (!this.element.nativeElement.parentElement.contains(event.target)) {\r\n      this.outSideClick.emit();\r\n    }\r\n  };\r\n\r\n  //Add the listener when the dropdown component is rendered\r\n  ngOnInit(): void {\r\n    this.listener = this.renderer.listen(\r\n      'document',\r\n      'click',\r\n      this.onDocumentClick\r\n    );\r\n  }\r\n\r\n  //To reduce unnecessary memory leaks you need to use the clean-up\r\n  ngOnDestroy(): void {\r\n    if (this.listener) {\r\n      this.listener();\r\n    }\r\n  }\r\n\r\n}\r\n",
            "selector": "[appOutsideClick]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "appOutSideClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "outSideClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<void>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "listener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onDocumentClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "PasswordDirective",
            "id": "directive-PasswordDirective-eab533ec4cdffb87e95463f570f2bb5934bec3c3510663a43803b48ec2a3a52c18fc3d36f34dc9b425710f5ad78ae3a8d8c06690bf3b284d18a0b076cf8e86d0",
            "file": "src/app/components/Authentication/directives/password.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appPassword]',\r\n  standalone: true\r\n})\r\nexport class PasswordDirective {\r\n  private lastInputTime: number = 1000;\r\n  private tempInput: string = '';\r\n  private currentInput: string = '';\r\n  private timeoutTemp: any = undefined;\r\n  private timeoutFlag: boolean = false;\r\n\r\n  @Input('appPassword') currentPasswordType!: boolean;\r\n  @Output() onChangeInputValue = new EventEmitter<string>();\r\n\r\n  constructor(private ele: ElementRef, private zone: NgZone) { }\r\n\r\n  @HostListener('input', ['$event']) onInput(inputEvent: any) {\r\n\r\n    const input = this.ele.nativeElement as HTMLInputElement;\r\n\r\n    // Checking for the input event if it's delete to remove items form the text.\r\n    if (inputEvent.inputType == \"deleteContentBackward\" || inputEvent.inputType == \"deleteContentForward\") {\r\n      if (input.value.length >= 0) {\r\n        this.currentInput = input.value.slice(0, input.value.length)\r\n        this.onChangeInputValue.emit(this.currentInput)\r\n      }\r\n    } else {\r\n      // Check in the second input to remove the timeout\r\n      if (this.timeoutTemp) {\r\n        clearTimeout(this.timeoutTemp);\r\n        this.timeoutFlag = true;\r\n        this.currentInput = this.currentInput.concat(input.value.slice(-1));\r\n        input.value = this.currentInput;\r\n        this.onChangeInputValue.emit(this.currentInput)\r\n        input.type = 'text';\r\n      }\r\n      // will go in for the first input only\r\n      if (!this.timeoutFlag) {\r\n        this.currentInput = input.value;\r\n      }\r\n\r\n      // Will go in if the show password is not visiable (passwor is bullets)\r\n      if (!this.currentPasswordType) {\r\n        this.tempInput = '•'.repeat(input.value.length - 1);\r\n        input.value = this.tempInput.concat(input.value.slice(-1)); // getting the last character in the input value and add it to the end of the text to be shown\r\n        input.type = 'text';\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n          this.timeoutTemp = setTimeout(() => {\r\n            this.zone.run(() => {\r\n              input.value = this.currentInput;\r\n              this.onChangeInputValue.emit(this.currentInput)\r\n              input.type = 'password';\r\n            });\r\n          }, this.lastInputTime);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}",
            "selector": "[appPassword]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "appPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChangeInputValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "inputEvent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentInput",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lastInputTime",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tempInput",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeoutFlag",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeoutTemp",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "inputEvent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'input', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "inputEvent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ele",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "ele",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ToggleFilterDirective",
            "id": "directive-ToggleFilterDirective-4e640b14bfcdb4cf3124b78ae62a609f945554b09410eb2047fb30f623a9aafe447f5d136e33e1d74a372bfebfe1306580abed8cbc1c7c30f75f6e1b06104924",
            "file": "src/app/shared/directives/toggle-filter.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appToggleFilter]',\r\n  standalone: true\r\n})\r\nexport class ToggleFilterDirective {\r\n\r\n  @HostBinding('class.showFilter') isOpen: Boolean = false;\r\n\r\n  @HostListener('click') toggleFilter() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
            "selector": "[appToggleFilter]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.showFilter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.showFilter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            }
        }
    ],
    "components": [
        {
            "name": "AddUserComponent",
            "id": "component-AddUserComponent-4a03ee95453422206c1213ba69ab5495bc6c1c0716359903335d39af6482bce9456f23eb2c646e3bbbb5cab0abd5fa94f2947b9ebb014a774eb68c101189aa45",
            "file": "src/app/components/core/add-user/add-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./add-user.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addAccountModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "addUser",
                    "defaultValue": "new FormGroup({\r\n    fullName: new FormControl(null, [Validators.required]),\r\n    email: new FormControl(null, [Validators.required]),\r\n    password: new FormControl(null),\r\n    confirmPassword: new FormControl(null),\r\n    roleId: new FormControl(null),\r\n    profileImagePath: new FormControl(null),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isavailable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "AddUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CardModalComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CardModalComponent } from '../../../shared/pop-up-card/card-modal/card-modal.component';\r\nimport { ToggleDeleteModalService } from '../../../services/toggleModal/toggle-delete-modal.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, CardModalComponent, CommonModule],\r\n  templateUrl: './add-user.component.html',\r\n  styleUrl: './add-user.component.css'\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  isavailable!: Boolean;\r\n  addAccountModal!: Boolean;\r\n\r\n\r\n  addUser: FormGroup = new FormGroup({\r\n    fullName: new FormControl(null, [Validators.required]),\r\n    email: new FormControl(null, [Validators.required]),\r\n    password: new FormControl(null),\r\n    confirmPassword: new FormControl(null),\r\n    roleId: new FormControl(null),\r\n    profileImagePath: new FormControl(null),\r\n  })\r\n\r\n  constructor(private _ToggleAddModalService: ToggleDeleteModalService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this._ToggleAddModalService.getToggleValue().subscribe({\r\n      next: (toggler) => {\r\n        this.isavailable = toggler;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  close() {\r\n    this.isavailable = false;\r\n    this._ToggleAddModalService.toggle();\r\n  }\r\n\r\n\r\n  AddUser() {\r\n    console.log(this.addUser)\r\n  }\r\n\r\n\r\n}\r\n",
            "styleUrl": "./add-user.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ToggleAddModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "_ToggleAddModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "@if( isavailable){\r\n\r\n<div class=\"container\">\r\n  <div class=\"add-user-container\">\r\n    <div class=\"user-header\">\r\n      <div class=\"header-icons\">\r\n        <div class=\"header-text\">\r\n          <h3>Create New User</h3>\r\n          <p>Lorem ipsum is placeholder text commonly</p>\r\n        </div>\r\n\r\n        <img\r\n          src=\"assets/images/Frame 1000016151.svg\"\r\n          alt=\"\"\r\n          (click)=\"close()\"\r\n        />\r\n      </div>\r\n      <div class=\"hr\"></div>\r\n\r\n      <div class=\"user-background\">\r\n        <div class=\"user-info\">\r\n          <img src=\"assets/images/add-user.svg\" alt=\"user-img\" />\r\n          <div class=\"edit\"><img src=\"assets/images/edit2.svg\" alt=\"\" /></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"user-form\">\r\n      <form [formGroup]=\"addUser\" (ngSubmit)=\"AddUser()\">\r\n        <div class=\"full-input\">\r\n          <label for=\"name\"> Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Haitham Mohamed\"\r\n            formControlName=\"fullName\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"inputs-container\">\r\n          <div class=\"input\">\r\n            <div class=\"input\">\r\n              <label for=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                placeholder=\"HaithamMohamed@saptiumsoftware.com\"\r\n                formControlName=\"email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"input\">\r\n            <label for=\"selectRole\">Role & Permissions</label>\r\n\r\n            <select name=\"\" id=\"selectRole\">\r\n              <option value=\"\">Super Admin</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"inputs-container\">\r\n          <div class=\"input\">\r\n            <label for=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"*****************\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label for=\"confirm-password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm-password\"\r\n              placeholder=\"***************\"\r\n              formControlName=\"confirmPassword\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"hr\"></div>\r\n        <div class=\"user-form-footer\">\r\n          <button type=\"button\" (click)=\"close()\">Cancel</button>\r\n          <button [disabled]=\"addUser.invalid\" type=\"submit\">Add User</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n}\r\n\r\n<!-- <div\r\n  class=\"card-modal\"\r\n  [ngClass]=\"{ hide: !addAccountModal, show: addAccountModal }\"\r\n>\r\n  <app-card-modal\r\n    [title]=\"'Are you sure to delete the account?'\"\r\n    [description]=\"\r\n      'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly'\r\n    \"\r\n    [backgroundImg]=\"'http://localhost:4200/assets/images/ellipse.svg'\"\r\n    [icon_path]=\"'assets/images/delete_icon.svg'\"\r\n    [cancel]=\"'Cancel'\"\r\n    [action]=\"'Delete Account'\"\r\n    [actionBackground]=\"'rgba(241, 65, 108, 1);'\"\r\n    (actionBtn)=\"AddUser()\"\r\n    (cancelBtn)=\"closeModal()\"\r\n  ></app-card-modal>\r\n</div> -->\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f8a184efb4e4d6a301da365cf2e59299fdd527f733deb000311a55e5e52687434af5e4525ad535d812bc620f2ea510f0c86bb195a2b9239473b8501b625fdc37",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "animationState",
                    "defaultValue": "'out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "currentToast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Toast",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "title",
                    "defaultValue": "'crmproject'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "ToastValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closingAnyMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getState",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "SignupComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ToastSystemComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { SignupComponent } from './components/Authentication/signup/signup.component';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { style, transition, trigger, group, query, animate, state } from '@angular/animations';\r\nimport { NavigationService } from './globalAnimation/navigation.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { LocalStorageKeys } from './keys/local-storage-keys';\r\nimport { ToastSystemComponent } from './shared/toasts/system/toast-system.component';\r\nimport { ToastService } from './services/toast/toast.service';\r\nimport { Toast, ToastType } from './interfaces/toast';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, SignupComponent, ReactiveFormsModule, ToastSystemComponent, CommonModule],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css',\r\n  animations: [\r\n    trigger('routerTransition', [\r\n      transition('* <=> *', [\r\n        query(':enter, :leave', style({ position: 'fixed', width: '100%' }), { optional: true }),\r\n        group([\r\n          query(':enter', [\r\n            style({ transform: 'translateX(100%)' }),\r\n            animate('0.7s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n          ], { optional: true }),\r\n          query(':leave', [\r\n            style({ transform: 'translateX(0%)' }),\r\n            animate('0.7s ease-in-out', style({ transform: 'translateX(-100%)' }))], { optional: true }),\r\n        ])\r\n      ]),\r\n    ])\r\n  ],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  animationState = 'out';\r\n  ToastValue!: Boolean;\r\n  currentToast!: Toast;\r\n  constructor(private navigationService: NavigationService, private _AuthService: AuthService, private _ToastService: ToastService) {\r\n    this.ToastValue = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._ToastService.getToast().subscribe({\r\n      next: (toast) => {\r\n        this.ToastValue = toast;\r\n        if (this.ToastValue) {\r\n          console.log(this.currentToast);\r\n          this.currentToast = this._ToastService.getCurrentToast();\r\n        }\r\n      }\r\n    })\r\n\r\n    if (localStorage.getItem(LocalStorageKeys.USER_SESSION)) {\r\n      this._AuthService.setUserOnBootstrap(JSON.parse(localStorage.getItem(LocalStorageKeys.USER_SESSION) || \"\"));\r\n    }\r\n  }\r\n\r\n  closeToast() {\r\n    this._ToastService.toggleToast()\r\n  }\r\n\r\n  getState(outlet: any) {\r\n    return this.navigationService.animationValue;\r\n  }\r\n\r\n  closingAnyMenu(){\r\n    \r\n  }\r\n\r\n  title = 'crmproject';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_AuthService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_AuthService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html (click)=\"closingAnyMenu()\">\r\n<div style=\"height: 100%\" class=\"container\" [@routerTransition]=\"getState(o)\">\r\n  @if(ToastValue){\r\n  <div class=\"toast-container2\">\r\n    <app-toast-system [toastType]=\"currentToast.type\" [label]=\"currentToast.title\" [info]=\"currentToast.message\"\r\n      (closeT)=\"closeToast()\"></app-toast-system>\r\n  </div>\r\n  }\r\n  <router-outlet #o=\"outlet\"></router-outlet>\r\n</div>"
        },
        {
            "name": "AuthButtonComponent",
            "id": "component-AuthButtonComponent-2b10319b83c178780ddeea89ff6149729e3ca1cecbc2df8d1f8897063786c938fad1ca0d5c0bff72913c3f73fe21c7ac4de889d90f4bb08e1e56c76a14816607",
            "file": "src/stories/buttons/authButton/authButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-authButton",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authButton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authButton',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './authButton.component.html',\r\n  styleUrl: './authButton.component.css'\r\n})\r\nexport class AuthButtonComponent implements OnInit {\r\n\r\n  @Input('label') label!: string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n",
            "styleUrl": "./authButton.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"button-container\">\r\n  <div class=\"button\">\r\n    {{label}}\r\n  </div>\r\n</div>"
        },
        {
            "name": "AuthSliderComponent",
            "id": "component-AuthSliderComponent-7243772a16ddf6d244b5c38c31d864aec84e2630c9e79336e1cd2e60a8defdd9b5caabc873e29f62ea6200e20ab09c9c9da2de7c61ec927d9fafc832d73e0f36",
            "file": "src/stories/authSlider/authslide.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-authButton",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authslide.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "slides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'icon'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "slideIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "currentSlide",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSlides",
                    "args": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slideIndex"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slideIndex",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authButton',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './authslide.component.html',\r\n  styleUrl: './authslide.component.css'\r\n})\r\nexport class AuthSliderComponent implements OnInit {\r\n\r\n  @Input('slides') slides!: string[];\r\n  @Input('backgroundImg') backgroundImg!: string;\r\n  @ViewChild('icon') icon!: ElementRef;\r\n  slideIndex!: number;\r\n\r\n  constructor() {\r\n    this.slides = [\r\n      'illustration-signup.png',\r\n      'second-signup-img.svg',\r\n    ]\r\n    this.slideIndex = 0;\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngOnChange() {\r\n    this.icon.nativeElement.style.backgroundImage = `http://localhost:6006/assets/${this.backgroundImg}`;\r\n    console.log(`http://localhost:6006/assets/${this.backgroundImg}`);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.icon.nativeElement.style.backgroundImage = `http://localhost:6006/assets/${this.backgroundImg}`;\r\n    console.log(`http://localhost:6006/assets/${this.backgroundImg}`);\r\n  }\r\n\r\n  showSlides(i = this.slideIndex) {\r\n    let silde = this.slides[i];\r\n    return silde;\r\n  }\r\n\r\n  currentSlide(i: number) {\r\n    this.slideIndex = i;\r\n    return this.showSlides();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./authslide.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"SlidesContainer\" #icon>\r\n  <!-- Slideshow container -->\r\n  <div class=\"slideshow-container\">\r\n    <!-- Full-width images with number and caption text -->\r\n    <div id=\"mySlide\" class=\"mySlides fade\">\r\n      <div class=\"cardDiv\">\r\n        <div class=\"avatar\" [ngClass]=\"{ hide: slideIndex == 1 }\">\r\n          <img src=\"data.svg\" alt=\"Data\" class=\"insideImg\" id=\"inside\" />\r\n        </div>\r\n\r\n        <img [src]=\"showSlides()\" alt=\"Slides\" class=\"img1\" />\r\n      </div>\r\n      <div class=\"text\">\r\n        <p style=\"font-size: 22px; font-weight: 500\">\r\n          Manage Any Content Anywhere\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis\r\n          repellat modi dicta suscipit vero\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dots\" style=\"text-align: center\">\r\n\r\n    <a class=\"arrows\" (click)=\"currentSlide(0)\">\r\n      @if(slideIndex===0){\r\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" style=\"opacity: 0.1;\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M9.76873 18.8963C9.95873 18.8963 10.1487 18.8263 10.2987 18.6763C10.5887 18.3863 10.5887 17.9063 10.2987 17.6163L4.75873 12.0763L10.2987 6.53629C10.5887 6.24629 10.5887 5.76629 10.2987 5.47629C10.0087 5.18629 9.52873 5.18629 9.23873 5.47629L3.16873 11.5463C2.87873 11.8363 2.87873 12.3163 3.16873 12.6063L9.23873 18.6763C9.38873 18.8263 9.57873 18.8963 9.76873 18.8963Z\"\r\n          fill=\"white\" />\r\n        <path\r\n          d=\"M3.86873 12.8262H20.6987C21.1087 12.8262 21.4487 12.4862 21.4487 12.0762C21.4487 11.6662 21.1087 11.3262 20.6987 11.3262H3.86873C3.45873 11.3262 3.11873 11.6662 3.11873 12.0762C3.11873 12.4862 3.45873 12.8262 3.86873 12.8262Z\"\r\n          fill=\"white\" />\r\n      </svg>\r\n\r\n      }@else {\r\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M9.76873 18.896C9.95873 18.896 10.1487 18.826 10.2987 18.676C10.5887 18.386 10.5887 17.906 10.2987 17.616L4.75873 12.076L10.2987 6.53604C10.5887 6.24604 10.5887 5.76604 10.2987 5.47604C10.0087 5.18604 9.52873 5.18604 9.23873 5.47604L3.16873 11.546C2.87873 11.836 2.87873 12.316 3.16873 12.606L9.23873 18.676C9.38873 18.826 9.57873 18.896 9.76873 18.896Z\"\r\n          fill=\"white\" />\r\n        <path\r\n          d=\"M3.86873 12.8259H20.6987C21.1087 12.8259 21.4487 12.4859 21.4487 12.0759C21.4487 11.6659 21.1087 11.3259 20.6987 11.3259H3.86873C3.45873 11.3259 3.11873 11.6659 3.11873 12.0759C3.11873 12.4859 3.45873 12.8259 3.86873 12.8259Z\"\r\n          fill=\"white\" />\r\n      </svg>\r\n      }\r\n    </a>\r\n\r\n    @if(slideIndex===0){\r\n    <svg width=\"8\" height=\"9\" viewBox=\"0 0 8 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n      [ngClass]=\"{ 'active-dot': slideIndex == 0 }\">\r\n      <rect opacity=\"0.6\" x=\"0.36792\" y=\"0.723877\" width=\"7.28889\" height=\"7.28889\" rx=\"3.64444\" fill=\"white\" />\r\n    </svg>\r\n    }@else{\r\n    <svg width=\"8\" height=\"9\" viewBox=\"0 0 8 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n      (click)=\"currentSlide(0)\">\r\n      <rect opacity=\"0.6\" x=\"0.123474\" y=\"0.723877\" width=\"7.28889\" height=\"7.28889\" rx=\"3.64444\" fill=\"white\" />\r\n    </svg>\r\n\r\n    }\r\n\r\n    @if(slideIndex===1){\r\n    <svg width=\"8\" height=\"9\" viewBox=\"0 0 8 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n      [ngClass]=\"{ 'active-dot': slideIndex == 1 }\">\r\n      <rect opacity=\"0.6\" x=\"0.36792\" y=\"0.723877\" width=\"7.28889\" height=\"7.28889\" rx=\"3.64444\" fill=\"white\" />\r\n    </svg>\r\n    }@else{\r\n    <svg width=\"8\" height=\"9\" viewBox=\"0 0 8 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n      (click)=\"currentSlide(1)\">\r\n      <rect opacity=\"0.6\" x=\"0.123474\" y=\"0.723877\" width=\"7.28889\" height=\"7.28889\" rx=\"3.64444\" fill=\"white\" />\r\n    </svg>\r\n\r\n    }\r\n\r\n    <a class=\"arrows\" (click)=\"currentSlide(1)\">\r\n      @if(slideIndex===1){\r\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" style=\"opacity: 0.1;\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M14.9647 18.9664C14.7747 18.9664 14.5847 18.8964 14.4347 18.7464C14.1447 18.4564 14.1447 17.9764 14.4347 17.6864L19.9747 12.1464L14.4347 6.60636C14.1447 6.31636 14.1447 5.83636 14.4347 5.54636C14.7247 5.25636 15.2047 5.25636 15.4947 5.54636L21.5647 11.6164C21.8547 11.9064 21.8547 12.3864 21.5647 12.6764L15.4947 18.7464C15.3447 18.8964 15.1547 18.9664 14.9647 18.9664Z\"\r\n          fill=\"white\" />\r\n        <path\r\n          d=\"M20.8647 12.8962H4.03467C3.62467 12.8962 3.28467 12.5562 3.28467 12.1462C3.28467 11.7362 3.62467 11.3962 4.03467 11.3962H20.8647C21.2747 11.3962 21.6147 11.7362 21.6147 12.1462C21.6147 12.5562 21.2747 12.8962 20.8647 12.8962Z\"\r\n          fill=\"white\" />\r\n      </svg>\r\n      }@else {\r\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M14.9647 18.9664C14.7747 18.9664 14.5847 18.8964 14.4347 18.7464C14.1447 18.4564 14.1447 17.9764 14.4347 17.6864L19.9747 12.1464L14.4347 6.60636C14.1447 6.31636 14.1447 5.83636 14.4347 5.54636C14.7247 5.25636 15.2047 5.25636 15.4947 5.54636L21.5647 11.6164C21.8547 11.9064 21.8547 12.3864 21.5647 12.6764L15.4947 18.7464C15.3447 18.8964 15.1547 18.9664 14.9647 18.9664Z\"\r\n          fill=\"white\" />\r\n        <path\r\n          d=\"M20.8647 12.8962H4.03467C3.62467 12.8962 3.28467 12.5562 3.28467 12.1462C3.28467 11.7362 3.62467 11.3962 4.03467 11.3962H20.8647C21.2747 11.3962 21.6147 11.7362 21.6147 12.1462C21.6147 12.5562 21.2747 12.8962 20.8647 12.8962Z\"\r\n          fill=\"white\" />\r\n      </svg>\r\n      }\r\n    </a>\r\n\r\n  </div>\r\n\r\n</div>"
        },
        {
            "name": "BlogComponent",
            "id": "component-BlogComponent-c847950e2c5f3c6bddabd05a43cc3791d1a36481cddf86793f8652c7c2376f24d39c5959862ac4eb1c486970de549a9317a4799a1ed9b62bf5986d95d71faf05",
            "file": "src/app/components/core/blog/blog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { BreadcrumbService } from '../../../services/breadcrumb/breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './blog.component.html',\r\n  styleUrl: './blog.component.css'\r\n})\r\nexport class BlogComponent implements OnInit {\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService) { }\r\n\r\n  ngOnInit() {\r\n    this._BreadCurmb.changeCurrentPath();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./blog.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>blog works!</p>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c3bd323da00016e22e16a3a7d43440094eeceddea5e6076a399bcaba62f8e742efe65e543735e36f9ea1bed026ab8e3c8fb60482667ae55ec324f8adfe79b9f7",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 837,
                            "end": 851,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 838,
                                "end": 846,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-0aa6a6a05312bf8ce22bf22f13db2c60632e8d398efedbb909e64ea8e4a30361cffbd768118c46f0365d5b04a1039d1488ada948db6be3ef35beeb8307c73e18",
            "file": "src/stories/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description_continue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "total_number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCall",
                    "defaultValue": "new EventEmitter<String>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "something",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.css'\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input('icon_path') icon_path!: string;\r\n  @Input('title') title!: string;\r\n  @Input('description') description!: string;\r\n  @Input('description_continue') description_continue!: string;\r\n  @Input('total_number') total_number!: string;\r\n  @Output() onCall = new EventEmitter<String>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngOnChanges(): void { }\r\n\r\n  something() {\r\n    this.onCall.emit('data');\r\n  }\r\n}\r\n",
            "styleUrl": "./card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-container\">\r\n  <div class=\"card\" (click)=\"something()\">\r\n    <div class=\"info\">\r\n      <div class=\"main-info\">\r\n        <div class=\"icon\">\r\n          <img [src]=\"icon_path\" alt=\"icon\" />\r\n        </div>\r\n        <div class=\"title\">{{ title }}</div>\r\n      </div>\r\n      <small class=\"description\">{{ description }} <br />\r\n        {{ description_continue }}</small>\r\n    </div>\r\n    <div class=\"total-number\">{{ total_number }}</div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-aa4adca5307bc8d2d5052dc4b1ebee025ebfd1bca6622409b7506dd52d77aa7cbe42a305f9dfb4c69a3613d6e6fa6e17105f43ca885041675c8870118d936495-1",
            "file": "src/app/shared/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description_continue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "total_number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCall",
                    "defaultValue": "new EventEmitter<String>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "something",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.css'\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input('icon_path') icon_path!: string;\r\n  @Input('title') title!: string;\r\n  @Input('description') description!: string;\r\n  @Input('description_continue') description_continue!: string;\r\n  @Input('total_number') total_number!: string;\r\n  @Output() onCall = new EventEmitter<String>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngOnChanges(): void { }\r\n\r\n  something() {\r\n    this.onCall.emit('ssssssssssss');\r\n  }\r\n}\r\n",
            "styleUrl": "./card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CardComponent-1",
            "templateData": "<div class=\"card\" (click)=\"something()\">\r\n  <div class=\"info\">\r\n    <div class=\"main-info\">\r\n      <div class=\"icon\">\r\n        <img [src]=\"icon_path\" alt=\"icon\" />\r\n      </div>\r\n      <div class=\"title\">{{ title }}</div>\r\n    </div>\r\n    <small class=\"description\"\r\n      >{{ description }} <br />\r\n      {{ description_continue }}</small\r\n    >\r\n  </div>\r\n  <div class=\"total-number\">{{ total_number }}</div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CardModalComponent",
            "id": "component-CardModalComponent-a757a7a92302abbec6bc4fb10d01e36c6e92093619ee11bf1190caab966ef360f1819b7f2cf692f4dbe0f35c43e945f1ab9c64db85acf135c721669d09d007f5",
            "file": "src/stories/pop-up-card/card-modal/card-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "actionBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cancel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionBtn",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "cancelBtn",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "deleteAccountModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'icon'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ToggleDeleteModalService } from '../../../app/services/toggleModal/toggle-delete-modal.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-modal',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './card-modal.component.html',\r\n  styleUrl: './card-modal.component.css'\r\n})\r\nexport class CardModalComponent {\r\n\r\n  deleteAccountModal!: Boolean;\r\n\r\n  @Input('title') title!: string;\r\n  @Input('description') description!: string;\r\n  @Input('cancel') cancel!: string;\r\n  @Input('action') action!: string;\r\n  @Input('actionBackground') actionBackground!: string;\r\n  @Input('icon_path') icon_path!: string;\r\n  @Input('backgroundImg') backgroundImg!: string;\r\n\r\n  @Output() actionBtn = new EventEmitter<Event>();\r\n  @Output() cancelBtn = new EventEmitter<Event>();\r\n  @ViewChild('icon') icon!: ElementRef;\r\n  constructor(private _ToggleDeleteModalService: ToggleDeleteModalService) {\r\n    this.deleteAccountModal = false\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._ToggleDeleteModalService.getToggleValue().subscribe({\r\n      next: (toggler) => {\r\n        this.deleteAccountModal = toggler;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  ngOnChange() {\r\n    this.icon.nativeElement.style.backgroundImage = `${environment.BASEURL}assets/${this.backgroundImg}`;\r\n    console.log(`${environment.BASEURL}assets/${this.backgroundImg}`\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.icon.nativeElement.style.backgroundImage = `${environment.BASEURL}assets/${this.backgroundImg}`;\r\n    console.log(`${environment.BASEURL}assets/${this.backgroundImg}`);\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this._ToggleDeleteModalService.toggle();\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "styleUrl": "./card-modal.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"card-container\" [ngClass]=\"{ hide: !deleteAccountModal, container: deleteAccountModal }\">\r\n\r\n  @if(action === \"Delete Account\"){\r\n  <svg class=\"background-corner\" width=\"163\" height=\"108\" viewBox=\"0 0 163 108\" fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"57\" cy=\"2\" r=\"106\" fill=\"url(#paint0_radial_807_31180)\" fill-opacity=\"0.08\" />\r\n    <defs>\r\n      <radialGradient id=\"paint0_radial_807_31180\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(57 2) rotate(90) scale(106)\">\r\n        <stop stop-color=\"#F1416C\" />\r\n        <stop offset=\"1\" stop-color=\"#F1416C\" stop-opacity=\"0\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n  }\r\n  @else if (action == \"Save Changes\") {\r\n  <svg class=\"background-corner\" width=\"139\" height=\"122\" viewBox=\"0 0 139 122\" fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"33\" cy=\"16\" r=\"106\" fill=\"url(#paint0_radial_1155_29972)\" fill-opacity=\"0.08\" />\r\n    <defs>\r\n      <radialGradient id=\"paint0_radial_1155_29972\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(33 16) rotate(90) scale(106)\">\r\n        <stop stop-color=\"#F6C000\" />\r\n        <stop offset=\"1\" stop-color=\"#F6C000\" stop-opacity=\"0\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n\r\n  }@else {\r\n  <svg class=\"background-corner\" width=\"163\" height=\"108\" viewBox=\"0 0 163 108\" fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"57\" cy=\"2\" r=\"106\" fill=\"url(#paint0_radial_807_31208)\" fill-opacity=\"0.08\" />\r\n    <defs>\r\n      <radialGradient id=\"paint0_radial_807_31208\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(57 2) rotate(90) scale(106)\">\r\n        <stop stop-color=\"#0660FC\" />\r\n        <stop offset=\"1\" stop-color=\"#0660FC\" stop-opacity=\"0\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n  }\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n\r\n        <div class=\"delete-icon\" (click)=\"closeModal()\">\r\n          <img src=\"delete-icon.svg\" alt=\"delete\" />\r\n        </div>\r\n        <div class=\"icon\" #icon>\r\n          <img [src]=\"icon_path\" alt=\"delete\" />\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h4>{{ title }}</h4>\r\n          <p>\r\n            {{ description }}\r\n          </p>\r\n        </div>\r\n        <div class=\"card-actions\">\r\n          <button class=\"cancel\" (click)=\"this.cancelBtn.emit()\">\r\n            {{ cancel }}\r\n          </button>\r\n          <button class=\"action\" [ngStyle]=\"{ 'background-color': actionBackground }\" (click)=\"this.actionBtn.emit()\">\r\n            {{ action }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "CardModalComponent",
            "id": "component-CardModalComponent-9808b9682f5f87116c85c1eeab245fa580e37905a617ba3b72690a2ad171d68e50b502b3c10169952b3fd04b4404c010e071137cc1d60729b810bf808f651bda-1",
            "file": "src/app/shared/pop-up-card/card-modal/card-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "actionBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cancel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionBtn",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "cancelBtn",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "deleteAccountModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToggleDeleteModalService } from '../../../services/toggleModal/toggle-delete-modal.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-card-modal',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './card-modal.component.html',\r\n  styleUrl: './card-modal.component.css'\r\n})\r\nexport class CardModalComponent {\r\n\r\n  deleteAccountModal!: Boolean;\r\n\r\n  @Input('title') title!: string;\r\n  @Input('description') description!: string;\r\n  @Input('cancel') cancel!: string;\r\n  @Input('action') action!: string;\r\n  @Input('actionBackground') actionBackground!: string;\r\n  @Input('icon_path') icon_path!: string;\r\n  @Input('backgroundImg') backgroundImg!: string;\r\n\r\n  @Output() actionBtn = new EventEmitter<Event>();\r\n  @Output() cancelBtn = new EventEmitter<Event>();\r\n\r\n  constructor(private _ToggleDeleteModalService: ToggleDeleteModalService) {\r\n    this.deleteAccountModal = false\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._ToggleDeleteModalService.getToggleValue().subscribe({\r\n      next: (toggler) => {\r\n        this.deleteAccountModal = toggler;\r\n      }\r\n    })\r\n  }\r\n\r\n  closeModal() {\r\n    this._ToggleDeleteModalService.toggle();\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "styleUrl": "./card-modal.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CardModalComponent-1",
            "templateData": "<div [ngClass]=\"{ hide: !deleteAccountModal, container: deleteAccountModal }\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"delete-icon\" (click)=\"closeModal()\">\r\n          <img src=\"assets/images/delete-icon.svg\" alt=\"delete\" />\r\n        </div>\r\n        <div class=\"icon\" [ngStyle]=\"{ 'background-image': backgroundImg }\">\r\n          <img [src]=\"icon_path\" alt=\"delete\" />\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h4>{{ title }}</h4>\r\n          <p>\r\n            {{ description }}\r\n          </p>\r\n        </div>\r\n        <div class=\"card-actions\">\r\n          <button class=\"cancel\" (click)=\"this.cancelBtn.emit()\">\r\n            {{ cancel }}\r\n          </button>\r\n          <button\r\n            class=\"action\"\r\n            [ngStyle]=\"{ 'background-color': actionBackground }\"\r\n            (click)=\"this.actionBtn.emit()\"\r\n          >\r\n            {{ action }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CmsMainComponent",
            "id": "component-CmsMainComponent-985b1bfadd375de315ba082713751a85495cbc938621867a908c900d5189ac3b8056f180f27fe2c19be5d206a1713fcb05af553ef2027cdd65459247325a4679",
            "file": "src/app/components/core/cms-main/cms-main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cms-main",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cms-main.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "request",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "toggler_val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SidebarComponent",
                    "type": "component"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SidebarComponent } from '../../../shared/sidebar/sidebar.component';\r\nimport { HeaderComponent } from '../../../shared/header/header.component';\r\nimport { ToggleService } from '../../../services/toggleBtn/toggle.service';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\nimport { InterceptorLoaderRequestService } from '../../../services/request/interceptor-loader-request.service';\r\n\r\n@Component({\r\n  selector: 'app-cms-main',\r\n  standalone: true,\r\n  imports: [RouterOutlet, CommonModule, SidebarComponent, HeaderComponent, SpinnerComponent],\r\n  templateUrl: './cms-main.component.html',\r\n  styleUrl: './cms-main.component.css'\r\n})\r\nexport class CmsMainComponent {\r\n  request!: Boolean;\r\n  toggler_val!: Boolean;\r\n\r\n  constructor(private _Toggle: ToggleService, private _InterceptorLoaderRequestService: InterceptorLoaderRequestService) { }\r\n\r\n  ngOnInit() {\r\n    this._Toggle.getToggleValue().subscribe({\r\n      next: (res) => {\r\n        this.toggler_val = res;\r\n      }\r\n    });\r\n    this._InterceptorLoaderRequestService.getIncomingRequests().subscribe({\r\n      next: (res) => { this.request = res },\r\n      error: (err) => {\r\n        console.log(err);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./cms-main.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_InterceptorLoaderRequestService",
                        "type": "InterceptorLoaderRequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_InterceptorLoaderRequestService",
                        "type": "InterceptorLoaderRequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"sidebar\" [ngClass]=\"toggler_val ? 'toggle' : 'beforeToggle'\">\r\n      <app-sidebar></app-sidebar>\r\n    </div>\r\n    <div class=\"col-12\" [ngClass]=\"\r\n        toggler_val\r\n          ? 'beside-sidebar-with-no-margin'\r\n          : 'beside-sidebar-with-margin'\r\n      \">\r\n      <div class=\"row header\">\r\n        <div class=\"col-12 head-side\">\r\n          <app-header></app-header>\r\n        </div>\r\n        <div class=\"content\">\r\n          @if(request){\r\n            <div class=\"spinner\">\r\n              <app-spinner></app-spinner>\r\n            </div>\r\n          }@else {\r\n          <router-outlet></router-outlet>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "CorrectchagesComponent",
            "id": "component-CorrectchagesComponent-720817baba43ed694aa8f1e335d34325ff1d251d9f05492068efa4a520c90076e4a9f8112b2f45e74f017134110ef982c2d1048526a47aa1c5719535fe27c030",
            "file": "src/app/components/Authentication/correctchages/correctchages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-correctchages",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./correctchages.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-correctchages',\r\n  standalone: true,\r\n  imports: [RouterModule],\r\n  templateUrl: './correctchages.component.html',\r\n  styleUrl: './correctchages.component.css',\r\n  animations: [\r\n    trigger('flipInOut', [\r\n      transition(':enter', [\r\n        animate('1s', style({ transform: 'rotateY(90deg)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('1s', style({ transform: 'rotateY(180deg)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CorrectchagesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./correctchages.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container\">\r\n  <div class=\"projName\">\r\n    <div class=\"nameContainer\">\r\n      <div><img src=\"assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n      <div class=\"projNDiv\">\r\n        <p class=\"Name\">CMS Software</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loginContainer\" id=\"loginContainerId\">\r\n    <div class=\"bg3\">\r\n      <div class=\"loginDiv\">\r\n        <div class=\"content\">\r\n          <div>\r\n            <img src=\"assets/images/Animation - 1702803941821.gif\" alt=\"\" width=\"250px\" />\r\n          </div>\r\n          <h1>Password Changed</h1>\r\n          <p class=\"info1\">Your password has been changed</p>\r\n          <button routerLink=\"/auth/signin\"><a class=\"Link\">LOG IN</a></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "EmailInputComponent",
            "id": "component-EmailInputComponent-181c0e7d981a488adcbaad150dc708245bc6428acd45cc0a0b7c4cbaeb7dad581ab69aee320a5720f0a2a383ee3e80a1d0b9bc82812ae91f84d78796815fa689",
            "file": "src/stories/inputs/email-input/email.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-email",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./email.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControlName",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'email'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "inpTextForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControlName, FormGroup, FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-email',\r\n  standalone: true,\r\n  imports: [FormsModule],\r\n  templateUrl: './email.component.html',\r\n  styleUrl: './email.component.css'\r\n})\r\nexport class EmailInputComponent implements OnInit {\r\n\r\n  inpTextForm!: FormGroup;\r\n  @ViewChild('email') email!: FormControlName;\r\n  @Input('inp') inp!: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n",
            "styleUrl": "./email.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form #inpTextForm=\"ngForm\">\r\n  <div class=\"input-text\">\r\n    <label class=\"label-email\" for=\"email\">Email</label>\r\n    <input #email=\"ngModel\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Spatium.mo@software.com\" required\r\n      [(ngModel)]=\"inp\">\r\n  </div>\r\n\r\n  <div [hidden]=\"email.valid || email.pristine\" class=\"required\">\r\n    E-mail is required\r\n  </div>\r\n</form>"
        },
        {
            "name": "EmailVerificationComponent",
            "id": "component-EmailVerificationComponent-bae88471915e1b100c9fedc9cb7d044ae5ae3f37e337f01f719a7ad9295cc8155d3cfd35c6936fa4a3e941d079e345c5d0ae06817aa5a769e4e66c32823cbc9d",
            "file": "src/app/components/Authentication/email-verification/email-verification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-email-verification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./email-verification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "errorExist",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "formVerification",
                    "defaultValue": "new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "otp",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "resendOTPBool",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "resendOtpMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "slides",
                    "defaultValue": "[\r\n    'assets/images/illustration-signup.svg',\r\n    'assets/images/Frame 1000016152.svg',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "str1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "str2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "str3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "str4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "str5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "str6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeErrorExit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resendOTP",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verificationSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "AutoFocusDirective",
                    "type": "directive"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { AutoFocusDirective } from '../directives/auto-focus.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n@Component({\r\n  selector: 'app-email-verification',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, AutoFocusDirective, SpinnerComponent],\r\n  templateUrl: './email-verification.component.html',\r\n  styleUrl: './email-verification.component.css',\r\n  animations: [\r\n    trigger('flipInOut', [\r\n      transition(':enter', [\r\n        animate('1s', style({ transform: 'rotateY(90deg)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('1s', style({ transform: 'rotateY(180deg)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class EmailVerificationComponent implements OnInit, DoCheck {\r\n  str1!: string;\r\n  str2!: string;\r\n  str3!: string;\r\n  str4!: string;\r\n  str5!: string;\r\n  str6!: string;\r\n  email!: string | undefined;\r\n  otp: string = '';\r\n  errorExist: boolean = false;\r\n  resendOTPBool!: Boolean;\r\n  resendOtpMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  public slides: string[] = [\r\n    'assets/images/illustration-signup.svg',\r\n    'assets/images/Frame 1000016152.svg',\r\n  ];\r\n\r\n  formVerification = new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  });\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _Router: Router\r\n  ) {\r\n    this.resendOTPBool = false;\r\n    this.spinner = false;\r\n  }\r\n  ngDoCheck(): void { }\r\n  ngOnInit(): void {\r\n    this.email = sessionStorage?.getItem('email')?.slice(0, 4).concat(\"************\");\r\n\r\n    this.formVerification = this.formBuilder.group({\r\n      verificationCode1: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode2: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode3: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode4: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode5: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode6: ['', [Validators.required, Validators.maxLength(1)]],\r\n    });\r\n  }\r\n\r\n  // send otp\r\n  verificationSubmit() {\r\n    this.spinner = true;\r\n    if (this.formVerification.invalid) {\r\n      this.spinner = false;\r\n      console.log(this.formVerification);\r\n      return;\r\n    }\r\n\r\n    this.otp = `${this.str1}${this.str2}${this.str3}${this.str4}${this.str5}${this.str6}`;\r\n    this._authService.resetVerificationCode(this.otp).subscribe({\r\n      next: (res) => {\r\n        this.spinner = false;\r\n        sessionStorage.setItem('token', res.token);\r\n        this._Router.navigateByUrl('/auth/setnewpassword');\r\n      },\r\n      error: (err) => {\r\n        this.spinner = false;\r\n        this.errorExist = true;\r\n        this.resendOTPBool = false;\r\n\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  resendOTP() {\r\n    this.errorExist = false;\r\n    this.resendOTPBool = true;\r\n    this.spinner = true;\r\n    this._authService.ResendOTPForgetPassword().subscribe({\r\n      next: (res: any) => {\r\n        this.spinner = false;\r\n        this.resendOTPBool = true;\r\n        this.resendOtpMsg = res.message;\r\n      },\r\n      error: (err) => {\r\n        this.errorExist = false;\r\n        this.spinner = false;\r\n        this.resendOTPBool = true;\r\n        this.resendOtpMsg = err.error.message;\r\n      }\r\n    })\r\n  }\r\n\r\n  removeErrorExit() {\r\n    this.errorExist = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./email-verification.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "DoCheck"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container\" [ngClass]=\"{ lowOpacity: spinner }\">\r\n  <div class=\"projName\">\r\n    <div class=\"nameContainer\">\r\n      <div><img src=\"../../../assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n      <div class=\"projNDiv\"><p>CMS Software</p></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loginContainer\" id=\"loginContainerId\">\r\n    <div class=\"bg3\">\r\n      <div style=\"text-align: center\" class=\"loginDiv\">\r\n        <h1>Email Verification</h1>\r\n        <p class=\"info1\">\r\n          We sent OTP code to\r\n          <span style=\"color: #0660fc\">\r\n            {{ email | titlecase }}\r\n          </span>\r\n        </p>\r\n        <img\r\n          style=\"margin-left: auto; margin-right: auto\"\r\n          src=\"../../../assets/images/smartphone.svg\"\r\n          alt=\"OTP photo\"\r\n        />\r\n        <div>\r\n          <form\r\n            action=\"\"\r\n            [formGroup]=\"formVerification\"\r\n            (ngSubmit)=\"verificationSubmit()\"\r\n            #form=\"ngForm\"\r\n          >\r\n            <div>\r\n              <label for=\"verificationCode\" class=\"labelInput\"\r\n                >Type your 6 digits security code </label\r\n              ><br />\r\n              <div class=\"verificationInpts\">\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationCode\"\r\n                  formControlName=\"verificationCode1\"\r\n                  [(ngModel)]=\"str1\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode1.touched &&\r\n                    formVerification.controls.verificationCode1.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode1.touched && \r\n                    formVerification.controls.verificationCode1.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode1.untouched && \r\n                    formVerification.controls.verificationCode1.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />&#32;\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationNum\"\r\n                  [(ngModel)]=\"str2\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  formControlName=\"verificationCode2\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode2.touched &&\r\n                    formVerification.controls.verificationCode2.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode2.touched && \r\n                    formVerification.controls.verificationCode2.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode2.untouched && \r\n                    formVerification.controls.verificationCode2.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  minlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationNum\"\r\n                  [(ngModel)]=\"str3\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  formControlName=\"verificationCode3\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode3.touched &&\r\n                    formVerification.controls.verificationCode3.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode3.touched && \r\n                    formVerification.controls.verificationCode3.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode3.untouched && \r\n                    formVerification.controls.verificationCode3.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  minlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationNum\"\r\n                  formControlName=\"verificationCode4\"\r\n                  [(ngModel)]=\"str4\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode4.touched &&\r\n                    formVerification.controls.verificationCode4.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode4.touched && \r\n                    formVerification.controls.verificationCode4.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode4.untouched && \r\n                    formVerification.controls.verificationCode4.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  minlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationNum\"\r\n                  formControlName=\"verificationCode5\"\r\n                  [(ngModel)]=\"str5\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode5.touched &&\r\n                    formVerification.controls.verificationCode5.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode5.touched && \r\n                    formVerification.controls.verificationCode5.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode5.untouched && \r\n                    formVerification.controls.verificationCode5.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />\r\n                <input\r\n                  appAutoFocus\r\n                  type=\"text\"\r\n                  maxlength=\"1\"\r\n                  minlength=\"1\"\r\n                  class=\"inputVerificationStyle\"\r\n                  id=\"verificationNum\"\r\n                  formControlName=\"verificationCode6\"\r\n                  [(ngModel)]=\"str6\"\r\n                  min=\"0\"\r\n                  max=\"9\"\r\n                  oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid1':\r\n                    (formVerification.controls.verificationCode6.touched &&\r\n                    formVerification.controls.verificationCode6.errors) || errorExist ,\r\n                    'is-valid':\r\n                    formVerification.controls.verificationCode6.touched && \r\n                    formVerification.controls.verificationCode6.errors == null && !errorExist,\r\n                    'is-touched':\r\n                    formVerification.controls.verificationCode6.untouched && \r\n                    formVerification.controls.verificationCode6.errors == null,\r\n                }\"\r\n                  (change)=\"removeErrorExit()\"\r\n                />\r\n              </div>\r\n              @if (errorExist) {\r\n              <p class=\"required1\">Invalid Code</p>\r\n              } @if (resendOTPBool) {\r\n              <p class=\"required1\">{{ resendOtpMsg }}</p>\r\n              }\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              [ngClass]=\"{ disabled: formVerification.invalid }\"\r\n              [disabled]=\"formVerification.invalid\"\r\n            >\r\n              Reset password\r\n            </button>\r\n            <p class=\"info2\">\r\n              Didn't get the code ? <a (click)=\"resendOTP()\">Resend</a> or\r\n              <a>call us</a>\r\n            </p>\r\n            <!-- <input type=\"submit\"> -->\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}\r\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-bd7fe7f874da0f7d9de8b4a17834f35d847af2770ab5c2cb0f64300b76253aff8c0df90cfb75b30741bb55d1347c2bb498b5cc34bb8c03140dc32ee20cf7b509",
            "file": "src/app/shared/filter/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cols",
                    "defaultValue": "[\"Blog Title\", \"Status\", \"SEO\", \"Created At\", \"Created By\", \"Author\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "filteredArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormArray",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "filterForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "filterSearch",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "tempCols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "toggleAddFilterBtn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "addFilter",
                    "args": [
                        {
                            "name": "columnIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "columnIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fb",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleAddBtn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ToggleFilterDirective",
                    "type": "directive"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ToggleFilterDirective } from '../../directives/toggle-filter.directive';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  standalone: true,\r\n  imports: [ToggleFilterDirective, ReactiveFormsModule, FormsModule, CommonModule],\r\n  templateUrl: './filter.component.html',\r\n  styleUrl: './filter.component.css'\r\n})\r\nexport class FilterComponent {\r\n\r\n  toggleAddFilterBtn!: Boolean;\r\n  filterForm!: FormGroup;\r\n  filteredArray!: FormArray;\r\n  cols: string[] = [\"Blog Title\", \"Status\", \"SEO\", \"Created At\", \"Created By\", \"Author\"]\r\n  tempCols!: string[];\r\n  filterSearch: string = \"\";\r\n  constructor(private _FormBuilder: FormBuilder) {\r\n    this.toggleAddFilterBtn = false;\r\n    this.tempCols = this.cols;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fb();\r\n  }\r\n\r\n  fb() {\r\n    this.filterForm = this._FormBuilder.group({\r\n      columnId: [null, Validators.required],\r\n      columnName: [null, Validators.required],\r\n      columnValue: [null, Validators.required],\r\n      condition: [null, Validators.required]\r\n    })\r\n  }\r\n\r\n  toggleAddBtn() {\r\n    this.toggleAddFilterBtn = !this.toggleAddFilterBtn;\r\n  }\r\n\r\n  filter(event: any) {\r\n    if (this.filterSearch) {\r\n      this.tempCols\r\n        = this.cols.filter(column => column.toLowerCase().includes(this.filterSearch));\r\n    }\r\n    else if (event.inputType == \"deleteContentBackward\" || event.inputType == \"deleteContentForward\") {\r\n      this.tempCols = this.cols\r\n      this.cols = this.cols.filter(column => column.toLowerCase().includes(this.filterSearch));\r\n    }\r\n    else {\r\n      this.tempCols = this.cols\r\n    }\r\n  }\r\n\r\n  addFilter(columnIndex: number): void {\r\n    // (<FormArray>this.filteredArray).push(\r\n    //   new FormGroup(\r\n    //     {\r\n    //       columnid: new FormControl(null, [Validators.required]),\r\n    //       columnName: new FormControl([this.cols[columnIndex], [Validators.required]]),\r\n    //       condition: new FormControl(null, [Validators.required]),\r\n    //       columnValue: new FormControl(null, [Validators.required]),\r\n    //     }\r\n    //   )\r\n    // )\r\n  }\r\n\r\n\r\n  get controls() {\r\n    return (<FormArray>this.filterForm.get('filteredArray')).controls;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./filter.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_FormBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "_FormBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "controls": {
                    "name": "controls",
                    "getSignature": {
                        "name": "controls",
                        "type": "",
                        "returnType": "",
                        "line": 71
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"filter-container\">\r\n        <div appToggleFilter>\r\n          <button class=\"filter-btn\">\r\n            <img src=\"assets/images/filter.svg\" alt=\"filter\" />Filter\r\n          </button>\r\n        </div>\r\n        <div class=\"addFilter\">\r\n          <div class=\"header\">\r\n            <p>No filter conditions are applied to this table</p>\r\n          </div>\r\n          \r\n          <button (click)=\"toggleAddBtn()\">\r\n            <img src=\"assets/images/addfilter.svg\" alt=\"addfilter\" />\r\n            Add Filter\r\n          </button>\r\n\r\n          @if(toggleAddFilterBtn){\r\n          <div class=\"filter\">\r\n            <div class=\"filterSearch\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                name=\"search\"\r\n                id=\"search\"\r\n                placeholder=\"Search columns\"\r\n                [(ngModel)]=\"filterSearch\"\r\n                (input)=\"filter($event)\"\r\n              />\r\n              <img src=\"assets/images/search-normal.svg\" alt=\"Search\" />\r\n            </div>\r\n            <div class=\"filteredList\">\r\n              <ul>\r\n                @for (col of tempCols; track col; let i = $index) {\r\n                <li (click)=\"addFilter(i)\">{{ col }}</li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-07f894be6f38e12f30e1e7e5d9e999c27c78ce2f0be03c15c8c5f39207229e147892a2fd1fdb54e935c4f04f03c2162e39a22c28cdc64e027ea15824ddf0f3c9",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n    <div class=\"storybook-header\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            [primary]=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9cc6d38744e4a76b6efae77a795f919edef27b749253834d6fe56a363e2507c2b24a687fa7a0068c60f5200a14d6bcf954a907edfaa5437109dba763c0d23cf1-1",
            "file": "src/app/shared/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fullPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "notification_status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "sidebarToggler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "toggleUserMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppUser",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglesidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "userMenuToggled",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TitleCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "UpperCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "UserProfileComponent",
                    "type": "component"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CardModalComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule, LocationStrategy, TitleCasePipe, UpperCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterLink, RouterModule, RouterOutlet } from '@angular/router';\r\n\r\n\r\nimport { BreadcrumbService } from '../../services/breadcrumb/breadcrumb.service';\r\nimport { UserProfileComponent } from '../../components/core/user-profile/user-profile.component';\r\nimport { CardModalComponent } from '../pop-up-card/card-modal/card-modal.component';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AppUser } from '../../interfaces/app-user';\r\nimport { ToggleService } from '../../services/toggleBtn/toggle.service';\r\nimport { ToastService } from '../../services/toast/toast.service';\r\nimport { Toast, ToastType } from '../../interfaces/toast';\r\nimport { title } from 'process';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [TitleCasePipe, UpperCasePipe, UserProfileComponent, RouterOutlet, RouterModule, RouterLink, FormsModule, CardModalComponent, CommonModule],\r\n  templateUrl: './header.component.html',\r\n  styleUrl: './header.component.css'\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  notification_status!: Boolean\r\n  toggleUserMenu!: Boolean\r\n  user!: AppUser;\r\n  fullPath!: string[];\r\n  sidebarToggler!: Boolean;\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService,\r\n    private _AuthService: AuthService,\r\n    private _ToastService: ToastService,\r\n    private _Toggle: ToggleService) {\r\n    this.notification_status = false;\r\n    this.toggleUserMenu = false;\r\n    this.sidebarToggler = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._AuthService.getUser().subscribe({\r\n      next: (usr) => {\r\n        this.user = usr\r\n      },\r\n      error: (usrError) => {\r\n        console.log(usrError);\r\n      }\r\n    })\r\n    this._BreadCurmb.changeCurrentPath();\r\n    this._BreadCurmb.getCurrentPath().subscribe({\r\n      next: (res: string[]) => {\r\n        this.fullPath = res.splice(1);\r\n      }\r\n    })\r\n  }\r\n\r\n  togglesidebar() {\r\n    this._Toggle.toggle();\r\n    this.sidebarToggler = !this.sidebarToggler;\r\n  }\r\n\r\n  search(event: any) {\r\n    if (event.target.value > 3)\r\n      console.log(event.target.value);\r\n  }\r\n\r\n  userMenuToggled() {\r\n    this.toggleUserMenu = !this.toggleUserMenu;\r\n  }\r\n\r\n  showToast() {\r\n    this._ToastService.addToast(new Toast(ToastType.System, 'title', 'body', 3000));\r\n    this._ToastService.toggleToast();\r\n  }\r\n\r\n  logout() {\r\n    this._AuthService.logout();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./header.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_AuthService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_AuthService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div class=\"container\">\r\n  <div [ngClass]=\"\r\n      sidebarToggler ? 'toggle-sidebar-btn-rotated' : 'toggle-sidebar-btn'\r\n    \" (click)=\"togglesidebar()\">\r\n    <div class=\"arrow\">\r\n      <img src=\"assets/images/toggle-sidebar.svg\" alt=\"toggle-sidebar\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-4 breadcrumb-col\">\r\n      <div class=\"breadcrumb\">\r\n        @for (path of fullPath; track i; let i = $index) {\r\n        <div class=\"stage\">\r\n          {{ path | titlecase }}\r\n\r\n          @if (fullPath[i] !== fullPath[fullPath.length - 1]) {\r\n          <span>></span>\r\n          }\r\n        </div>\r\n\r\n        }\r\n      </div>\r\n    </div>\r\n    <div class=\"col-8 header-right-side\">\r\n      <div class=\"row\">\r\n        <div class=\"col-4 middle-section\">\r\n          <div class=\"search-notify-message\">\r\n            <div class=\"seacrhInput\">\r\n              <input type=\"search\" name=\"search\" id=\"search\" (input)=\"search($event)\"\r\n                placeholder=\"Search for anything here\" />\r\n              <img class=\"magnifier\" src=\"assets/images/magnifier.svg\" alt=\"magnifier\" />\r\n            </div>\r\n\r\n            <div class=\"notification\">\r\n              <div class=\"notify\">\r\n                <img src=\"assets/images/notification-bing.svg\" alt=\"bing\" class=\"notification-img\" />\r\n                <span class=\"number-of-notification\">5</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"message\" (click)=\"showToast()\">\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M15.5247 6.84207C16.8327 6.84207 17.8931 5.78169 17.8931 4.47365C17.8931 3.1656 16.8327 2.10522 15.5247 2.10522C14.2166 2.10522 13.1562 3.1656 13.1562 4.47365C13.1562 5.78169 14.2166 6.84207 15.5247 6.84207Z\"\r\n                  fill=\"#A1A5B7\" />\r\n                <g opacity=\"0.3\">\r\n                  <path\r\n                    d=\"M15.5265 8.02635C14.5849 8.02427 13.6825 7.64931 13.0167 6.98351C12.3509 6.31771 11.976 5.4153 11.9739 4.47372C11.9818 3.92399 12.1169 3.38356 12.3686 2.89478H6.05284C5.00593 2.89478 4.0019 3.31066 3.26163 4.05093C2.52135 4.79121 2.10547 5.79524 2.10547 6.84214V13.9474C2.10547 14.9943 2.52135 15.9983 3.26163 16.7386C4.0019 17.4789 5.00593 17.8948 6.05284 17.8948H13.1581C14.205 17.8948 15.209 17.4789 15.9493 16.7386C16.6896 15.9983 17.1055 14.9943 17.1055 13.9474V7.63162C16.6167 7.88334 16.0763 8.01844 15.5265 8.02635V8.02635Z\"\r\n                    fill=\"#A1A5B7\" />\r\n                </g>\r\n                <path\r\n                  d=\"M9.60724 11.579H5.90461C5.74757 11.579 5.59696 11.5166 5.48592 11.4056C5.37488 11.2945 5.3125 11.1439 5.3125 10.9869C5.3125 10.8298 5.37488 10.6792 5.48592 10.5682C5.59696 10.4572 5.74757 10.3948 5.90461 10.3948H9.60724C9.76427 10.3948 9.91488 10.4572 10.0259 10.5682C10.137 10.6792 10.1993 10.8298 10.1993 10.9869C10.1993 11.1439 10.137 11.2945 10.0259 11.4056C9.91488 11.5166 9.76427 11.579 9.60724 11.579V11.579Z\"\r\n                  fill=\"#A1A5B7\" />\r\n                <path\r\n                  d=\"M12.7651 14.7369H5.90461C5.74757 14.7369 5.59696 14.6746 5.48592 14.5635C5.37488 14.4525 5.3125 14.3019 5.3125 14.1448C5.3125 13.9878 5.37488 13.8372 5.48592 13.7262C5.59696 13.6151 5.74757 13.5527 5.90461 13.5527H12.7651C12.9222 13.5527 13.0728 13.6151 13.1838 13.7262C13.2949 13.8372 13.3572 13.9878 13.3572 14.1448C13.3572 14.3019 13.2949 14.4525 13.1838 14.5635C13.0728 14.6746 12.9222 14.7369 12.7651 14.7369V14.7369Z\"\r\n                  fill=\"#A1A5B7\" />\r\n              </svg>\r\n\r\n              @if (notification_status) {\r\n              <span class=\"number-of-notification\"></span>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-4 profile\">\r\n          <div class=\"user-profile\" (click)=\"userMenuToggled()\">\r\n            <div>\r\n              <div class=\"user-content-img\">\r\n                <img [src]=\"\r\n                    user.imageProfilePath\r\n                      ? user.imageProfilePath\r\n                      : 'assets/images/default-user.png'\r\n                  \" [alt]=\"user.fullName\" />\r\n              </div>\r\n              <div class=\"user-content-info\">\r\n                <h4>{{ user.fullName }}</h4>\r\n                <small>{{ user.roleName }}</small>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"user-arrow\">\r\n              <img src=\"assets/images/userprofile-arrow.svg\" alt=\"downarrow\" />\r\n            </div>\r\n            @if (toggleUserMenu) {\r\n            <div class=\"user-dropdown\">\r\n              <ul>\r\n                <li>\r\n                  <img src=\"assets/images/profile-circle-blue.svg\" alt=\"logout\" />\r\n                  Account Information\r\n                </li>\r\n                <li>\r\n                  <img src=\"assets/images/cheque.svg\" alt=\"logout\" />\r\n\r\n                  My Subscription\r\n                </li>\r\n\r\n                <li (click)=\"logout()\">\r\n                  <img src=\"assets/images/exit-right.svg\" alt=\"logout\" />\r\n\r\n                  Log out\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"small-screen-container\">\r\n  <div class=\"row\">\r\n    <div class=\"toggle-menu\">\r\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M0 2.33325C0 1.77992 0.446667 1.33325 1 1.33325H11.6667C12.22 1.33325 12.6667 1.77992 12.6667 2.33325C12.6667 2.88659 12.22 3.33325 11.6667 3.33325H1C0.446667 3.33325 0 2.88659 0 2.33325ZM11.6667 11.9999H1C0.446667 11.9999 0 12.4466 0 12.9999C0 13.5533 0.446667 13.9999 1 13.9999H11.6667C12.22 13.9999 12.6667 13.5533 12.6667 12.9999C12.6667 12.4466 12.22 11.9999 11.6667 11.9999ZM15 6.66659H4.33333C3.78 6.66659 3.33333 7.11325 3.33333 7.66659C3.33333 8.21992 3.78 8.66659 4.33333 8.66659H15C15.5533 8.66659 16 8.21992 16 7.66659C16 7.11325 15.5533 6.66659 15 6.66659Z\"\r\n          fill=\"#3F4254\" />\r\n      </svg>\r\n    </div>\r\n    <div class=\"seacrhInput-small-screen\">\r\n      <input type=\"search\" name=\"search\" id=\"search\" (input)=\"search($event)\" placeholder=\"Search for anything here\" />\r\n      <img class=\"magnifier\" src=\"assets/images/magnifier.svg\" alt=\"magnifier\" />\r\n    </div>\r\n    <div class=\"right-side\">\r\n      <div class=\"notification\">\r\n        <img src=\"assets/images/notification-bing.svg\" alt=\"bing\" class=\"notification-img\" />\r\n        <span class=\"number-of-notification\">5</span>\r\n      </div>\r\n      <div class=\"message\">\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M15.5247 6.84207C16.8327 6.84207 17.8931 5.78169 17.8931 4.47365C17.8931 3.1656 16.8327 2.10522 15.5247 2.10522C14.2166 2.10522 13.1562 3.1656 13.1562 4.47365C13.1562 5.78169 14.2166 6.84207 15.5247 6.84207Z\"\r\n            fill=\"#A1A5B7\" />\r\n          <g opacity=\"0.3\">\r\n            <path\r\n              d=\"M15.5265 8.02635C14.5849 8.02427 13.6825 7.64931 13.0167 6.98351C12.3509 6.31771 11.976 5.4153 11.9739 4.47372C11.9818 3.92399 12.1169 3.38356 12.3686 2.89478H6.05284C5.00593 2.89478 4.0019 3.31066 3.26163 4.05093C2.52135 4.79121 2.10547 5.79524 2.10547 6.84214V13.9474C2.10547 14.9943 2.52135 15.9983 3.26163 16.7386C4.0019 17.4789 5.00593 17.8948 6.05284 17.8948H13.1581C14.205 17.8948 15.209 17.4789 15.9493 16.7386C16.6896 15.9983 17.1055 14.9943 17.1055 13.9474V7.63162C16.6167 7.88334 16.0763 8.01844 15.5265 8.02635V8.02635Z\"\r\n              fill=\"#A1A5B7\" />\r\n          </g>\r\n          <path\r\n            d=\"M9.60724 11.579H5.90461C5.74757 11.579 5.59696 11.5166 5.48592 11.4056C5.37488 11.2945 5.3125 11.1439 5.3125 10.9869C5.3125 10.8298 5.37488 10.6792 5.48592 10.5682C5.59696 10.4572 5.74757 10.3948 5.90461 10.3948H9.60724C9.76427 10.3948 9.91488 10.4572 10.0259 10.5682C10.137 10.6792 10.1993 10.8298 10.1993 10.9869C10.1993 11.1439 10.137 11.2945 10.0259 11.4056C9.91488 11.5166 9.76427 11.579 9.60724 11.579V11.579Z\"\r\n            fill=\"#A1A5B7\" />\r\n          <path\r\n            d=\"M12.7651 14.7369H5.90461C5.74757 14.7369 5.59696 14.6746 5.48592 14.5635C5.37488 14.4525 5.3125 14.3019 5.3125 14.1448C5.3125 13.9878 5.37488 13.8372 5.48592 13.7262C5.59696 13.6151 5.74757 13.5527 5.90461 13.5527H12.7651C12.9222 13.5527 13.0728 13.6151 13.1838 13.7262C13.2949 13.8372 13.3572 13.9878 13.3572 14.1448C13.3572 14.3019 13.2949 14.4525 13.1838 14.5635C13.0728 14.6746 12.9222 14.7369 12.7651 14.7369V14.7369Z\"\r\n            fill=\"#A1A5B7\" />\r\n        </svg>\r\n\r\n        @if (notification_status) {\r\n        <span class=\"number-of-notification\"></span>\r\n        }\r\n      </div>\r\n      <div class=\"profile\">\r\n        <div class=\"user-profile\" (click)=\"userMenuToggled()\">\r\n          <div>\r\n            <div class=\"user-content-img\">\r\n              <img [src]=\"\r\n                  user.imageProfilePath\r\n                    ? user.imageProfilePath\r\n                    : 'assets/images/default-user.png'\r\n                \" [alt]=\"user.fullName\" />\r\n            </div>\r\n            <div class=\"user-content-info\">\r\n              <h4>{{ user.fullName }}</h4>\r\n              <small>{{ user.roleName }}</small>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"user-arrow\">\r\n            <img src=\"assets/images/userprofile-arrow.svg\" alt=\"downarrow\" />\r\n          </div>\r\n          @if (toggleUserMenu) {\r\n          <div class=\"user-dropdown\">\r\n            <ul>\r\n              <li>\r\n                <img src=\"assets/images/profile-circle-blue.svg\" alt=\"logout\" />\r\n                Account Information\r\n              </li>\r\n              <li>\r\n                <img src=\"assets/images/cheque.svg\" alt=\"logout\" />\r\n\r\n                My Subscription\r\n              </li>\r\n\r\n              <li (click)=\"logout()\">\r\n                <img src=\"assets/images/exit-right.svg\" alt=\"logout\" />\r\n\r\n                Log out\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-5b62e0c9ef76d4b29fffd1c153702840a07b6877ce717653cade5e59f94e0a65e2ea89db85659a82fe5186edb127628ca630e2d814eb2fe5e329471cc66d052c",
            "file": "src/stories/inputs/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inpTextForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  standalone: true,\r\n  imports: [FormsModule],\r\n  templateUrl: './input.component.html',\r\n  styleUrl: './input.component.css'\r\n})\r\nexport class InputComponent implements OnInit {\r\n\r\n  inpTextForm!: ElementRef;\r\n  @Input('inp') inp!: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n",
            "styleUrl": "./input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form #inpTextForm=\"ngForm\">\r\n  <div class=\"input-text\">\r\n    <label class=\"label-name\" for=\"name\">Full Name</label>\r\n    <input #fullname=\"ngModel\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"i.e. Spatium Software\" required\r\n      [(ngModel)]=\"inp\">\r\n  </div>\r\n\r\n  <div [hidden]=\"fullname.valid || fullname.pristine\" class=\"required\">\r\n    Full Name is required\r\n  </div>\r\n</form>"
        },
        {
            "name": "ManageRolesComponent",
            "id": "component-ManageRolesComponent-b0ebd3041cb61bc01e1bfe428a3aec4aadfc9daf106c52fb6901870353517dd8b4cf362949584793cf3f3b14f2207e1c2c0627da0122917762b6e7b5576591c7",
            "file": "src/app/components/core/management/manage-roles/manageroles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-manageroles",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./manageroles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isShown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { BreadcrumbService } from '../../../../services/breadcrumb/breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'app-manageroles',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './manageroles.component.html',\r\n  styleUrl: './manageroles.component.css'\r\n})\r\nexport class ManageRolesComponent implements OnInit {\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService) { }\r\n\r\n  ngOnInit() {\r\n    this._BreadCurmb.changeCurrentPath();\r\n\r\n  }\r\n  isShown: boolean = false;\r\n\r\n  show() {\r\n    if (this.isShown == true) {\r\n      this.isShown = false;\r\n\r\n    }\r\n    else {\r\n      this.isShown = true;\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./manageroles.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"roles-container\">\r\n\r\n\r\n    <div class=\"role-card\">\r\n        <div class=\"card-header\">\r\n            <div class=\"left\">\r\n                <img src=\"assets/images/admin.svg\" alt=\"\">\r\n                <div class=\"text\">\r\n                    <h2>Super Admin</h2>\r\n                    <p>Lorem ipsum dolor sit amet.</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"right-header\">\r\n                <div class=\"status\">\r\n                    <div class=\"dot\">\r\n\r\n                    </div>\r\n                    <p>Activate</p>\r\n                </div>\r\n\r\n                <div class=\"dots\" (click)=\"show()\">\r\n                    <div class=\"dot\" [style.background-color]=\"!isShown? '#A1A5B7':'#0660FC'\"></div>\r\n                    <div class=\"dot\" [style.background-color]=\"!isShown? '#A1A5B7':'#0660FC'\"></div>\r\n                    <div class=\"dot\" [style.background-color]=\"!isShown? '#A1A5B7':'#0660FC'\"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"hr\"></div>\r\n\r\n        <div class=\"members\">\r\n            <div class=\"members-numbers\">\r\n                <p>Members</p>\r\n                <div class=\"number\">3</div>\r\n            </div>\r\n            <div class=\"imgs-container\">\r\n                <img src=\"assets/images/Image-40.svg\" alt=\"\">\r\n                <img src=\"assets/images/Image-40.svg\" alt=\"\">\r\n                <img src=\"assets/images/Image-40.svg\" alt=\"\">\r\n            </div>\r\n        </div>\r\n\r\n\r\n        @if (isShown) {\r\n        <div class=\"roles-status\">\r\n            <ul>\r\n                <li><img src=\"assets/images/message-edit.svg\" alt=\"\"> Update Role</li>\r\n                <li> <img src=\"assets/images/profile-delete.svg\" alt=\"\"> Deactivate</li>\r\n                <li> <img src=\"assets/images/trash.svg\" alt=\"\"> Delete Role</li>\r\n            </ul>\r\n\r\n        </div>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "ManageUsersComponent",
            "id": "component-ManageUsersComponent-8d65b42fb721e36f53f5007d67a747b8e3cdd17f1994e2f5d52e4549899248a02018c906931fa2a4b1c9a0f0909b62e7c9d3f032d765e2bdc085304f8bef1706",
            "file": "src/app/components/core/management/manage-users/manage-users.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-manage-users",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./manage-users.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addUserToggler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "bodydata",
                    "defaultValue": "[12345]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "headdata",
                    "defaultValue": "this.row1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "heads",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isDropdownOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "row1",
                    "defaultValue": "[12345]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "sessionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openFilterModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleUserModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CardComponent",
                    "type": "component"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                },
                {
                    "name": "FilterComponent",
                    "type": "component"
                },
                {
                    "name": "NewUserComponent",
                    "type": "component"
                },
                {
                    "name": "AddUserComponent",
                    "type": "component"
                },
                {
                    "name": "SortComponent",
                    "type": "component"
                },
                {
                    "name": "OutsideClickDirective",
                    "type": "directive"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { CardComponent } from '../../../../shared/card/card.component';\r\nimport { TableComponent } from '../../../../shared/table/table.component';\r\nimport { BreadcrumbService } from '../../../../services/breadcrumb/breadcrumb.service';\r\nimport { FilterComponent } from '../../../../shared/filter/filter/filter.component';\r\nimport { NewUserComponent } from '../../../../shared/add-new-user/button.component';\r\nimport { AddUserComponent } from '../../add-user/add-user.component';\r\nimport { ToggleDeleteModalService } from '../../../../services/toggleModal/toggle-delete-modal.service';\r\nimport { SortComponent } from '../../../../shared/sort/sort/sort.component';\r\nimport { UserManagementsService } from '../../../../services/user-managements/user-managements.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { SettingsService } from '../../Setting/services/settings.service';\r\nimport { OutsideClickDirective } from '../../../../shared/directives/outside-click.directive';\r\n\r\n@Component({\r\n  selector: 'app-manage-users',\r\n  standalone: true,\r\n  imports: [CardComponent, TableComponent, FilterComponent, NewUserComponent, AddUserComponent, SortComponent, OutsideClickDirective, CommonModule],\r\n  templateUrl: './manage-users.component.html',\r\n  styleUrl: './manage-users.component.css'\r\n})\r\nexport class ManageUsersComponent implements OnInit, OnDestroy {\r\n  row1 = [12345];\r\n  headdata = this.row1;\r\n  bodydata = [12345];\r\n  heads!: string[];\r\n  users!: any;\r\n  addUserToggler!: Boolean;\r\n  filterValue!: Boolean;\r\n  sessionId!: string;\r\n  isDropdownOpen!: Boolean;\r\n\r\n\r\n\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService,\r\n    private _ToggleModal: ToggleDeleteModalService,\r\n    private _SettingService: SettingsService,\r\n    private _UserManagement: UserManagementsService) {\r\n    this.heads = ['ID', 'Username', 'Status', 'Role name', 'E-mail', 'Created At'];\r\n    this.users = [];\r\n    this.isDropdownOpen = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // this.sessionId = JSON.stringify(sessionStorage.getItem('sessionSettingId'));\r\n\r\n    forkJoin({\r\n      users: this._UserManagement.getAllUsers(),\r\n      // sessionId: this._SettingService.sendSessionId(this.sessionId)\r\n    }).subscribe({\r\n      next: (res) => {\r\n        this.users = res.users;\r\n        // console.log(res.sessionId);\r\n      }\r\n    });\r\n\r\n    this._BreadCurmb.changeCurrentPath();\r\n    this._ToggleModal.getToggleValue().subscribe({\r\n      next: (toggleValue) => {\r\n        this.addUserToggler = toggleValue;\r\n      }\r\n    })\r\n\r\n    this._ToggleModal.getFilterValue().subscribe({\r\n      next: (toggleValue) => {\r\n        this.filterValue = toggleValue;\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleUserModal() {\r\n    this._ToggleModal.toggle();\r\n  }\r\n\r\n  openFilterModal() {\r\n    this._ToggleModal.toggleFilter();\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.isDropdownOpen = !this.isDropdownOpen;\r\n  };\r\n\r\n  ngOnDestroy(): void { }\r\n}\r\n",
            "styleUrl": "./manage-users.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ToggleModal",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_SettingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_UserManagement",
                        "type": "UserManagementsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ToggleModal",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_SettingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_UserManagement",
                        "type": "UserManagementsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\" [ngClass]=\"{ lowOpacity: addUserToggler }\">\r\n  <div>\r\n    <div class=\"col-12\">\r\n      <div class=\"section-title\">\r\n        <h3>User Management</h3>\r\n        <small>Mange your users and roles</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"card\">\r\n      <app-card\r\n        [icon_path]=\"'assets/images/user-management-count.svg'\"\r\n        [title]=\"'Active Users'\"\r\n        [description]=\"'Total user number'\"\r\n        [description_continue]=\"'in this system'\"\r\n        [total_number]=\"'3500'\"\r\n        (onCall)=\"('sss')\"\r\n      ></app-card>\r\n    </div>\r\n    <div class=\"card\">\r\n      <app-card\r\n        [icon_path]=\"'assets/images/user-management-count.svg'\"\r\n        [title]=\"'Active Users'\"\r\n        [description]=\"'Total user number'\"\r\n        [description_continue]=\"'in this system'\"\r\n        [total_number]=\"'3500'\"\r\n      ></app-card>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <app-card\r\n        [icon_path]=\"'assets/images/user-square.svg'\"\r\n        [title]=\"'Deactive Users'\"\r\n        [description]=\"'Total user number'\"\r\n        [description_continue]=\"'in this system'\"\r\n        [total_number]=\"'1500'\"\r\n      ></app-card>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <app-card\r\n        [icon_path]=\"'assets/images/user-management-count.svg'\"\r\n        [title]=\"'Active Users'\"\r\n        [description]=\"'Total user number'\"\r\n        [description_continue]=\"'in this system'\"\r\n        [total_number]=\"'3500'\"\r\n      ></app-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"features\">\r\n        <app-sort></app-sort>\r\n        <app-filter></app-filter>\r\n        <app-new-user\r\n          [btnIcon]=\"'assets/images/add-circle.svg'\"\r\n          [btnName]=\"'Add User'\"\r\n          (onAddUser)=\"toggleUserModal()\"\r\n        ></app-new-user>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-table [bodyRow]=\"users\" [headRow]=\"heads\"></app-table>\r\n</div>\r\n"
        },
        {
            "name": "NewUserComponent",
            "id": "component-NewUserComponent-1246c83cc11ef11fe14d9ac6e4ee37d8bac99d2d1032c747f70cf8a2223b4c2f8630f788c03a526e06a104eb4f91331a7ad07d662a05cf79df5060e3f7e11b17",
            "file": "src/app/shared/add-new-user/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "btnIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "btnName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onAddUser",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "addNewUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css'\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n\r\n  @Input('btnName') btnName!: string;\r\n  @Input('btnIcon') btnIcon!: string;\r\n  @Output() onAddUser = new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  addNewUser() {\r\n    this.onAddUser.emit();\r\n  }\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"btn\" (click)=\"addNewUser()\">\r\n  <img [src]=\"btnIcon\" alt=\"icon\" />\r\n  <div>{{ btnName }}</div>\r\n</div>\r\n"
        },
        {
            "name": "NewUserComponent",
            "id": "component-NewUserComponent-1246c83cc11ef11fe14d9ac6e4ee37d8bac99d2d1032c747f70cf8a2223b4c2f8630f788c03a526e06a104eb4f91331a7ad07d662a05cf79df5060e3f7e11b17-1",
            "file": "src/stories/buttons/add-new-user/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "btnIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "btnName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onAddUser",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "addNewUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css'\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n\r\n  @Input('btnName') btnName!: string;\r\n  @Input('btnIcon') btnIcon!: string;\r\n  @Output() onAddUser = new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  addNewUser() {\r\n    this.onAddUser.emit();\r\n  }\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NewUserComponent-1",
            "templateData": "<div class=\"btn-container\" (click)=\"addNewUser()\">\r\n  <img [src]=\"btnIcon\" alt=\"icon\" />\r\n  <span>{{ btnName }}</span>\r\n</div>"
        },
        {
            "name": "NotfoundComponent",
            "id": "component-NotfoundComponent-7bfcb2784d35e8c22d65208e9c11f760f2e4aeb70edc2329fcb4783af64a8bbd5fa52129cb9ed99fca1d7fbc530f292cce61543781fa9e97bdb2de0a273c1c68",
            "file": "src/app/components/notfound/notfound.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notfound",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notfound.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterLink, RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  standalone: true,\r\n  imports: [RouterLink, CommonModule, RouterModule],\r\n  templateUrl: './notfound.component.html',\r\n  styleUrl: './notfound.component.css'\r\n})\r\nexport class NotfoundComponent {\r\n\r\n}\r\n",
            "styleUrl": "./notfound.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 header\">\r\n      <div class=\"projName\">\r\n        <img src=\"assets/images/Icon.png\" alt=\"ProjectIcon\" />\r\n        <p>CMS Software</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-6 left-side\">\r\n      <h4>OOOps! Page Not Found</h4>\r\n      <p>\r\n        Sorry about that! Please visit our homepage to get where you need to go.\r\n      </p>\r\n      <a [routerLink]=\"['/signin']\">\r\n        <img src=\"assets/images/arrow-left.svg\" alt=\"leftarrow\" />Back Home\r\n      </a>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <img src=\"assets/images/not-found.svg\" alt=\"not-found\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-994ced9acfc09d87a22c19bc8eab370696b437797db4de0101daa13ff6c83cae10088fc0a2db68247bfe58e4febc0c6e91a4169a053f1ece10f5eb6da8f46f58",
            "file": "src/app/components/core/Setting/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { BreadcrumbService } from '../../../../services/breadcrumb/breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './notification.component.html',\r\n  styleUrl: './notification.component.css'\r\n})\r\nexport class NotificationComponent implements OnInit{\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService) { }\r\n\r\n  ngOnInit() {\r\n    this._BreadCurmb.changeCurrentPath();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./notification.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>notification works!</p>\r\n"
        },
        {
            "name": "OtpComponent",
            "id": "component-OtpComponent-96b51252cbefe6733170211ae1a615956cd83feb0d43d58c1e9f936bd3603a61e3852d06e4955a6c384d291651794fb3a9feed0a4f26e5bb050ae5b6ec16c1e1",
            "file": "src/stories/inputs/otp-input/otp.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-otp",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./otp.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "errorExist",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formVerification",
                    "defaultValue": "new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "otp",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "resendOTPBool",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "resendOtpMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "str1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "str2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "str3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "str4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "str5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "str6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeErrorExit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "AutoFocusDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AutoFocusDirective } from '../../../app/components/Authentication/directives/auto-focus.directive';\r\n\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, AutoFocusDirective],\r\n  templateUrl: './otp.component.html',\r\n  styleUrl: './otp.component.css'\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  str1!: string;\r\n  str2!: string;\r\n  str3!: string;\r\n  str4!: string;\r\n  str5!: string;\r\n  str6!: string;\r\n  email!: string | undefined;\r\n  otp: string = '';\r\n  errorExist: boolean = false;\r\n  resendOTPBool!: Boolean;\r\n  resendOtpMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  formVerification = new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  });\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.resendOTPBool = false;\r\n    this.spinner = false;\r\n  }\r\n  ngDoCheck(): void { }\r\n  ngOnInit(): void {\r\n    this.email = sessionStorage?.getItem('email')?.slice(0, 4).concat(\"************\");\r\n\r\n    this.formVerification = this.formBuilder.group({\r\n      verificationCode1: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode2: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode3: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode4: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode5: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode6: ['', [Validators.required, Validators.maxLength(1)]],\r\n    });\r\n  }\r\n\r\n  removeErrorExit() {\r\n    this.errorExist = false;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./otp.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"loginContainer\" id=\"loginContainerId\">\r\n  <div class=\"bg3\">\r\n    <div style=\"text-align: center\" class=\"loginDiv\">\r\n      <div>\r\n        <form action=\"\" [formGroup]=\"formVerification\" #form=\"ngForm\">\r\n          <div>\r\n            <label for=\"verificationCode\" class=\"labelInput\">Type your 6 digits security code </label><br />\r\n            <div class=\"verificationInpts\">\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" class=\"inputVerificationStyle\" id=\"verificationCode\"\r\n                formControlName=\"verificationCode1\" [(ngModel)]=\"str1\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode1.touched &&\r\n                  formVerification.controls.verificationCode1.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode1.touched && \r\n                  formVerification.controls.verificationCode1.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode1.untouched && \r\n                  formVerification.controls.verificationCode1.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />&#32;\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" class=\"inputVerificationStyle\" id=\"verificationNum\"\r\n                [(ngModel)]=\"str2\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                formControlName=\"verificationCode2\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode2.touched &&\r\n                  formVerification.controls.verificationCode2.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode2.touched && \r\n                  formVerification.controls.verificationCode2.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode2.untouched && \r\n                  formVerification.controls.verificationCode2.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" minlength=\"1\" class=\"inputVerificationStyle\"\r\n                id=\"verificationNum\" [(ngModel)]=\"str3\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                formControlName=\"verificationCode3\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode3.touched &&\r\n                  formVerification.controls.verificationCode3.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode3.touched && \r\n                  formVerification.controls.verificationCode3.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode3.untouched && \r\n                  formVerification.controls.verificationCode3.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" minlength=\"1\" class=\"inputVerificationStyle\"\r\n                id=\"verificationNum\" formControlName=\"verificationCode4\" [(ngModel)]=\"str4\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode4.touched &&\r\n                  formVerification.controls.verificationCode4.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode4.touched && \r\n                  formVerification.controls.verificationCode4.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode4.untouched && \r\n                  formVerification.controls.verificationCode4.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" minlength=\"1\" class=\"inputVerificationStyle\"\r\n                id=\"verificationNum\" formControlName=\"verificationCode5\" [(ngModel)]=\"str5\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode5.touched &&\r\n                  formVerification.controls.verificationCode5.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode5.touched && \r\n                  formVerification.controls.verificationCode5.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode5.untouched && \r\n                  formVerification.controls.verificationCode5.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />\r\n              <input appAutoFocus type=\"text\" maxlength=\"1\" minlength=\"1\" class=\"inputVerificationStyle\"\r\n                id=\"verificationNum\" formControlName=\"verificationCode6\" [(ngModel)]=\"str6\" min=\"0\" max=\"9\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" [ngClass]=\"{\r\n                  'is-invalid1':\r\n                  (formVerification.controls.verificationCode6.touched &&\r\n                  formVerification.controls.verificationCode6.errors) || errorExist ,\r\n                  'is-valid':\r\n                  formVerification.controls.verificationCode6.touched && \r\n                  formVerification.controls.verificationCode6.errors == null && !errorExist,\r\n                  'is-touched':\r\n                  formVerification.controls.verificationCode6.untouched && \r\n                  formVerification.controls.verificationCode6.errors == null,\r\n              }\" (change)=\"removeErrorExit()\" />\r\n            </div>\r\n            @if (errorExist) {\r\n            <p class=\"required1\">Invalid Code</p>\r\n            } @if (resendOTPBool) {\r\n            <p class=\"required1\">{{ resendOtpMsg }}</p>\r\n            }\r\n          </div>\r\n          <button type=\"submit\" [ngClass]=\"{ disabled: formVerification.invalid }\"\r\n            [disabled]=\"formVerification.invalid\">\r\n            Reset password\r\n          </button>\r\n          <p class=\"info2\">\r\n            Didn't get the code ? <a>Resend</a> or\r\n            <a>call us</a>\r\n          </p>\r\n          <!-- <input type=\"submit\"> -->\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-92f4cc9cc0054ccf9d578fc1ebe06b6d7ed1424277151dbedd6cfe73ba15609d9919dcba6e9acbd021b43117d9ce1f28adf6630c681037299b01a4c726c15a8e",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section class=\"storybook-page\">\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\n.storybook-page h2 {\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\n.storybook-page ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-91b7da08a02610a6e189bab073d8bc7686c08c07f5eb343f349af45d30ba934d2a15ef6231056c43eb244e6182e89600137836d38c6279e22eb92aa1ebc18708",
            "file": "src/stories/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "all",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "rowsCount",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "holder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "openedSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'selectValue'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "toggleSelectMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "firstSlide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "lastSlide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prevPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectPaginationNumber",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewChecked, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrl: './paginator.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class PaginatorComponent implements AfterViewChecked, OnInit {\r\n  // component properties \r\n  @ViewChild('container') container!: ElementRef;\r\n  @ViewChild('selectValue') selectValue!: ElementRef;\r\n  @Output('rowsCount') rowsCount = new EventEmitter<number>();\r\n  @Input('all') all!: number;\r\n\r\n  pages!: number;\r\n  active = 0;\r\n  holder!: ElementRef;\r\n  toggleSelectMenu!: Boolean;\r\n  openedSelect!: Boolean;\r\n\r\n  constructor() {\r\n    this.toggleSelectMenu = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.all = 15;\r\n    this.pages = Math.ceil(this.all / 5);\r\n  }\r\n  ngOnChanges(): void {\r\n    console.log(\"all: \" + this.all);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.selectValue.nativeElement.innerText = 5;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    let holder = this.container.\r\n      nativeElement.children;\r\n    switch (true) {\r\n      // more than 4 pages \r\n      case this.active === 0 && this.pages > 4:\r\n        holder[0].className = 'active';\r\n        holder[1].className = 'semi';\r\n        holder[2].className = '';\r\n        break;\r\n      case this.active === 1 && this.pages > 4:\r\n        holder[0].className = '';\r\n        holder[1].className = 'active';\r\n        holder[2].className = 'semi';\r\n        break;\r\n      case this.active > 1 && this.active < this.pages - 2 && this.pages > 4:\r\n        holder[2].textContent = this.active;\r\n        holder[3].textContent = this.active + 1;\r\n        holder[4].textContent = this.active + 2;\r\n        break;\r\n      case this.active === this.pages - 2 && this.pages > 4:\r\n        holder[3].className = 'active';\r\n        holder[2].className = 'semi';\r\n        holder[4].className = '';\r\n        break;\r\n      case this.active === this.pages - 1 && this.pages > 4:\r\n        holder[2].className = '';\r\n        holder[4].className = 'active';\r\n        holder[3].className = 'semi';\r\n        break;\r\n      // less than 5 pages\r\n      case this.pages <= 4:\r\n        Array.from(holder).forEach((e, i) => {\r\n          i === this.active ? (e as HTMLElement).className = \"active\" : i === this.active + 1 && this.active < this.pages - 1 ? (e as HTMLElement).className = \"semi\" : (e as HTMLElement).className = \"\";\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Toggle select menu\r\n  toggleMenu() {\r\n    this.toggleSelectMenu = !this.toggleSelectMenu;\r\n  }\r\n\r\n  selectPaginationNumber(event: any) {\r\n    console.log(event.target.innerText);\r\n    this.selectValue.nativeElement.innerText = event.target.innerText;\r\n    this.onChange(Number(event.target.innerText));\r\n\r\n  }\r\n\r\n\r\n  // get number of needed display user \r\n  onChange(e: any) {\r\n    console.log(\"in changes\");\r\n\r\n    // (e.target as HTMLInputElement).blur();\r\n    this.active = 0;\r\n    this.pages = Math.ceil(this.all / e);\r\n    console.log(typeof (this.pages));\r\n    console.log(\"Pages: \" + this.pages);\r\n\r\n    this.rowsCount.emit(e);\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  // next page \r\n  nextPage() {\r\n    this.active = this.active < this.pages - 1 ? ++this.active : this.active;\r\n  }\r\n  // previous page\r\n  prevPage() {\r\n    this.active = this.active > 0 ? --this.active : this.active;\r\n  }\r\n\r\n  // go to first slide \r\n  firstSlide() {\r\n    this.active = 0;\r\n  }\r\n  // go to last slide \r\n  lastSlide() {\r\n    this.active = this.pages - 1;\r\n  }\r\n\r\n  toggleSelect() {\r\n    this.openedSelect = !this.openedSelect;\r\n  }\r\n}\r\n",
            "styleUrl": "./paginator.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "extends": [],
            "implements": [
                "AfterViewChecked",
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"rows-count\">\r\n    <span><img src=\"paginator-prev.png\" alt=\"\" /></span>\r\n    <div class=\"rows\">\r\n      <span>Rows </span>\r\n\r\n      <div class=\"select-group\" (click)=\"toggleMenu()\">\r\n        <div class=\"select\" #selectValue id=\"count\" [ngClass]=\"{'select-active':toggleSelectMenu}\"></div>\r\n        @if(toggleSelectMenu){\r\n        <div class=\"select-options\">\r\n          <div value=\"2\" (click)=\"selectPaginationNumber($event)\">1</div>\r\n          <div value=\"4\" (click)=\"selectPaginationNumber($event)\">2</div>\r\n          <div value=\"6\" (click)=\"selectPaginationNumber($event)\">3</div>\r\n          <div value=\"8\" (click)=\"selectPaginationNumber($event)\">4</div>\r\n          <div value=\"2\" (click)=\"selectPaginationNumber($event)\">5</div>\r\n          <div value=\"4\" (click)=\"selectPaginationNumber($event)\">6</div>\r\n          <div value=\"6\" (click)=\"selectPaginationNumber($event)\">7</div>\r\n          <div value=\"8\" (click)=\"selectPaginationNumber($event)\">8</div>\r\n        </div>\r\n        }\r\n      </div>\r\n      <!-- <span>of {{ all }}</span> -->\r\n    </div>\r\n    <span><img src=\"paginator-next.png\" alt=\"\" /></span>\r\n  </div>\r\n  <div class=\"controls\">\r\n    <span [ngClass]=\"{ notAllowed: active === 0 }\" (click)=\"firstSlide()\">\r\n      <img src=\"paginator-left.png\" alt=\"\" />\r\n    </span>\r\n    <span [ngClass]=\"{ notAllowed: active === 0 }\" (click)=\"prevPage()\">\r\n      <img src=\"paginator-prev.png\" alt=\"\" />\r\n    </span>\r\n    <div class=\"pages\" #container>\r\n      @if(pages !== 0 && pages > 4){\r\n      <!-- not move yet -->\r\n      @if(active < 2 || active===0){ <span>1</span>\r\n        <span>2</span>\r\n        <span>3</span>\r\n        <span>...</span>\r\n        <span>{{ pages }}</span>\r\n        <!-- go to page three -->\r\n        }@else if(active >= 2 && active !== pages && active < pages - 2 ){ <span>1</span>\r\n          <span>...</span>\r\n          <span>2</span>\r\n          <span class=\"active\" #senarioTwoS>3</span>\r\n          <span class=\"semi\" #senarioTwoT>4</span>\r\n          <span>...</span>\r\n          <span>{{ pages }}</span>\r\n          }@else if(active === pages || active >= pages - 2){\r\n          <span>1</span>\r\n          <span>...</span>\r\n          <span>{{ pages - 2 }}</span>\r\n          <span>{{ pages - 1 }}</span>\r\n          <span>{{ pages }}</span>\r\n          } } @if(pages <= 4 && pages !==0){ @for(page of [].constructor(pages);track $index){ <span>{{ $index + 1\r\n            }}</span>\r\n            } }\r\n    </div>\r\n    <span [ngClass]=\"{ notAllowed: active >= pages - 1 }\" (click)=\"nextPage()\">\r\n      <img src=\"paginator-next.png\" alt=\"\" />\r\n    </span>\r\n    <span [ngClass]=\"{ notAllowed: active >= pages - 1 }\" (click)=\"lastSlide()\">\r\n      <img src=\"paginator-right.png\" alt=\"\" /></span>\r\n  </div>\r\n</div>"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-603c976de7a3db3a9bc6b710e4a16d07335b8580d07432092c384720c92d85cd0c3cba9146881685cc5c53baae137f61d7cc0bd1c43ee80cc8f2558d5ab12593-1",
            "file": "src/app/shared/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "all",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "rowsCount",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "holder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "openedSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'selectValue'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "toggleSelectMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "firstSlide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "lastSlide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prevPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectPaginationNumber",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewChecked, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { OutsideClickDirective } from '../directives/outside-click.directive';\r\n\r\n@Component({\r\n  selector: 'app-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrl: './paginator.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class PaginatorComponent implements AfterViewChecked, OnInit {\r\n  // component properties \r\n  @ViewChild('container') container!: ElementRef;\r\n  @ViewChild('selectValue') selectValue!: ElementRef;\r\n  @Output('rowsCount') rowsCount = new EventEmitter<number>();\r\n  @Input('all') all!: number;\r\n\r\n\r\n  pages!: number;\r\n  active = 0;\r\n  holder!: ElementRef;\r\n  toggleSelectMenu!: Boolean;\r\n  openedSelect!: Boolean;\r\n\r\n  constructor() {\r\n    this.toggleSelectMenu = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.all = 15;\r\n    this.pages = Math.ceil(this.all / 5);\r\n  }\r\n  ngOnChanges(): void {\r\n    console.log(\"all: \" + this.all);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.selectValue.nativeElement.innerText = 5;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    let holder = this.container.\r\n      nativeElement.children;\r\n    switch (true) {\r\n      // more than 4 pages \r\n      case this.active === 0 && this.pages > 4:\r\n        holder[0].className = 'active';\r\n        holder[1].className = 'semi';\r\n        holder[2].className = '';\r\n        break;\r\n      case this.active === 1 && this.pages > 4:\r\n        holder[0].className = '';\r\n        holder[1].className = 'active';\r\n        holder[2].className = 'semi';\r\n        break;\r\n      case this.active > 1 && this.active < this.pages - 2 && this.pages > 4:\r\n        holder[2].textContent = this.active;\r\n        holder[3].textContent = this.active + 1;\r\n        holder[4].textContent = this.active + 2;\r\n        break;\r\n      case this.active === this.pages - 2 && this.pages > 4:\r\n        holder[3].className = 'active';\r\n        holder[2].className = 'semi';\r\n        holder[4].className = '';\r\n        break;\r\n      case this.active === this.pages - 1 && this.pages > 4:\r\n        holder[2].className = '';\r\n        holder[4].className = 'active';\r\n        holder[3].className = 'semi';\r\n        break;\r\n      // less than 5 pages\r\n      case this.pages <= 4:\r\n        Array.from(holder).forEach((e, i) => {\r\n          i === this.active ? (e as HTMLElement).className = \"active\" : i === this.active + 1 && this.active < this.pages - 1 ? (e as HTMLElement).className = \"semi\" : (e as HTMLElement).className = \"\";\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Toggle select menu\r\n  toggleMenu() {\r\n    this.toggleSelectMenu = !this.toggleSelectMenu;\r\n  }\r\n\r\n  selectPaginationNumber(event: any) {\r\n    console.log(event.target.innerText);\r\n    this.selectValue.nativeElement.innerText = event.target.innerText;\r\n    this.onChange(Number(event.target.innerText));\r\n\r\n  }\r\n\r\n\r\n  // get number of needed display user \r\n  onChange(e: any) {\r\n    console.log(\"in changes\");\r\n\r\n    // (e.target as HTMLInputElement).blur();\r\n    this.active = 0;\r\n    this.pages = Math.ceil(this.all / e);\r\n    console.log(typeof (this.pages));\r\n    console.log(\"Pages: \" + this.pages);\r\n\r\n    this.rowsCount.emit(e);\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  // next page \r\n  nextPage() {\r\n    this.active = this.active < this.pages - 1 ? ++this.active : this.active;\r\n  }\r\n  // previous page\r\n  prevPage() {\r\n    this.active = this.active > 0 ? --this.active : this.active;\r\n  }\r\n\r\n  // go to first slide \r\n  firstSlide() {\r\n    this.active = 0;\r\n  }\r\n  // go to last slide \r\n  lastSlide() {\r\n    this.active = this.pages - 1;\r\n  }\r\n\r\n  toggleSelect() {\r\n    this.openedSelect = !this.openedSelect;\r\n  }\r\n}\r\n",
            "styleUrl": "./paginator.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "extends": [],
            "implements": [
                "AfterViewChecked",
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PaginatorComponent-1",
            "templateData": "<div class=\"container\">\r\n  <div class=\"rows-count\">\r\n    <span><img src=\"paginator-prev.png\" alt=\"\" /></span>\r\n    <div class=\"rows\">\r\n      <span>Rows </span>\r\n\r\n      <div class=\"select-group\" (click)=\"toggleMenu()\">\r\n        <div class=\"select\" #selectValue id=\"count\" [ngClass]=\"{'select-active':toggleSelectMenu}\"></div>\r\n        @if(toggleSelectMenu){\r\n        <div class=\"select-options\">\r\n          <div value=\"2\" (click)=\"selectPaginationNumber($event)\">1</div>\r\n          <div value=\"4\" (click)=\"selectPaginationNumber($event)\">2</div>\r\n          <div value=\"6\" (click)=\"selectPaginationNumber($event)\">3</div>\r\n          <div value=\"8\" (click)=\"selectPaginationNumber($event)\">4</div>\r\n          <div value=\"2\" (click)=\"selectPaginationNumber($event)\">5</div>\r\n          <div value=\"4\" (click)=\"selectPaginationNumber($event)\">6</div>\r\n          <div value=\"6\" (click)=\"selectPaginationNumber($event)\">7</div>\r\n          <div value=\"8\" (click)=\"selectPaginationNumber($event)\">8</div>\r\n        </div>\r\n        }\r\n      </div>\r\n      <!-- <span>of {{ all }}</span> -->\r\n    </div>\r\n    <span><img src=\"paginator-next.png\" alt=\"\" /></span>\r\n  </div>\r\n  <div class=\"controls\">\r\n    <span [ngClass]=\"{ notAllowed: active === 0 }\" (click)=\"firstSlide()\">\r\n      <img src=\"paginator-left.png\" alt=\"\" />\r\n    </span>\r\n    <span [ngClass]=\"{ notAllowed: active === 0 }\" (click)=\"prevPage()\">\r\n      <img src=\"paginator-prev.png\" alt=\"\" />\r\n    </span>\r\n    <div class=\"pages\" #container>\r\n      @if(pages !== 0 && pages > 4){\r\n      <!-- not move yet -->\r\n      @if(active < 2 || active===0){ <span>1</span>\r\n        <span>2</span>\r\n        <span>3</span>\r\n        <span>...</span>\r\n        <span>{{ pages }}</span>\r\n        <!-- go to page three -->\r\n        }@else if(active >= 2 && active !== pages && active < pages - 2 ){ <span>1</span>\r\n          <span>...</span>\r\n          <span>2</span>\r\n          <span class=\"active\" #senarioTwoS>3</span>\r\n          <span class=\"semi\" #senarioTwoT>4</span>\r\n          <span>...</span>\r\n          <span>{{ pages }}</span>\r\n          }@else if(active === pages || active >= pages - 2){\r\n          <span>1</span>\r\n          <span>...</span>\r\n          <span>{{ pages - 2 }}</span>\r\n          <span>{{ pages - 1 }}</span>\r\n          <span>{{ pages }}</span>\r\n          } } @if(pages <= 4 && pages !==0){ @for(page of [].constructor(pages);track $index){ <span>{{ $index + 1\r\n            }}</span>\r\n            } }\r\n    </div>\r\n    <span [ngClass]=\"{ notAllowed: active >= pages - 1 }\" (click)=\"nextPage()\">\r\n      <img src=\"paginator-next.png\" alt=\"\" />\r\n    </span>\r\n    <span [ngClass]=\"{ notAllowed: active >= pages - 1 }\" (click)=\"lastSlide()\">\r\n      <img src=\"paginator-right.png\" alt=\"\" /></span>\r\n  </div>\r\n</div>"
        },
        {
            "name": "PasswordInputComponent",
            "id": "component-PasswordInputComponent-f868e8299fe7c1e5e5a5da4c33846c10d4dff0b2cabf69815d2256d4e4d7b237ba075aad63cbe77ddb17d09b1961425fa0306b3e12e78f53f8bfd805f66056cf",
            "file": "src/stories/inputs/password-input/password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inpTextForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'password'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "passwordType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showPasswordToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  standalone: true,\r\n  imports: [FormsModule],\r\n  templateUrl: './password.component.html',\r\n  styleUrl: './password.component.css'\r\n})\r\nexport class PasswordInputComponent implements OnInit {\r\n\r\n  showPassword!: Boolean;\r\n  passwordType!: string;\r\n  inpTextForm!: FormGroup;\r\n  @ViewChild('password') password!: ElementRef;\r\n  @Input('inp') inp!: string;\r\n\r\n  constructor() {\r\n    this.showPassword = false;\r\n    this.passwordType = \"password\";\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  showPasswordToggle() {\r\n    this.showPassword = !this.showPassword;\r\n    if (this.showPassword) {\r\n      this.passwordType = \"text\";\r\n    } else {\r\n      this.passwordType = \"password\";\r\n    }\r\n\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./password.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form #inpTextForm=\"ngForm\">\r\n  <div class=\"input-text\">\r\n    <label class=\"label-password\" for=\"password\">Password</label>\r\n    <div class=\"pass-inp\">\r\n      <input #password=\"ngModel\" [type]=\"passwordType\" id=\"password\" name=\"password\" placeholder=\"***************\"\r\n        required [(ngModel)]=\"inp\">\r\n\r\n      @if(showPassword){\r\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n        (click)=\"showPasswordToggle()\">\r\n        <path opacity=\"0.4\"\r\n          d=\"M14.1668 6.09995C12.6268 3.67995 10.3735 2.28662 8.00016 2.28662C6.8135 2.28662 5.66016 2.63329 4.60683 3.27995C3.5535 3.93329 2.60683 4.88662 1.8335 6.09995C1.16683 7.14662 1.16683 8.84662 1.8335 9.89329C3.3735 12.32 5.62683 13.7066 8.00016 13.7066C9.18683 13.7066 10.3402 13.36 11.3935 12.7133C12.4468 12.06 13.3935 11.1066 14.1668 9.89329C14.8335 8.85329 14.8335 7.14662 14.1668 6.09995ZM8.00016 10.6933C6.50683 10.6933 5.30683 9.48662 5.30683 7.99995C5.30683 6.51329 6.50683 5.30662 8.00016 5.30662C9.4935 5.30662 10.6935 6.51329 10.6935 7.99995C10.6935 9.48662 9.4935 10.6933 8.00016 10.6933Z\"\r\n          fill=\"#0660FC\" />\r\n        <path\r\n          d=\"M8.0001 6.09326C6.95343 6.09326 6.1001 6.94659 6.1001 7.99993C6.1001 9.04659 6.95343 9.89993 8.0001 9.89993C9.04676 9.89993 9.90676 9.04659 9.90676 7.99993C9.90676 6.95326 9.04676 6.09326 8.0001 6.09326Z\"\r\n          fill=\"#0660FC\" />\r\n      </svg>\r\n\r\n      }@else {\r\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n        (click)=\"showPasswordToggle()\">\r\n        <path\r\n          d=\"M1.91989 14.5601C1.78558 14.5589 1.6568 14.5064 1.55989 14.4134C1.46585 14.3185 1.41309 14.1903 1.41309 14.0567C1.41309 13.9232 1.46585 13.795 1.55989 13.7001L13.7332 1.58675C13.7756 1.52504 13.8312 1.47362 13.8961 1.43629C13.9609 1.39895 14.0334 1.37666 14.108 1.37104C14.1826 1.36542 14.2575 1.37663 14.3273 1.40384C14.397 1.43104 14.4597 1.47355 14.5108 1.52823C14.5619 1.5829 14.6001 1.64835 14.6225 1.71975C14.6449 1.79115 14.6511 1.86667 14.6404 1.94075C14.6298 2.01483 14.6026 2.08557 14.561 2.14776C14.5194 2.20995 14.4643 2.26201 14.3999 2.30008L2.26656 14.4134C2.17493 14.5062 2.05029 14.5589 1.91989 14.5601Z\"\r\n          fill=\"#7E8299\" />\r\n        <path\r\n          d=\"M6.09987 8.40684C6.10163 7.90346 6.30237 7.42121 6.65831 7.06527C7.01425 6.70933 7.4965 6.50859 7.99987 6.50684C8.28334 6.50697 8.56311 6.5712 8.81825 6.69473C9.07339 6.81826 9.29729 6.99788 9.4732 7.22017L6.80654 9.88684C6.58496 9.70923 6.40633 9.4839 6.28397 9.22764C6.16162 8.97138 6.09868 8.69081 6.09987 8.40684ZM7.80654 10.2868C7.87094 10.2901 7.93547 10.2901 7.99987 10.2868C8.50378 10.2868 8.98705 10.0867 9.34337 9.73034C9.69969 9.37402 9.89987 8.89075 9.89987 8.38684C9.90314 8.32688 9.90314 8.26679 9.89987 8.20684L7.80654 10.2868Z\"\r\n          fill=\"#7E8299\" />\r\n        <path opacity=\"0.3\"\r\n          d=\"M4.03325 12.6669L6.09992 10.6069C5.80291 10.3461 5.56262 10.0271 5.39394 9.66966C5.22525 9.31222 5.13176 8.92395 5.11927 8.52891C5.10678 8.13386 5.17554 7.74046 5.3213 7.37308C5.46707 7.0057 5.68672 6.67216 5.96666 6.39314C6.24659 6.11412 6.58084 5.89556 6.9487 5.751C7.31656 5.60644 7.71018 5.53896 8.10519 5.55275C8.50019 5.56654 8.88815 5.66129 9.24503 5.83115C9.60192 6.001 9.92012 6.24234 10.1799 6.5402L12.2866 4.44019C11.0915 3.39876 9.58277 2.78635 7.99992 2.7002C4.84659 2.7002 1.33325 5.78019 1.33325 8.40686C1.33325 9.83353 2.47325 11.4802 4.03325 12.6669Z\"\r\n          fill=\"#7E8299\" />\r\n        <path opacity=\"0.3\"\r\n          d=\"M10.7065 7.40015C10.832 7.72104 10.8976 8.06226 10.8998 8.40682C10.9032 8.87655 10.7917 9.33999 10.575 9.75674C10.3582 10.1735 10.0428 10.5309 9.65627 10.7978C9.26972 11.0647 8.82375 11.233 8.35725 11.288C7.89074 11.343 7.41785 11.2831 6.97981 11.1135L4.88647 13.1935C5.82744 13.7638 6.90001 14.0807 7.99981 14.1135C11.3331 14.1135 14.6665 11.0535 14.6665 8.40682C14.5583 7.12904 13.9728 5.9389 13.0265 5.07349L10.7065 7.40015Z\"\r\n          fill=\"#7E8299\" />\r\n      </svg>\r\n      }\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div [hidden]=\"password.valid || password.pristine\" class=\"required\">\r\n    Password is required\r\n  </div>\r\n</form>"
        },
        {
            "name": "PopupComponent",
            "id": "component-PopupComponent-e75360c4536546296de676ae6e9cf2ad73a3f800b29d4cc19cb5e14dbf430fed737cf96b66384fbf2267cca45671e573386161ce493f835bccabe38d0b8dc546",
            "file": "src/app/shared/popup/popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./popup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errorExit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onConfirm",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, DoCheck, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-popup',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './popup.component.html',\r\n  styleUrl: './popup.component.css'\r\n})\r\nexport class PopupComponent implements OnInit, OnChanges, DoCheck{\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.errorExit);\r\n  }\r\n  ngDoCheck(): void {\r\n    console.log(this.errorExit);\r\n    \r\n  }\r\n  @Input() message!:string;\r\n  @Input() errorExit!:boolean;\r\n  @Output() onConfirm = new EventEmitter<void>();\r\n\r\n  ngOnInit(){\r\n    console.log(this.errorExit);\r\n      this.errorExit = false;\r\n  }\r\n\r\n\r\n}\r\n",
            "styleUrl": "./popup.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges",
                "DoCheck"
            ],
            "templateData": "<div class=\"popup\" [hidden]=\"!errorExit\">\r\n  <div class=\"popup-header\">\r\n    <span>Unsaved Changes</span>\r\n    <button class=\"close-button\">×</button>\r\n  </div>\r\n  <hr />\r\n  <div class=\"popup-content\">\r\n    <p>\r\n      {{ message }}\r\n    </p>\r\n  </div>\r\n  <div class=\"popup-buttons\">\r\n    <button class=\"ok-button\" (click)=\"this.onConfirm.emit()\">Ok</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SendmailComponent",
            "id": "component-SendmailComponent-ffe2a693cf5e4348358fa5e73716e801f8194f46e9f77bd4974b0b6edc09bad336336ae39b8535b22d9fe77801c6cec8fcacc9f31f303c3a29299ed042ebba6d",
            "file": "src/app/components/Authentication/sendmail/sendmail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sendmail",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sendmail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formSendMail",
                    "defaultValue": "new FormGroup({\r\n    forgetEmail: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n\r\nexport interface CardData {\r\n  state: \"default\" | \"flipped\" | \"matched\";\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sendmail',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, SpinnerComponent],\r\n  templateUrl: './sendmail.component.html',\r\n  styleUrl: './sendmail.component.css',\r\n  // animations: [\r\n  //   trigger('flipInOut', [\r\n  //     transition(':enter', [\r\n  //       animate('0.5s', style({ transform: 'rotateY(90deg)' })),\r\n  //     ]),\r\n  //     transition(':leave', [\r\n  //       animate('0.5s', style({ transform: 'rotateY(180deg)' })),\r\n  //     ]),\r\n  //   ]),\r\n  // ],\r\n  animations: [\r\n    trigger(\"cardFlip\", [\r\n      state(\r\n        \"*\",\r\n        style({\r\n          transform: \"rotateY(270deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"flipped\",\r\n        style({\r\n          transform: \"rotateY(360deg)\"\r\n        })\r\n      ),\r\n      transition(\"* <=> flipped\", [animate(\"1000ms\")]),\r\n    ])\r\n  ]\r\n})\r\nexport class SendmailComponent implements OnInit {\r\n\r\n  spinner!: Boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private _authService: AuthService, private _Router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spinner = false;\r\n    this.formSendMail = this.formBuilder.group({\r\n      forgetEmail: ['', [Validators.required, Validators.email]],\r\n    });\r\n\r\n  }\r\n\r\n  formSendMail = new FormGroup({\r\n    forgetEmail: new FormControl(''),\r\n  });\r\n\r\n\r\n  resetSubmit() { // send mail\r\n    this.spinner = true;\r\n\r\n    if (this.formSendMail.invalid) {\r\n      this.spinner = false;\r\n      console.log(this.formSendMail);\r\n      return;\r\n    }\r\n    const email = this.formSendMail.controls.forgetEmail.value?.toString() ?? '';\r\n    this._authService.sendMail(email).subscribe({\r\n      next: (res) => {\r\n        // sessionStorage.setItem('token' , res.token);\r\n        this.spinner = false;\r\n\r\n        sessionStorage.setItem('email', email);\r\n        sessionStorage.setItem('message', res.message);\r\n        console.log(res);\r\n        this._Router.navigateByUrl('/auth/emailverification');\r\n      }, error: (err) => {\r\n        this.spinner = false;\r\n\r\n        console.log(err);\r\n      }\r\n    })\r\n    // this._authService.sendMail(email).subscribe({\r\n    //   next: (res)=>{ \r\n    //     sessionStorage.setItem('token' , res.token);\r\n    //     sessionStorage.setItem('email' , res.email);\r\n    //     sessionStorage.setItem('message',res.message);\r\n    //     console.log(this.formSendMail.controls.forgetEmail.value);\r\n\r\n    //     console.log(res.message);\r\n    //     console.log(res.token)\r\n    //     console.log(res);\r\n\r\n    //     this._Router.navigateByUrl('/emailverification');\r\n    // },\r\n    //   error:(err)=>{alert(err.message)}\r\n    // });\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./sendmail.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"projName\">\r\n    <div class=\"nameContainer\">\r\n      <div><img src=\"../../../assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n      <div class=\"projNDiv\"><p>CMS Software</p></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"resetContainer\" id=\"resetContainerId\">\r\n    <div class=\"bg2\">\r\n      <div class=\"resetDiv\">\r\n        <form\r\n          action=\"\"\r\n          [formGroup]=\"formSendMail\"\r\n          (ngSubmit)=\"resetSubmit()\"\r\n          #resetform=\"ngForm\"\r\n        >\r\n          <div>\r\n            <h1>Forget Password</h1>\r\n            <p class=\"info1\">\r\n              Enter your email, We will send you code to reset password\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <label class=\"form-label\" for=\"fromInput2\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-input\"\r\n              id=\"fromInput2\"\r\n              placeholder=\"i.e. Haitham.mo@company.com\"\r\n              formControlName=\"forgetEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  formSendMail.controls.forgetEmail.touched &&\r\n                  formSendMail.controls.forgetEmail.errors\r\n              }\"\r\n            />\r\n            @if (formSendMail.controls.forgetEmail.touched &&\r\n            formSendMail.controls.forgetEmail.errors) {\r\n            <div class=\"invalid-feedback\">\r\n              @if (formSendMail.controls.forgetEmail.errors['required']) {\r\n              <p>Email is required</p>\r\n              } @if (formSendMail.controls.forgetEmail.errors['email']) {\r\n              <p>invalid email. please verify agian</p>\r\n              }\r\n            </div>\r\n            }\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            [ngClass]=\"{ disabled: formSendMail.invalid }\"\r\n            [disabled]=\"formSendMail.invalid\"\r\n          >\r\n            Reset password\r\n          </button>\r\n          <p class=\"info2\">\r\n            Did you remember your password?\r\n            <a routerLink=\"/auth/signin\">LOG IN</a>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}\r\n"
        },
        {
            "name": "SetnewpasswordComponent",
            "id": "component-SetnewpasswordComponent-8ebd36b9c1bbce0496e8afbac30c6b27d3c9f116ca8dbf83d3c47df39fdaeadcb2d48f6a49c189049e5cfeadbb7e06c61584ca4635caeb8346863f1e3231396c",
            "file": "src/app/components/Authentication/setnewpassword/setnewpassword.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-setnewpassword",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./setnewpassword.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eyeshow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "faEyaSlash",
                    "defaultValue": "faEyeSlash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "faEye",
                    "defaultValue": "faEye",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "forgetPassRequest",
                    "defaultValue": "{} as IForgetPassRequest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IForgetPassRequest",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "formSetNewPassword",
                    "defaultValue": "new FormGroup({\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "Number",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "numberLength",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "passwordHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "resetBool",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "resetMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "showConfirmPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "showPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "specialChar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "uppercase",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "checkPasswordLength",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eyeShow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setNewPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showConfirmPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showLastCharacter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateAreEqual",
                    "args": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "confimPass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(group: FormGroup) => void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "confimPass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "PasswordDirective",
                    "type": "directive"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, DoCheck, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ResetPasswordService } from '../../../services/reset-password.service';\r\nimport { IForgetPassRequest } from '../../../interfaces/iforget-pass-request';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { PasswordDirective } from '../directives/password.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-setnewpassword',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, FontAwesomeModule, PasswordDirective, SpinnerComponent],\r\n  templateUrl: './setnewpassword.component.html',\r\n  styleUrl: './setnewpassword.component.css',\r\n  animations: [\r\n    trigger('flipInOut', [\r\n      transition(':enter', [\r\n        animate('1s', style({ transform: 'rotateY(90deg)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('1s', style({ transform: 'rotateY(180deg)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n\r\n})\r\nexport class SetnewpasswordComponent implements OnInit, DoCheck {\r\n  eyeshow: boolean = false;\r\n  faEye = faEye;\r\n  faEyaSlash = faEyeSlash;\r\n  passwordHint: boolean = false;\r\n  uppercase: boolean = false;\r\n  specialChar: boolean = false;\r\n  Number: boolean = false;\r\n  numberLength: boolean = false;\r\n  forgetPassRequest: IForgetPassRequest = {} as IForgetPassRequest;\r\n\r\n  resetBool!: Boolean;\r\n  resetMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  formSetNewPassword = new FormGroup({\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n  });\r\n\r\n  constructor(\r\n    private _authService: ResetPasswordService,\r\n    private _Router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.resetBool = false;\r\n    this.spinner = false;\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.numberLength = /.{8,}/.test(\r\n      this.formSetNewPassword.controls.password.value!\r\n    );\r\n    this.uppercase = /[A-Z]/.test(\r\n      this.formSetNewPassword.controls.password.value!\r\n    );\r\n    this.specialChar = /[#?!@$%^&*-]/.test(\r\n      this.formSetNewPassword.controls.password.value!\r\n    );\r\n    this.Number = /[0-9]/.test(\r\n      this.formSetNewPassword.controls.password.value!\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formSetNewPassword = this.formBuilder.group(\r\n      {\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.maxLength(40),\r\n            Validators.minLength(6),\r\n            Validators.pattern(\r\n              '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$'\r\n            ),\r\n          ],\r\n        ],\r\n        confirmPassword: ['', [Validators.required]],\r\n      },\r\n      { validator: this.validateAreEqual('password', 'confirmPassword') }\r\n    );\r\n  }\r\n\r\n  setNewPassword() {\r\n    this.spinner = true;\r\n    if (this.formSetNewPassword.invalid) {\r\n      this.spinner = false;\r\n      console.log(this.formSetNewPassword);\r\n      return;\r\n    }\r\n\r\n    const fv = this.formSetNewPassword.value!;\r\n    this.forgetPassRequest = {\r\n      password: fv.password?.toString() ?? '',\r\n      confirmNewPassword: fv.confirmPassword?.toString() ?? ''\r\n    }\r\n    console.log(fv);\r\n    this._authService.resetPassword(this.forgetPassRequest).subscribe({\r\n      next: (res: any) => {\r\n        this.spinner = false;\r\n        sessionStorage.getItem('token');\r\n        console.log(res);\r\n        this._Router.navigateByUrl('/auth/correctchange');\r\n      },\r\n      error: (err: any) => {\r\n        this.spinner = false;\r\n        console.log(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  validateAreEqual(pass: string, confimPass: string) {\r\n    return (group: FormGroup) => {\r\n      const password = group.controls[pass];\r\n      const confimPassword = group.controls[confimPass];\r\n      if (password.value !== confimPassword.value) {\r\n        confimPassword.setErrors({ passwordMismatch: true });\r\n      }\r\n    };\r\n  }\r\n\r\n  test() {\r\n    this.passwordHint = !this.passwordHint;\r\n    console.log(this.passwordHint);\r\n  }\r\n\r\n  eyeShow() {\r\n    this.eyeshow = !this.eyeshow;\r\n  }\r\n\r\n  showConfirmPass: boolean = false\r\n  showConfirmPassword() {\r\n    this.showConfirmPass = !this.showConfirmPass\r\n  }\r\n  showPass: boolean = false;\r\n  showPassword() {\r\n    this.showPass = !this.showPass;\r\n  }\r\n\r\n  checkPasswordLength(controlName: string) {\r\n    if (this.formSetNewPassword.get(controlName)?.value) {\r\n      if (+this.formSetNewPassword.get(controlName)?.value.length > 40)\r\n        this.formSetNewPassword.get(controlName)?.patchValue(this.formSetNewPassword.get(controlName)?.value.slice(0, 40));\r\n    }\r\n  }\r\n\r\n  showLastCharacter(event: any, controlName: string) {\r\n    this.formSetNewPassword.get(controlName)?.patchValue(event)\r\n  }\r\n}\r\n",
            "styleUrl": "./setnewpassword.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "_authService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "DoCheck"
            ],
            "templateData": "<div class=\"container\" [ngClass]=\"{ lowOpacity: spinner }\">\r\n  <div class=\"projName\">\r\n    <div class=\"nameContainer\">\r\n      <div><img src=\"../../../assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n      <div class=\"projNDiv\"><p class=\"Name\">CMS Software</p></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loginContainer\" id=\"loginContainerId\">\r\n    <div class=\"bg3\">\r\n      <div class=\"loginDiv\">\r\n        <h1>Set a new password</h1>\r\n        <div>\r\n          <form\r\n            action=\"\"\r\n            [formGroup]=\"formSetNewPassword\"\r\n            (ngSubmit)=\"setNewPassword()\"\r\n            #setnewpassform=\"ngForm\"\r\n          >\r\n            <div class=\"label-div\">\r\n              <label class=\"form-label\" for=\"fromInput3\">Password</label>\r\n              @if (showPass) {\r\n              <input\r\n                [appPassword]=\"showPass\"\r\n                type=\"text\"\r\n                class=\"form-input passwordCheck\"\r\n                id=\"fromInput3\"\r\n                placeholder=\"******************\"\r\n                formControlName=\"password\"\r\n                (onChangeInputValue)=\"showLastCharacter($event, 'password')\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                  formSetNewPassword.controls.password.touched &&\r\n                  formSetNewPassword.controls.password.errors,\r\n                  'is-valid':\r\n                  formSetNewPassword.controls.password.touched &&\r\n                  formSetNewPassword.controls.password.errors == null ,\r\n                  'is-touched':\r\n                  formSetNewPassword.controls.password.untouched &&\r\n                  formSetNewPassword.controls.password.errors == null,\r\n              }\"\r\n                (focusin)=\"test()\"\r\n                (input)=\"checkPasswordLength('password')\"\r\n                (focusout)=\"test()\"\r\n              />\r\n              }@else {\r\n              <input\r\n                [appPassword]=\"showPass\"\r\n                type=\"password\"\r\n                class=\"form-input passwordCheck\"\r\n                id=\"fromInput3\"\r\n                placeholder=\"******************\"\r\n                formControlName=\"password\"\r\n                (onChangeInputValue)=\"showLastCharacter($event, 'password')\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                  formSetNewPassword.controls.password.touched &&\r\n                  formSetNewPassword.controls.password.errors,\r\n                  'is-valid':\r\n                  formSetNewPassword.controls.password.touched &&\r\n                  formSetNewPassword.controls.password.errors == null ,\r\n                  'is-touched':\r\n                  formSetNewPassword.controls.password.untouched &&\r\n                  formSetNewPassword.controls.password.errors == null,\r\n              }\"\r\n                (focusin)=\"test()\"\r\n                (input)=\"checkPasswordLength('password')\"\r\n                (focusout)=\"test()\"\r\n              />\r\n              } @if(showPass){\r\n              <fa-icon\r\n                [icon]=\"faEye\"\r\n                class=\"EyeIcon\"\r\n                (click)=\"showPassword()\"\r\n              ></fa-icon>\r\n              }@else {\r\n              <fa-icon\r\n                [icon]=\"faEyaSlash\"\r\n                class=\"EyeIcon\"\r\n                (click)=\"showPassword()\"\r\n              ></fa-icon>\r\n              }\r\n              <br />\r\n              <div\r\n                [ngClass]=\"{ passContainerSmallSize: passwordHint == true }\"\r\n                class=\"passwordCheckContainer\"\r\n              >\r\n                <div class=\"invalid-feedback\" [hidden]=\"!passwordHint\">\r\n                  <div class=\"strongth-password\">\r\n                    @if(formSetNewPassword.controls.password.value!.length < 6\r\n                    || formSetNewPassword.controls.password.value!.length >= 6\r\n                    && formSetNewPassword.controls.password.errors){\r\n                    <div class=\"bar\" id=\"week\"></div>\r\n                    <div class=\"bar\" id=\"mediumH\"></div>\r\n                    <div class=\"bar\" id=\"strongH\"></div>\r\n\r\n                    } @if(formSetNewPassword.controls.password.value!.length >=\r\n                    6 && formSetNewPassword.controls.password.value!.length < 15\r\n                    && formSetNewPassword.controls.password.errors==null){\r\n                    <div class=\"bar\" id=\"mediumS\"></div>\r\n                    <div class=\"bar\" id=\"medium\" #medium></div>\r\n                    <div class=\"bar\" id=\"strongH\"></div>\r\n\r\n                    } @if(formSetNewPassword.controls.password.value!.length >=\r\n                    15 && formSetNewPassword.controls.password.errors==null){\r\n                    <div class=\"bar\" id=\"weekH\"></div>\r\n                    <div class=\"bar\" id=\"strongS\" #medium></div>\r\n                    <div class=\"bar\" id=\"strong\" #strong></div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <p\r\n                  id=\"passHint\"\r\n                  [ngClass]=\"{ show: passwordHint }\"\r\n                  [ngClass]=\"{ hide: passwordHint }\"\r\n                >\r\n                  Password hint : 8 characters minimum\r\n                </p>\r\n                <div\r\n                  class=\"passwordValidation\"\r\n                  style=\"\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: space-between;\r\n                  \"\r\n                >\r\n                  <div [hidden]=\"!passwordHint\" class=\"passwordHint\">\r\n                    @if(formSetNewPassword.controls.password.value!.length < 6\r\n                    || formSetNewPassword.controls.password.value!.length >= 6\r\n                    && formSetNewPassword.controls.password.errors){\r\n                    <p class=\"passCheckWord\">Password: Week</p>\r\n                    } @if(formSetNewPassword.controls.password.value!.length >=\r\n                    6 && formSetNewPassword.controls.password.value!.length < 15\r\n                    && formSetNewPassword.controls.password.errors==null){\r\n                    <p class=\"passCheckWord\">Password: Meduim</p>\r\n                    } @if(formSetNewPassword.controls.password.value!.length >=\r\n                    15 && formSetNewPassword.controls.password.errors==null){\r\n                    <p class=\"passCheckWord\">Password: Strong</p>\r\n                    }\r\n                  </div>\r\n                  <button type=\"button\" class=\"tooltip\">\r\n                    !\r\n                    <ul class=\"tooltiptext\">\r\n                      Your Password Must Contain:\r\n                      <li>\r\n                        <span\r\n                          class=\"correctIcon\"\r\n                          [ngClass]=\"{\r\n                            changeBG: numberLength\r\n                          }\"\r\n                          >✔</span\r\n                        >At least 8 characters\r\n                      </li>\r\n                      <li>\r\n                        <span\r\n                          class=\"correctIcon\"\r\n                          [ngClass]=\"{\r\n                            changeBG: uppercase\r\n                          }\"\r\n                          >✔</span\r\n                        >At least One Capital Letter\r\n                      </li>\r\n                      <li>\r\n                        <span\r\n                          class=\"correctIcon\"\r\n                          [ngClass]=\"{\r\n                            changeBG: Number\r\n                          }\"\r\n                          >✔</span\r\n                        >At least One Number\r\n                      </li>\r\n                      <li>\r\n                        <span\r\n                          class=\"correctIcon\"\r\n                          [ngClass]=\"{\r\n                            changeBG: specialChar\r\n                          }\"\r\n                          >✔</span\r\n                        >At least One Special\r\n                        <span style=\"margin-left: 12%\"\r\n                          >Character:!#$%^&*()_+.</span\r\n                        >\r\n                      </li>\r\n                    </ul>\r\n                    <!-- <span id=\"length\"></span> -->\r\n                    <!-- <span id=\"upercase\">At least contain 1 upercase</span>\r\n            <span id=\"number\">At least contain 3 numbers</span> -->\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"label-div\">\r\n                <label class=\"form-label\" for=\"fromInput4\"\r\n                  >Confirm Password</label\r\n                >\r\n                @if (showConfirmPass) {\r\n                <input\r\n                  [appPassword]=\"showConfirmPass\"\r\n                  type=\"text\"\r\n                  class=\"form-input\"\r\n                  id=\"fromInput4\"\r\n                  formControlName=\"confirmPassword\"\r\n                  (input)=\"checkPasswordLength('confirmPassword')\"\r\n                  (onChangeInputValue)=\"\r\n                    showLastCharacter($event, 'confirmPassword')\r\n                  \"\r\n                  placeholder=\"******************\"\r\n                  [ngClass]=\"{ 'is-invalid':\r\n                formSetNewPassword.controls.confirmPassword.touched &&\r\n                formSetNewPassword.controls.confirmPassword.errors, 'is-valid':\r\n                formSetNewPassword.controls.confirmPassword.touched &&\r\n                formSetNewPassword.controls.confirmPassword.errors == null ,\r\n                'is-touched':\r\n                formSetNewPassword.controls.confirmPassword.untouched &&\r\n                formSetNewPassword.controls.confirmPassword.errors == null, }\"\r\n                />\r\n                }@else {\r\n                <input\r\n                  [appPassword]=\"showConfirmPass\"\r\n                  type=\"password\"\r\n                  class=\"form-input\"\r\n                  id=\"fromInput4\"\r\n                  formControlName=\"confirmPassword\"\r\n                  placeholder=\"******************\"\r\n                  (input)=\"checkPasswordLength('confirmPassword')\"\r\n                  (onChangeInputValue)=\"\r\n                    showLastCharacter($event, 'confirmPassword')\r\n                  \"\r\n                  [ngClass]=\"{\r\n                'is-invalid':\r\n                formSetNewPassword.controls.confirmPassword.touched &&\r\n                formSetNewPassword.controls.confirmPassword.errors,\r\n                'is-valid':\r\n                formSetNewPassword.controls.confirmPassword.touched &&\r\n                formSetNewPassword.controls.confirmPassword.errors == null ,\r\n                'is-touched':\r\n                formSetNewPassword.controls.confirmPassword.untouched &&\r\n                formSetNewPassword.controls.confirmPassword.errors == null,\r\n                }\"\r\n                />\r\n                } @if(showConfirmPass){\r\n                <fa-icon\r\n                  [icon]=\"faEye\"\r\n                  class=\"EyeIcon\"\r\n                  (click)=\"showConfirmPassword()\"\r\n                ></fa-icon>\r\n                }@else {\r\n                <fa-icon\r\n                  [icon]=\"faEyaSlash\"\r\n                  class=\"EyeIcon\"\r\n                  (click)=\"showConfirmPassword()\"\r\n                ></fa-icon>\r\n                } @if (formSetNewPassword.controls.confirmPassword.touched &&\r\n                formSetNewPassword.controls.confirmPassword.errors) {\r\n                <div class=\"invalid-feedback\">\r\n                  @if(formSetNewPassword.controls.confirmPassword.errors['required'])\r\n                  {\r\n                  <p class=\"required\">Confirm Password is required</p>\r\n                  }\r\n                  @if(formSetNewPassword.controls.confirmPassword.errors['passwordMismatch'])\r\n                  {\r\n                  <p>Confirm Password does not match</p>\r\n                  }\r\n                </div>\r\n                }\r\n              </div>\r\n              @if(resetBool){\r\n              <p class=\"required1\">{{ resetMsg }}</p>\r\n              }\r\n              <button\r\n                type=\"submit\"\r\n                [ngClass]=\"{ disable: formSetNewPassword.invalid }\"\r\n                [disabled]=\"formSetNewPassword.invalid\"\r\n              >\r\n                Reset password\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}\r\n"
        },
        {
            "name": "SettingComponent",
            "id": "component-SettingComponent-408850d993443bdd940d6edd28eb6ef81ce351a09b1539126e2a619d3ce5928fdbf5a071217c0486a08ff5168bba5bee45a2d45cbdde0929e431ec55a15bbd56",
            "file": "src/app/components/core/Setting/setting.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-setting",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./setting.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\nimport { BreadcrumbService } from '../../../services/breadcrumb/breadcrumb.service';\r\n\r\n@Component({\r\n    selector: 'app-setting',\r\n    standalone: true,\r\n    imports: [RouterOutlet, RouterLink, RouterLinkActive],\r\n    templateUrl: './setting.component.html',\r\n    styleUrl: './setting.component.css'\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n    constructor(private _BreadCurmb: BreadcrumbService) { }\r\n\r\n    ngOnInit() {\r\n        this._BreadCurmb.changeCurrentPath();\r\n    }\r\n\r\n}\r\n",
            "styleUrl": "./setting.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div>\r\n    <div class=\"col-12\">\r\n      <div class=\"section-title\">\r\n        <h3>Settings</h3>\r\n        <small>Manage your Plan & Payments</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"navigation\">\r\n    <ul>\r\n      <li [routerLink]=\"['notification']\" routerLinkActive=\"active-navigation\">\r\n        <p>Notification</p>\r\n      </li>\r\n      <li [routerLink]=\"['subscription']\" routerLinkActive=\"active-navigation\">\r\n        <p>My subscription</p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-c076b435e9fbbd28ed82de790c1bfb02688a16ac8b00b91c128d4d351f53d3c8ac0398eb907419e56f81982f9c5f52c0c9173e5ad78694f84e377dc5ec682ca5",
            "file": "src/app/shared/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "darkMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "dropDownToggler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "openDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sidebarToggler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "Dropdowntoggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleAppearance",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglesidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ToggleService } from '../../services/toggleBtn/toggle.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrl: './sidebar.component.css'\r\n})\r\nexport class SidebarComponent {\r\n\r\n  openDropdown!: Boolean;\r\n  dropDownToggler!: Boolean;\r\n  darkMode!: Boolean;\r\n  sidebarToggler!: Boolean;\r\n\r\n  constructor(private _Toggle: ToggleService) {\r\n    this.openDropdown = true;\r\n    this.darkMode = false;\r\n    this.sidebarToggler = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._Toggle.getToggleValue().subscribe({\r\n      next: (value) => { this.sidebarToggler = value; }\r\n    })\r\n  }\r\n\r\n  togglesidebar() {\r\n    this._Toggle.toggle();\r\n    this.sidebarToggler = !this.sidebarToggler;\r\n  }\r\n\r\n\r\n  Dropdowntoggle() {\r\n    this.dropDownToggler = !this.dropDownToggler;\r\n  }\r\n\r\n  toggleAppearance() {\r\n    this.darkMode = !this.darkMode;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./sidebar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_Toggle",
                        "type": "ToggleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div\r\n  class=\"container sidebar\"\r\n  [ngClass]=\"{ darkTheme: darkMode, 'sidebar-toggle': sidebarToggler }\"\r\n>\r\n  <div class=\"sidebar-top-section\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-12\"\r\n        [ngClass]=\"\r\n          !sidebarToggler ? 'sidebar-header' : 'sidebar-header-show-logo-only'\r\n        \"\r\n      >\r\n        <div [ngClass]=\"!sidebarToggler ? '' : ''\">\r\n          <div class=\"image\">\r\n            <img src=\"assets/images/Icon.png\" alt=\"Logo\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"sidebar-header-content\"\r\n          [ngClass]=\"{\r\n            hide: sidebarToggler,\r\n            show: !sidebarToggler,\r\n            '': !sidebarToggler\r\n          }\"\r\n        >\r\n          <div class=\"title\">\r\n            <h4>CMS Software</h4>\r\n            <small>Manage your blog</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-12 sidebar-menu\"\r\n        [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n      >\r\n        <h5>Home</h5>\r\n      </div>\r\n      <div class=\"col-12 main\">\r\n        <ul class=\"main-list\">\r\n          <li>\r\n            <a href=\"dashboard\">\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/dashboard.svg\" alt=\"dashboard\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Dashboard\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li\r\n            [routerLink]=\"['/cms/blogs']\"\r\n            [routerLinkActive]=\"darkMode ? 'darkTheme_active' : 'active'\"\r\n            [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          >\r\n            <a>\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/blog-posts.svg\" alt=\"blog-posts\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Blog Posts\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"media\">\r\n              <div class=\"icon\">\r\n                <img\r\n                  src=\"assets/images/media-management.svg\"\r\n                  alt=\"media-management\"\r\n                />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Media Management\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"seo\">\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/seo.svg\" alt=\"seo\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                SEO\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"reporting an\">\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/analytic.svg\" alt=\"report&analytic\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Report & analytic\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"comments\">\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/comments.svg\" alt=\"comments\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Comments\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li\r\n            (click)=\"Dropdowntoggle()\"\r\n            [routerLinkActive]=\"darkMode ? 'darkTheme_active' : 'active'\"\r\n            [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          >\r\n            <div class=\"drop-down\">\r\n              <div class=\"icon\">\r\n                <div class=\"usericon\">\r\n                  @if (darkMode) {\r\n                  <img src=\"assets/images/profile-circle.svg\" alt=\"profile\" />\r\n\r\n                  } @else{\r\n                  <img\r\n                    src=\"assets/images/profile-circle-dark.svg\"\r\n                    alt=\"profile\"\r\n                  />\r\n                  }\r\n                  <div\r\n                    [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n                  >\r\n                    User Management\r\n                  </div>\r\n                </div>\r\n                @if(darkMode || sidebarToggler ){\r\n                <img\r\n                  [hidden]=\"sidebarToggler\"\r\n                  [ngClass]=\"{\r\n                    rotate: dropDownToggler,\r\n                    'reverse-rotate': !dropDownToggler\r\n                  }\"\r\n                  src=\"assets/images/angle-up-solid-dark.svg\"\r\n                  alt=\"up-arrow\"\r\n                />} @else{\r\n                <img\r\n                  [hidden]=\"sidebarToggler\"\r\n                  [ngClass]=\"{\r\n                    rotate: dropDownToggler,\r\n                    'reverse-rotate': !dropDownToggler\r\n                  }\"\r\n                  src=\"assets/images/up-arrow.svg\"\r\n                  alt=\"up-arrow\"\r\n                />\r\n                }\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <div\r\n            class=\"link-title\"\r\n            [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n          >\r\n            @if(dropDownToggler && !sidebarToggler){\r\n            <div class=\"sub-links\">\r\n              <ul>\r\n                <li\r\n                  [routerLink]=\"['management', 'users']\"\r\n                  routerLinkActive=\"active-sublink\"\r\n                >\r\n                  <a> Manage Users </a>\r\n                </li>\r\n                <li\r\n                  [routerLink]=\"['management', 'roles']\"\r\n                  routerLinkActive=\"active-sublink\"\r\n                >\r\n                  <a>Manage Roles</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            }\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sidebar-bottom-section\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-12 sidebar-menu\"\r\n        [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n      >\r\n        <h5>Pages</h5>\r\n      </div>\r\n      <div class=\"col-12 sidebar-menu-links\">\r\n        <ul>\r\n          <li\r\n            [routerLink]=\"['setting']\"\r\n            [routerLinkActive]=\"darkMode ? 'darkTheme_active' : 'active'\"\r\n          >\r\n            <a>\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/settings.svg\" alt=\"settings\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Settings\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"blogpost\">\r\n              <div class=\"icon\">\r\n                <img src=\"assets/images/help-center.svg\" alt=\"help-center\" />\r\n              </div>\r\n              <div\r\n                class=\"link-title\"\r\n                [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n              >\r\n                Help Center\r\n              </div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"row\"\r\n      [ngClass]=\"{ hide: sidebarToggler, show: !sidebarToggler }\"\r\n    >\r\n      <div\r\n        class=\"col-12 dark-mode\"\r\n        [ngClass]=\"\r\n          !sidebarToggler ? 'dark-mode' : 'dark-mode-without-background'\r\n        \"\r\n      >\r\n        <div class=\"dark-mode-section\">\r\n          <div class=\"dark-mode-icon\">\r\n            <img src=\"assets/images/moon.svg\" alt=\"moon\" />\r\n          </div>\r\n          <div class=\"link-title\">Dark Mode</div>\r\n        </div>\r\n        <div class=\"toggle\">\r\n          <div class=\"toggle\">\r\n            <label class=\"switch\">\r\n              <input (click)=\"toggleAppearance()\" type=\"checkbox\" />\r\n              <span class=\"slider round\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-ec585a078cbb7f8585551871fc3016b850263a384cd3f2323269c0e0a961e08e3d16df256f7ca6e0f0a8593d5084c87feba5b44cb67d689f9532cc3af09b2330",
            "file": "src/app/components/Authentication/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "{\r\n    state: \"flipped\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CardData",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "errorExit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "eyeshow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "faEyaSlash",
                    "defaultValue": "faEyeSlash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "faEye",
                    "defaultValue": "faEye",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "formInfo",
                    "defaultValue": "new FormGroup({\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "Index",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "Number",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "numberLength",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "passwordHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "resendOTPBool",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "resendOtpMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "showConfirmPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "showPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "signInRequest",
                    "defaultValue": "{} as ILogin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILogin",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "specialChar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "uppercase",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [
                {
                    "name": "checkbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkPasswordLength",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearErrorExit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shooww",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showConfirmPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "PasswordDirective",
                    "type": "directive"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, DoCheck, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { ILogin } from '../../../interfaces/logininterface';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { PasswordDirective } from '../directives/password.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n\r\nexport interface CardData {\r\n  state: \"default\" | \"flipped\" | \"matched\";\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  standalone: true,\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, CommonModule, FontAwesomeModule, PasswordDirective, SpinnerComponent],\r\n  templateUrl: './signin.component.html',\r\n  styleUrl: './signin.component.css',\r\n  animations: [\r\n    trigger(\"cardFlip\", [\r\n      state(\r\n        \"*\",\r\n        style({\r\n          transform: \"rotateY(-90deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"flipped\",\r\n        style({\r\n          transform: \"rotateY(0deg)\"\r\n        })\r\n      ),\r\n      state(\r\n        \"default\",\r\n        style({\r\n          transform: \"rotateY(90deg)\"\r\n        })\r\n      ),\r\n      transition(\"* => flipped\", [animate(\"1000ms\")]),\r\n      transition(\"default => *\", [animate(\"1000ms\")]),\r\n    ])\r\n  ]\r\n})\r\nexport class SigninComponent implements OnInit, DoCheck, OnDestroy {\r\n\r\n  Index: number = 1;\r\n  submitted: boolean = false;\r\n  passwordHint: boolean = false;\r\n  eyeshow: boolean = false;\r\n  uppercase: boolean = false;\r\n  specialChar: boolean = false;\r\n  Number: boolean = false;\r\n  numberLength: boolean = false;\r\n  signInRequest: ILogin = {} as ILogin;\r\n  faEye = faEye;\r\n  faEyaSlash = faEyeSlash;\r\n  errorExit: boolean = false;\r\n  resendOTPBool!: Boolean;\r\n  resendOtpMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  data: CardData = {\r\n    state: \"flipped\"\r\n  };\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _Router: Router) {\r\n    this.spinner = false;\r\n    this.resendOTPBool = false;\r\n  }\r\n\r\n  formInfo = new FormGroup({\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n  });\r\n\r\n  ngDoCheck(): void { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.formInfo = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n        ],\r\n      ],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  Submit() { //login\r\n    this.submitted = true;\r\n    if (this.formInfo.invalid) {\r\n      console.log(this.formInfo);\r\n      return;\r\n    }\r\n    const fv = this.formInfo.value!;\r\n    this.signInRequest = {\r\n      email: fv.email?.toString() ?? '',\r\n      password: fv.password?.toString() ?? '',\r\n    }\r\n\r\n    this._authService.Login(this.signInRequest).subscribe({\r\n      next: (res) => {\r\n\r\n\r\n        console.log(res);\r\n        this._authService.saveUserSession(res);\r\n        this._authService.setUser(res);\r\n\r\n        // this._Router.navigateByUrl('/cms');\r\n        this._Router.navigate(['/cms'], { skipLocationChange: true })\r\n      },\r\n      error: (err) => {\r\n        // console.log(err);\r\n        this.errorExit = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkbox() {\r\n    localStorage.setItem('email', this.formInfo.controls.email?.toString() ?? '');\r\n    localStorage.setItem('password', this.formInfo.controls.password?.toString() ?? '');\r\n  }\r\n\r\n  showConfirmPass: boolean = false\r\n  showConfirmPassword() {\r\n    this.showConfirmPass = !this.showConfirmPass\r\n  }\r\n\r\n  showPass: boolean = false;\r\n  showPassword() {\r\n    this.showPass = !this.showPass;\r\n  }\r\n\r\n  checkPasswordLength(controlName: string) {\r\n    if (this.formInfo.get(controlName)?.value) {\r\n      if (+this.formInfo.get(controlName)?.value.length > 40)\r\n        this.formInfo.get(controlName)?.patchValue(this.formInfo.get(controlName)?.value.slice(0, 40));\r\n    }\r\n  }\r\n\r\n  clearErrorExit() {\r\n    this.errorExit = false;\r\n  }\r\n\r\n  shooww(event: any, controlName: string) {\r\n    this.formInfo.get(controlName)?.patchValue(event)\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.state = \"default\";\r\n  }\r\n}\r\n",
            "styleUrl": "./signin.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 77,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "DoCheck",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container\" [ngClass]=\"{ lowOpacity: spinner }\">\r\n  <div class=\"formDiv\">\r\n    <div class=\"projName\">\r\n      <div class=\"nameContainer\">\r\n        <div><img src=\"../../../assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n        <div class=\"projNDiv\"><p class=\"Name\">CMS Software</p></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"container1\"\r\n      [ngClass]=\"{ 'flip-out': Index == 2, 'flip-in': Index == 1 }\"\r\n      [ngClass]=\"{ 'flip-out': Index == 3, 'flip-in': Index == 4 }\"\r\n      [ngClass]=\"{ 'flip-out': Index == 5, 'flip-in': Index == 6 }\"\r\n    >\r\n      <div class=\"loginContainer\" id=\"loginContainerId\">\r\n        <div class=\"bg\">\r\n          <div class=\"loginDiv\">\r\n            <h1>\r\n              Welcome! 👋\r\n              <!-- <i class=\"fa-solid fa-hand fa-flip-horizontal fa-lg\" style=\"color: #FFD43B;\"></i> -->\r\n            </h1>\r\n            <p class=\"info1\">Login in to your CMS System account</p>\r\n            <div>\r\n              <form\r\n                action=\"\"\r\n                [formGroup]=\"formInfo\"\r\n                (ngSubmit)=\"Submit()\"\r\n                #form=\"ngForm\"\r\n              >\r\n                <div class=\"form-control\">\r\n                  <label class=\"form-label\" for=\"fromInput2\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-input\"\r\n                    id=\"fromInput2\"\r\n                    placeholder=\"i.e. Haitham.mo@company.com\"\r\n                    formControlName=\"email\"\r\n                    (input)=\"clearErrorExit()\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        formInfo.controls.email.touched &&\r\n                        formInfo.controls.email.errors\r\n                    }\"\r\n                  />\r\n                  @if (formInfo.controls.email.touched &&\r\n                  formInfo.controls.email.errors) {\r\n                  <div class=\"invalid-feedback\">\r\n                    @if (formInfo.controls.email.errors['required']) {\r\n                    <p>Email is required</p>\r\n                    } @if (formInfo.controls.email.errors['email']) {\r\n                    <p>Email is invalid</p>\r\n                    }\r\n                  </div>\r\n                  }\r\n                </div>\r\n                <div class=\"label-div form-control\">\r\n                  <label class=\"form-label\" for=\"fromInput3\">Password</label>\r\n                  @if (showPass) {\r\n                  <input\r\n                    [appPassword]=\"showPass\"\r\n                    type=\"text\"\r\n                    class=\"form-input passwordCheck\"\r\n                    id=\"fromInput3\"\r\n                    placeholder=\"*****************\"\r\n                    formControlName=\"password\"\r\n                    (onChangeInputValue)=\"shooww($event, 'password')\"\r\n                    (input)=\"\r\n                      [checkPasswordLength('password'), clearErrorExit()]\r\n                    \"\r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        formInfo.controls.password.touched &&\r\n                        formInfo.controls.password.errors\r\n                    }\"\r\n                  />\r\n                  } @else {\r\n                  <input\r\n                    [appPassword]=\"showPass\"\r\n                    type=\"password\"\r\n                    class=\"form-input passwordCheck\"\r\n                    id=\"fromInput3\"\r\n                    placeholder=\"*****************\"\r\n                    formControlName=\"password\"\r\n                    (input)=\"\r\n                      [checkPasswordLength('password'), clearErrorExit()]\r\n                    \"\r\n                    (onChangeInputValue)=\"shooww($event, 'password')\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        formInfo.controls.password.touched &&\r\n                        formInfo.controls.password.errors\r\n                    }\"\r\n                  />\r\n                  } @if(showPass){\r\n                  <fa-icon\r\n                    [icon]=\"faEye\"\r\n                    class=\"EyeIcon\"\r\n                    (click)=\"showPassword()\"\r\n                  ></fa-icon>\r\n                  }@else {\r\n                  <fa-icon\r\n                    [icon]=\"faEyaSlash\"\r\n                    class=\"EyeIcon\"\r\n                    (click)=\"showPassword()\"\r\n                  ></fa-icon>\r\n                  } @if (formInfo.controls.password.touched &&\r\n                  formInfo.controls.password.errors) {\r\n                  <div class=\"invalid-feedback\">\r\n                    @if (formInfo.controls.password.errors['required']) {\r\n                    <p>Password is required</p>\r\n                    }\r\n                  </div>\r\n                  }\r\n                </div>\r\n                @if(errorExit && formInfo.valid){\r\n                <p class=\"required1\">Email or Pasword is invalid</p>\r\n                }\r\n                <div class=\"checkbox\">\r\n                  <div class=\"checkDiv\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"checkbox\"\r\n                      (change)=\"checkbox()\"\r\n                      name=\"checkbox\"\r\n                    />\r\n                    <label for=\"checkbox\" id=\"checkLabel\">Remember me</label>\r\n                  </div>\r\n                  <!-- <label style=\"display: inline; border: 1px solid #BFD4E466; width: 18px; height: 18px;\"></label> -->\r\n\r\n                  <a routerLink=\"/auth/sendmail\"\r\n                    ><p id=\"forget\">Forget password?</p></a\r\n                  >\r\n                </div>\r\n                <button\r\n                  [ngClass]=\"{ disabled: formInfo.invalid }\"\r\n                  type=\"submit\"\r\n                  [disabled]=\"!form.valid\"\r\n                >\r\n                  LOG IN\r\n                </button>\r\n                <p class=\"info22\">\r\n                  Don't have an Account? <a routerLink=\"/auth/signup\">Register</a>\r\n                </p>\r\n                <!-- <input type=\"submit\"> -->\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}\r\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-0045339f784d11445e5397e01ec31d580a8df298c7cf5857e07c25ac19cf31536718d817ba71ecbeaff9649e35672ed1d39c3a8dfad32096103a98ee40554d8c",
            "file": "src/app/components/Authentication/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorExit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "eyeshow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "faEyaSlash",
                    "defaultValue": "faEyeSlash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "faEye",
                    "defaultValue": "faEye",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "faFacebook",
                    "defaultValue": "faFacebook",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "faGoogle",
                    "defaultValue": "faGoogle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "filmIcon",
                    "defaultValue": "faFilm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "formInfo",
                    "defaultValue": "new FormGroup({\r\n    fullName: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "Number",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "numberLength",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "passwordHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "pwd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 217
                },
                {
                    "name": "showConfirmPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "showPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "signUpRequest",
                    "defaultValue": "{} as ISignupRequest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISignupRequest",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "slides",
                    "defaultValue": "[\r\n    'assets/images/illustration-signup.png',\r\n    'assets/images/Frame 1000016152.svg',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "slidIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "specialChar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "testStr",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "uppercase",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [
                {
                    "name": "checkFullnameLength",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkPasswordLength",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "currentSlide",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eyeShow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAlreadyExistError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shooww",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showConfirmPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSlides",
                    "args": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slidIndex"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slidIndex",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUpTest",
                    "args": [
                        {
                            "name": "str",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unshowPassAfter2S",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAreEqual",
                    "args": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "confimPass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(group: FormGroup) => void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "confimPass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBar"
                },
                {
                    "name": "PasswordDirective",
                    "type": "directive"
                },
                {
                    "name": "PopupComponent",
                    "type": "component"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faFacebook, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { faFilm, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ISignupRequest } from '../../../interfaces/signupinterface';\r\nimport { PopupComponent } from '../../../shared/popup/popup.component';\r\nimport { PasswordDirective } from '../directives/password.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    RouterModule,\r\n    MatProgressBar,\r\n    PasswordDirective,\r\n    PopupComponent,\r\n    SpinnerComponent\r\n  ],\r\n  templateUrl: './signup.component.html',\r\n  styleUrl: './signup.component.css',\r\n  animations: [\r\n    trigger('flipInOut', [\r\n      transition(':enter', [\r\n        animate('1s', style({ transform: 'rotateY(90deg)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('1s', style({ transform: 'rotateY(180deg)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class SignupComponent implements OnInit, DoCheck, AfterViewInit {\r\n  [x: string]: any;\r\n  filmIcon = faFilm;\r\n  faFacebook = faFacebook;\r\n  faGoogle = faGoogle;\r\n  faEye = faEye;\r\n  faEyaSlash = faEyeSlash;\r\n  submitted = false;\r\n  passwordHint: boolean = false;\r\n  eyeshow: boolean = false;\r\n  uppercase: boolean = false;\r\n  specialChar: boolean = false;\r\n  Number: boolean = false;\r\n  numberLength: boolean = false;\r\n  signUpRequest: ISignupRequest = {} as ISignupRequest;\r\n  spinner!: Boolean\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _Router: Router,\r\n    private element: ElementRef\r\n  ) {\r\n    this.spinner = false;\r\n  }\r\n\r\n  ngAfterViewInit(): void { }\r\n\r\n  ngDoCheck(): void {\r\n    this.numberLength = /.{8,}/.test(this.formInfo.controls.password.value!);\r\n    this.uppercase = /[A-Z]/.test(this.formInfo.controls.password.value!);\r\n    this.specialChar = /[#?!@$%^&*-]/.test(\r\n      this.formInfo.controls.password.value!\r\n    );\r\n    this.Number = /[0-9]/.test(this.formInfo.controls.password.value!);\r\n  }\r\n\r\n  formInfo = new FormGroup({\r\n    fullName: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n  });\r\n  validateAreEqual(pass: string, confimPass: string) {\r\n    return (group: FormGroup) => {\r\n      const password = group.controls[pass];\r\n      const confimPassword = group.controls[confimPass];\r\n      if (password.value !== confimPassword.value) {\r\n        confimPassword.setErrors({ passwordMismatch: true });\r\n      } else {\r\n        confimPassword.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formInfo = this.formBuilder.group(\r\n      {\r\n        fullName: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(60),\r\n            Validators.pattern(`^[A-Za-z\\\\s]*$`)\r\n\r\n          ],\r\n        ],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.maxLength(40),\r\n            Validators.minLength(8),\r\n            Validators.pattern(\r\n              '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$'\r\n            ),\r\n          ],\r\n        ],\r\n        confirmPassword: ['', [Validators.required]],\r\n      },\r\n      { validator: this.validateAreEqual('password', 'confirmPassword') }\r\n    );\r\n  }\r\n\r\n  slidIndex: number = 0;\r\n\r\n  public slides: string[] = [\r\n    'assets/images/illustration-signup.png',\r\n    'assets/images/Frame 1000016152.svg',\r\n  ];\r\n\r\n  errorExit: boolean = false;\r\n\r\n  Submit() {\r\n    this.spinner = true;\r\n    //this.submitted = true;\r\n    if (this.formInfo.invalid) {\r\n      this.spinner = false;\r\n\r\n      return;\r\n    }\r\n    const fv = this.formInfo.value!;\r\n    this.signUpRequest = {\r\n      fullName: fv.fullName?.toString() ?? '',\r\n      email: fv.email?.toString() ?? '',\r\n      password: fv.password?.toString() ?? '',\r\n      confirmPassword: fv.confirmPassword?.toString() ?? ''\r\n    }\r\n    console.log(this.signUpRequest);\r\n    this._authService.signUp(this.signUpRequest).subscribe({\r\n      next: (res) => {\r\n        this.spinner = false;\r\n        console.log(res);\r\n        sessionStorage.setItem('token', res.token);\r\n        sessionStorage.setItem('email', res.email);\r\n        this._Router.navigateByUrl('/auth/signupverification');\r\n      },\r\n      error: (err) => {\r\n        this.spinner = false;\r\n        this.errorExit = true;\r\n      }\r\n    });\r\n\r\n  }\r\n  showConfirmPass: boolean = false\r\n  showConfirmPassword() {\r\n    this.showConfirmPass = !this.showConfirmPass\r\n  }\r\n  showPass: boolean = false;\r\n  showPassword() {\r\n    this.showPass = !this.showPass;\r\n  }\r\n\r\n  unshowPassAfter2S(event: any) {\r\n    const ele = this.element.nativeElement as HTMLInputElement;\r\n    setTimeout(() => {\r\n      ele.type = 'text'\r\n    }, 2000)\r\n  }\r\n\r\n  showSlides(i = this.slidIndex) {\r\n    let silde = this.slides[i];\r\n    return silde;\r\n  }\r\n\r\n  currentSlide(i: number) {\r\n    this.slidIndex = i;\r\n    return this.showSlides();\r\n  }\r\n\r\n  test() {\r\n    this.passwordHint = !this.passwordHint;\r\n  }\r\n\r\n  eyeShow() {\r\n    this.eyeshow = !this.eyeshow;\r\n  }\r\n\r\n  testStr: string = '';\r\n  pwd!: string;\r\n  signUpTest(str: any) {\r\n    const input = this.element.nativeElement as HTMLInputElement;\r\n    input.type = 'text';\r\n    setTimeout(() => {\r\n      this.testStr += `-`\r\n      input.type = 'password'\r\n      this.pwd += str.key;\r\n      console.log(this.pwd);\r\n    }, 2000);\r\n  }\r\n\r\n  checkPasswordLength(controlName: string) {\r\n    if (this.formInfo.get(controlName)?.value) {\r\n      if (+this.formInfo.get(controlName)?.value.length > 40)\r\n        this.formInfo.get(controlName)?.patchValue(this.formInfo.get(controlName)?.value.slice(0, 40));\r\n    }\r\n  }\r\n\r\n  checkFullnameLength(controlName: string) {\r\n    if (this.formInfo.get(controlName)?.value) {\r\n      if (+this.formInfo.get(controlName)?.value.length > 60)\r\n        this.formInfo.get(controlName)?.patchValue(this.formInfo.get(controlName)?.value.slice(0, 60));\r\n    }\r\n  }\r\n\r\n  removeAlreadyExistError() {\r\n    this.errorExit = false;\r\n  }\r\n\r\n  shooww(event: any, controlName: string) {\r\n    this.formInfo.get(controlName)?.patchValue(event)\r\n  }\r\n}\r\n\r\n",
            "styleUrl": "./signup.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "DoCheck",
                "AfterViewInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container\" [ngClass]=\"{ lowOpacity: spinner }\">\r\n  <div class=\"formDiv\">\r\n    <div class=\"projName\">\r\n      <div class=\"nameContainer\">\r\n        <div><img src=\"assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n        <div class=\"projNDiv\"><p class=\"Name\">CMS Software</p></div>\r\n      </div>\r\n    </div>\r\n\r\n    <h1 id=\"welcomeId\">\r\n      Welcome! 👋\r\n      <!-- <i class=\"fa-solid fa-hand fa-flip-horizontal fa-lg\" style=\"color: #FFD43B;\"></i> -->\r\n    </h1>\r\n    <p id=\"info\" style=\"text-align: center\">\r\n      Sign Up to Manage Blog post account\r\n    </p>\r\n\r\n    <form\r\n      class=\"form-group\"\r\n      [formGroup]=\"formInfo\"\r\n      (ngSubmit)=\"Submit()\"\r\n      #form=\"ngForm\"\r\n    >\r\n      <div class=\"FLinksContainer\">\r\n        <div class=\"formLinks\">\r\n          <a href=\"https://www.google.com/\">\r\n            <p>\r\n              <img src=\"assets/images/google.svg\" alt=\"\" />\r\n              <span class=\"whenComputer\"\r\n                >Sign up with Google &nbsp; &nbsp;</span\r\n              >\r\n              <span class=\"whenPhone\">&nbsp;With Google</span>\r\n            </p>\r\n          </a>\r\n        </div>\r\n        <div class=\"formLinks\">\r\n          <a href=\"https://www.facebook.com/\">\r\n            <p>\r\n              <img src=\"assets/images/facebook.svg\" alt=\"\" />\r\n\r\n              <span class=\"whenComputer\">Sign up with Facebook</span>\r\n              <span class=\"whenPhone\">With Facebook</span>\r\n            </p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"line\">\r\n        <hr />\r\n        <span>OR</span>\r\n        <hr />\r\n      </div>\r\n      <div>\r\n        <label class=\"form-label\" for=\"fromInput1\">Full Name</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-input\"\r\n          formControlName=\"fullName\"\r\n          (input)=\"checkFullnameLength('fullName')\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n            formInfo.controls.fullName.touched &&\r\n            formInfo.controls.fullName.errors,\r\n            'is-valid':\r\n            formInfo.controls.fullName.touched && \r\n            formInfo.controls.fullName.errors == null ,\r\n            'is-touched':\r\n            formInfo.controls.fullName.untouched && \r\n            formInfo.controls.fullName.errors == null,\r\n        }\"\r\n          id=\"fromInput1\"\r\n          placeholder=\"i.e. Haitham mohamed\"\r\n        />\r\n        @if (formInfo.controls.fullName.errors &&\r\n        formInfo.controls.fullName.touched) {\r\n        <div class=\"invalid-feedback\">\r\n          @if (formInfo.controls.fullName.errors['required'] ) {\r\n          <p class=\"required\">Full Name is required</p>\r\n          }\r\n          <!-- @if (formInfo.controls.fullName.errors['minlength']) {\r\n          <p class=\"required\">Minimum characters are 3</p>\r\n          } -->\r\n\r\n          @if (formInfo.controls.fullName.errors['pattern'] ||\r\n          formInfo.controls.fullName.errors['minlength']) {\r\n          <p class=\"required\">Full Name is invalid</p>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      <div>\r\n        <label class=\"form-label\" for=\"fromInput2\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-input\"\r\n          id=\"fromInput2\"\r\n          placeholder=\"i.e. Haitham.mo@company.com\"\r\n          formControlName=\"email\"\r\n          (input)=\"removeAlreadyExistError()\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n            formInfo.controls.email.touched &&\r\n            formInfo.controls.email.errors,\r\n            'is-valid':\r\n            formInfo.controls.email.touched && \r\n            formInfo.controls.email.errors == null ,\r\n            'is-touched':\r\n            formInfo.controls.email.untouched && \r\n            formInfo.controls.email.errors == null,\r\n        }\"\r\n        />\r\n        @if (formInfo.controls.email.touched && formInfo.controls.email.errors)\r\n        {\r\n        <div class=\"invalid-feedback\">\r\n          @if (formInfo.controls.email.errors['required']) {\r\n          <p class=\"required\">Email is required</p>\r\n          } @if (formInfo.controls.email.errors['email']) {\r\n          <p>Email is invalid</p>\r\n          }\r\n        </div>\r\n        } @if(errorExit){\r\n        <p class=\"required1\">Email Already Exists</p>\r\n        }\r\n      </div>\r\n      <div class=\"label-div\">\r\n        <label class=\"form-label\" for=\"fromInput3\">Password</label>\r\n        @if (showPass) {\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-input passwordCheck\"\r\n          id=\"fromInput3\"\r\n          placeholder=\"******************\"\r\n          formControlName=\"password\"\r\n          (onChangeInputValue)=\"shooww($event, 'password')\"\r\n          (input)=\"checkPasswordLength('password')\"\r\n          [ngClass]=\"{\r\n              'is-invalid':\r\n              formInfo.controls.password.touched &&\r\n              formInfo.controls.password.errors,\r\n              'is-valid':\r\n              formInfo.controls.password.touched && \r\n              formInfo.controls.password.errors == null ,\r\n              'is-touched':\r\n              formInfo.controls.password.untouched && \r\n              formInfo.controls.password.errors == null,\r\n          }\"\r\n          (focusin)=\"test()\"\r\n          (focusout)=\"test()\"\r\n          [appPassword]=\"showPass\"\r\n        />\r\n        }@else {\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-input passwordCheck\"\r\n          id=\"fromInput3\"\r\n          placeholder=\"******************\"\r\n          formControlName=\"password\"\r\n          (change)=\"unshowPassAfter2S($event)\"\r\n          (input)=\"checkPasswordLength('password')\"\r\n          (onChangeInputValue)=\"shooww($event, 'password')\"\r\n          [ngClass]=\"{\r\n              'is-invalid':\r\n              formInfo.controls.password.touched &&\r\n              formInfo.controls.password.errors,\r\n              'is-valid':\r\n              formInfo.controls.password.touched && \r\n              formInfo.controls.password.errors == null ,\r\n              'is-touched':\r\n              formInfo.controls.password.untouched && \r\n              formInfo.controls.password.errors == null,\r\n          }\"\r\n          (focusin)=\"test()\"\r\n          (focusout)=\"test()\"\r\n          [appPassword]=\"showPass\"\r\n        />\r\n        } @if(showPass){\r\n        <fa-icon\r\n          [icon]=\"faEye\"\r\n          class=\"EyeIcon\"\r\n          (click)=\"showPassword()\"\r\n        ></fa-icon>\r\n        }@else {\r\n        <fa-icon\r\n          [icon]=\"faEyaSlash\"\r\n          class=\"EyeIcon\"\r\n          (click)=\"showPassword()\"\r\n        ></fa-icon>\r\n        }\r\n\r\n        <div\r\n          [ngClass]=\"{ passContainerSmallSize: passwordHint == true }\"\r\n          class=\"passwordCheckContainer\"\r\n        >\r\n          <div class=\"invalid-feedback\" [hidden]=\"!passwordHint\">\r\n            <div class=\"strongth-password\">\r\n              @if(formInfo.controls.password.value!.length < 6 ||\r\n              formInfo.controls.password.value!.length >= 6 &&\r\n              formInfo.controls.password.errors){\r\n              <div class=\"bar\" id=\"week\"></div>\r\n              <div class=\"bar\" id=\"mediumH\"></div>\r\n              <div class=\"bar\" id=\"strongH\"></div>\r\n\r\n              } @if(formInfo.controls.password.value!.length >= 6 &&\r\n              formInfo.controls.password.value!.length < 15 &&\r\n              formInfo.controls.password.errors==null){\r\n              <div class=\"bar\" id=\"mediumS\"></div>\r\n              <div class=\"bar\" id=\"medium\" #medium></div>\r\n              <div class=\"bar\" id=\"strongH\"></div>\r\n\r\n              } @if(formInfo.controls.password.value!.length >= 15 &&\r\n              formInfo.controls.password.errors==null){\r\n              <div class=\"bar\" id=\"weekH\"></div>\r\n              <div class=\"bar\" id=\"strongS\" #medium></div>\r\n              <div class=\"bar\" id=\"strong\" #strong></div>\r\n              }\r\n            </div>\r\n          </div>\r\n          <p\r\n            id=\"passHint\"\r\n            [ngClass]=\"{ show: passwordHint }\"\r\n            [ngClass]=\"{ hide: passwordHint }\"\r\n          >\r\n            Password hint : 8 characters minimum\r\n          </p>\r\n          <div\r\n            class=\"passwordValidation\"\r\n            style=\"\r\n              display: flex;\r\n              align-items: center;\r\n              justify-content: space-between;\r\n            \"\r\n          >\r\n            <div [hidden]=\"!passwordHint\" class=\"passwordHint\">\r\n              @if(formInfo.controls.password.value!.length < 6 ||\r\n              formInfo.controls.password.value!.length >= 6 &&\r\n              formInfo.controls.password.errors){\r\n              <p class=\"passCheckWord\">Password: Week</p>\r\n              } @if(formInfo.controls.password.value!.length >= 6 &&\r\n              formInfo.controls.password.value!.length < 15 &&\r\n              formInfo.controls.password.errors==null){\r\n              <p class=\"passCheckWord\">Password: Meduim</p>\r\n              } @if(formInfo.controls.password.value!.length >= 15 &&\r\n              formInfo.controls.password.errors==null){\r\n              <p class=\"passCheckWord\">Password: Strong</p>\r\n              }\r\n            </div>\r\n            <button type=\"button\" class=\"tooltip\">\r\n              !\r\n              <ul class=\"tooltiptext\">\r\n                Your Password Must Contain:\r\n                <li>\r\n                  <span\r\n                    class=\"correctIcon\"\r\n                    [ngClass]=\"{\r\n                      changeBG: numberLength\r\n                    }\"\r\n                    >✔</span\r\n                  >At least 8 characters\r\n                </li>\r\n                <li>\r\n                  <span\r\n                    class=\"correctIcon\"\r\n                    [ngClass]=\"{\r\n                      changeBG: uppercase\r\n                    }\"\r\n                    >✔</span\r\n                  >At least One Capital Letter\r\n                </li>\r\n                <li>\r\n                  <span\r\n                    class=\"correctIcon\"\r\n                    [ngClass]=\"{\r\n                      changeBG: Number\r\n                    }\"\r\n                    >✔</span\r\n                  >At least One Number\r\n                </li>\r\n                <li>\r\n                  <span\r\n                    class=\"correctIcon\"\r\n                    [ngClass]=\"{\r\n                      changeBG: specialChar\r\n                    }\"\r\n                    >✔</span\r\n                  >At least One Special\r\n                  <span style=\"margin-left: 12%\">Character:!#$%^&*()_+.</span>\r\n                </li>\r\n              </ul>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"label-div\">\r\n        <label class=\"form-label\" for=\"fromInput4\">Confirm Password</label>\r\n        @if (showConfirmPass) {\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-input passwordCheck\"\r\n          id=\"fromInput4\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"******************\"\r\n          (input)=\"checkPasswordLength('confirmPassword')\"\r\n          (onChangeInputValue)=\"shooww($event, 'confirmPassword')\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n            formInfo.controls.confirmPassword.touched &&\r\n            formInfo.controls.confirmPassword.errors,\r\n            'is-valid':\r\n            formInfo.controls.confirmPassword.touched && \r\n            formInfo.controls.confirmPassword.errors == null ,\r\n            'is-touched':\r\n            formInfo.controls.confirmPassword.untouched && \r\n            formInfo.controls.confirmPassword.errors == null,\r\n        }\"\r\n          [appPassword]=\"showConfirmPass\"\r\n        />\r\n        }@else {\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-input passwordCheck\"\r\n          id=\"fromInput4\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"******************\"\r\n          (input)=\"checkPasswordLength('confirmPassword')\"\r\n          (onChangeInputValue)=\"shooww($event, 'confirmPassword')\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n            formInfo.controls.confirmPassword.touched &&\r\n            formInfo.controls.confirmPassword.errors,\r\n            'is-valid':\r\n            formInfo.controls.confirmPassword.touched && \r\n            formInfo.controls.confirmPassword.errors == null ,\r\n            'is-touched':\r\n            formInfo.controls.confirmPassword.untouched && \r\n            formInfo.controls.confirmPassword.errors == null,\r\n        }\"\r\n          [appPassword]=\"showConfirmPass\"\r\n        />\r\n        } @if(showConfirmPass){\r\n        <fa-icon\r\n          [icon]=\"faEye\"\r\n          class=\"EyeIcon\"\r\n          (click)=\"showConfirmPassword()\"\r\n        ></fa-icon>\r\n        }@else {\r\n        <fa-icon\r\n          [icon]=\"faEyaSlash\"\r\n          class=\"EyeIcon\"\r\n          (click)=\"showConfirmPassword()\"\r\n        ></fa-icon>\r\n        } @if (formInfo.controls.confirmPassword.touched &&\r\n        formInfo.controls.confirmPassword.errors) {\r\n        <div class=\"invalid-feedback\">\r\n          @if (formInfo.controls.confirmPassword.errors['required']) {\r\n          <p class=\"required\">Confirm Password is required</p>\r\n          } @if (formInfo.controls.confirmPassword.errors['passwordMismatch']) {\r\n          <p class=\"required\">Confirm Password does not match</p>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        class=\"submitButton\"\r\n        [disabled]=\"formInfo.invalid\"\r\n        [ngClass]=\"{ disabled: formInfo.invalid }\"\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n\r\n    <div class=\"paragraphs\">\r\n      <p class=\"info\">Have an Account? <a routerLink=\"/auth/signin\">Login</a></p>\r\n      <p class=\"para\">\r\n        By signing up you agree to our\r\n        <a style=\"font-weight: 400\" href=\"\">Terms</a> and\r\n        <a href=\"\" style=\"font-weight: 400\">privacy policy</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"SlidesContainer\">\r\n    <!-- Slideshow container -->\r\n    <div class=\"slideshow-container\">\r\n      <!-- Full-width images with number and caption text -->\r\n      <div id=\"mySlide\" class=\"mySlides fade\">\r\n        <div class=\"cardDiv\">\r\n          <div class=\"avatar\" [ngClass]=\"{ hide: slidIndex == 1 }\">\r\n            <img\r\n              src=\"assets/images/data.svg\"\r\n              alt=\"Data\"\r\n              class=\"insideImg\"\r\n              id=\"inside\"\r\n            />\r\n          </div>\r\n\r\n          <img src=\"{{ showSlides() }}\" alt=\"Slides\" class=\"img1\" />\r\n        </div>\r\n        <div class=\"text\">\r\n          <p style=\"font-size: 22px; font-weight: 500\">\r\n            Manage Any Content Anywhere\r\n          </p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis\r\n            repellat modi dicta suscipit vero\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!-- Next and previous buttons -->\r\n      <!-- <div style=\"display: flex; justify-content: space-between; position: relative; top: -50%;\">\r\n        <a class=\"prev\" (click)=\"prevSlides()\">&#10094;</a>\r\n        <a class=\"next\" (click)=\"nextSlides()\">&#10095;</a>\r\n      </div> -->\r\n    </div>\r\n\r\n    <div class=\"dots\" style=\"text-align: center\">\r\n      <a class=\"arrows\" (click)=\"currentSlide(0)\">&#x2190;</a>\r\n      <span\r\n        id=\"dot1\"\r\n        class=\"active-dot\"\r\n        (click)=\"currentSlide(0)\"\r\n        [ngClass]=\"{ dot: slidIndex == 1, 'active-dot': slidIndex == 0 }\"\r\n      ></span>\r\n      <span\r\n        id=\"dot2\"\r\n        class=\"dot\"\r\n        (click)=\"currentSlide(1)\"\r\n        [ngClass]=\"{ 'active-dot': slidIndex == 1 }\"\r\n      ></span>\r\n      <a class=\"arrows\" (click)=\"currentSlide(1)\">&#x2192;</a>\r\n    </div>\r\n\r\n    <!-- The dots/circles -->\r\n  </div>\r\n</div>\r\n\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}\r\n"
        },
        {
            "name": "SignupverificationComponent",
            "id": "component-SignupverificationComponent-3426309ea487057303c8e88925a23899fb3550eba92fa1607b951042e7ff9e73ed7684a42c78b78cbe1f4e0edfd4bc75eff2ca6b6d064f36728ee376ebc5a279",
            "file": "src/app/components/Authentication/signupverification/signupverification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signupverification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signupverification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "errorExist",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "formVerification",
                    "defaultValue": "new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "resendOTPBool",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "resendOtpMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "sessionStorage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "slides",
                    "defaultValue": "[\r\n    'assets/images/verification-rightside.svg',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "slidIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "str",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "str1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "str2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "str3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "str4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "str5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "str6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeErrorExit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resendOTP",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSlides",
                    "args": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slidIndex"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.slidIndex",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verificationSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TitleCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "AutoFocusDirective",
                    "type": "directive"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { CommonModule, TitleCasePipe } from '@angular/common';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { AutoFocusDirective } from '../directives/auto-focus.directive';\r\nimport { SpinnerComponent } from '../../../shared/spinner/spinner/spinner.component';\r\n// import { SignupComponent } from '../signup/signup.component'; \r\n\r\n@Component({\r\n  selector: 'app-signupverification',\r\n  standalone: true,\r\n  imports: [\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    TitleCasePipe,\r\n    AutoFocusDirective,\r\n    SpinnerComponent\r\n  ],\r\n  templateUrl: './signupverification.component.html',\r\n  styleUrl: './signupverification.component.css',\r\n})\r\nexport class SignupverificationComponent implements OnInit {\r\n  str1!: string;\r\n  str2!: string;\r\n  str3!: string;\r\n  str4!: string;\r\n  str5!: string;\r\n  str6!: string;\r\n  errorExist!: boolean;\r\n  str: string = '';\r\n  email!: string | undefined;\r\n  sessionStorage!: string | undefined;\r\n  resendOTPBool!: Boolean;\r\n  resendOtpMsg!: string;\r\n  spinner!: Boolean\r\n\r\n  public slides: string[] = [\r\n    'assets/images/verification-rightside.svg',\r\n  ];\r\n\r\n\r\n  formVerification = new FormGroup({\r\n    verificationCode1: new FormControl(''),\r\n    verificationCode2: new FormControl(''),\r\n    verificationCode3: new FormControl(''),\r\n    verificationCode4: new FormControl(''),\r\n    verificationCode5: new FormControl(''),\r\n    verificationCode6: new FormControl(''),\r\n  });\r\n  slidIndex: any = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private _Router: Router,\r\n  ) {\r\n    this.resendOTPBool = false;\r\n    this.spinner = false;\r\n    this.errorExist = false;\r\n  }\r\n  ngOnInit(): void {\r\n    this.email = sessionStorage?.getItem('email')?.slice(0, 4).concat(\"************\");\r\n    if (!this.email) {\r\n      this._Router.navigate(['/auth/signup']);\r\n    }\r\n    this.formVerification = this.formBuilder.group({\r\n      verificationCode1: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode2: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode3: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode4: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode5: ['', [Validators.required, Validators.maxLength(1)]],\r\n      verificationCode6: ['', [Validators.required, Validators.maxLength(1)]],\r\n    });\r\n  }\r\n\r\n  verificationSubmit() {\r\n    this.spinner = true;\r\n    if (this.formVerification.invalid) {\r\n      this.spinner = false;\r\n      console.log(this.formVerification);\r\n      return;\r\n    }\r\n    this.str = `${this.str1}${this.str2}${this.str3}${this.str4}${this.str5}${this.str6}`;\r\n    this._authService.verificationCode(this.str).subscribe({\r\n      next: (res) => {\r\n        this.spinner = false;\r\n        sessionStorage.clear();\r\n        this._Router.navigateByUrl('/auth/signin');\r\n      },\r\n      error: (err) => {\r\n        this.spinner = false;\r\n        this.errorExist = true;\r\n        this.resendOTPBool = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  resendOTP() {\r\n    this.errorExist = false;\r\n    this.resendOTPBool = false;\r\n    this.spinner = true;\r\n    this._authService.resendOTP().subscribe({\r\n      next: (res: any) => {\r\n        this.spinner = false;\r\n        this.resendOTPBool = true;\r\n        this.resendOtpMsg = res.message;\r\n      },\r\n      error: (err) => {\r\n        this.errorExist = false;\r\n        this.spinner = false;\r\n        this.resendOTPBool = true;\r\n        this.resendOtpMsg = err.error.message;\r\n      },\r\n    });\r\n  }\r\n\r\n  removeErrorExit() {\r\n    this.errorExist = false;\r\n  }\r\n\r\n  showSlides(i = this.slidIndex) {\r\n    let silde = this.slides[i];\r\n    return silde;\r\n  }\r\n}\r\n",
            "styleUrl": "./signupverification.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_Router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container\">\r\n  <div class=\"formDiv\">\r\n    <div class=\"projName\">\r\n      <div class=\"nameContainer\">\r\n        <div><img src=\"assets/images/Icon.png\" alt=\"Logo\" /></div>\r\n        <div class=\"projNDiv\">\r\n          <p class=\"Name\">CMS Software</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"text-align: center\" class=\"loginDiv\">\r\n      <h1>Email Verification</h1>\r\n      <p class=\"info1\">\r\n        We sent OTP code to\r\n        <span style=\"color: #0660fc\">{{ email | titlecase }}</span>\r\n      </p>\r\n      <img style=\"margin-left: auto; margin-right: auto\" src=\"assets/images/smartphone.svg\" alt=\"OTP photo\" />\r\n\r\n      <form action=\"\" [formGroup]=\"formVerification\" (ngSubmit)=\"verificationSubmit()\" #form=\"ngForm\">\r\n        <div>\r\n          <label for=\"verificationCode\" class=\"labelInput\">Type your 6 digits security code </label><br />\r\n          <div class=\"verificationInpts\">\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" min=\"0\" max=\"9\"\r\n              oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n              class=\"inputVerificationStyle\" id=\"verificationCode\" [(ngModel)]=\"str1\"\r\n              formControlName=\"verificationCode1\" [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode1.touched &&\r\n                formVerification.controls.verificationCode1.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode1.touched && \r\n                formVerification.controls.verificationCode1.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode1.untouched && \r\n                formVerification.controls.verificationCode1.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" #inp />\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" min=\"0\" max=\"9\"\r\n              oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n              class=\"inputVerificationStyle\" id=\"verificationNum\" [(ngModel)]=\"str2\" formControlName=\"verificationCode2\"\r\n              [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode2.touched &&\r\n                formVerification.controls.verificationCode2.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode2.touched && \r\n                formVerification.controls.verificationCode2.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode2.untouched && \r\n                formVerification.controls.verificationCode2.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" />\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" min=\"0\" max=\"9\"\r\n              oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" [(ngModel)]=\"str3\"\r\n              class=\"inputVerificationStyle\" id=\"verificationNum\" formControlName=\"verificationCode3\" [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode3.touched &&\r\n                formVerification.controls.verificationCode3.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode3.touched && \r\n                formVerification.controls.verificationCode3.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode3.untouched && \r\n                formVerification.controls.verificationCode3.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" />\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" min=\"0\" max=\"9\"\r\n              oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n              class=\"inputVerificationStyle\" id=\"verificationNum\" [(ngModel)]=\"str4\" formControlName=\"verificationCode4\"\r\n              [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode4.touched &&\r\n                formVerification.controls.verificationCode4.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode4.touched && \r\n                formVerification.controls.verificationCode4.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode4.untouched && \r\n                formVerification.controls.verificationCode4.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" />\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" min=\"0\" max=\"9\"\r\n              oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n              class=\"inputVerificationStyle\" id=\"verificationNum\" [(ngModel)]=\"str5\" formControlName=\"verificationCode5\"\r\n              [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode5.touched &&\r\n                formVerification.controls.verificationCode5.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode5.touched && \r\n                formVerification.controls.verificationCode5.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode5.untouched && \r\n                formVerification.controls.verificationCode5.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" />\r\n            <input appAutoFocus type=\"text\" maxlength=\"1\" class=\"inputVerificationStyle\" id=\"verificationNum\"\r\n              [(ngModel)]=\"str6\" formControlName=\"verificationCode6\" [ngClass]=\"{\r\n                'is-invalid1':\r\n                (formVerification.controls.verificationCode6.touched &&\r\n                formVerification.controls.verificationCode6.errors) || errorExist ,\r\n                'is-valid':\r\n                formVerification.controls.verificationCode6.touched && \r\n                formVerification.controls.verificationCode6.errors == null && !errorExist,\r\n                'is-touched':\r\n                formVerification.controls.verificationCode6.untouched && \r\n                formVerification.controls.verificationCode6.errors == null,\r\n            }\" (change)=\"removeErrorExit()\" />\r\n          </div>\r\n          @if (errorExist) {\r\n          <p class=\"required1\">Invalid Code</p>\r\n          } @if (resendOTPBool) {\r\n          <p class=\"required1\">{{ resendOtpMsg }}</p>\r\n          }\r\n        </div>\r\n        <button type=\"submit\" [ngClass]=\"{ disabled: formVerification.invalid }\" [disabled]=\"formVerification.invalid\">\r\n          Submit Code\r\n        </button>\r\n        <p class=\"info2\">\r\n          Didn't get the code ? <a (click)=\"resendOTP()\">Resend</a> or\r\n          <a>call us</a>\r\n        </p>\r\n        <!-- <input type=\"submit\"> -->\r\n      </form>\r\n    </div>\r\n    <div class=\"paragraphs\">\r\n      <p class=\"info\">\r\n        By signing up you agree to our\r\n        <a style=\"font-weight: 400\" href=\"\">Terms</a> and\r\n        <a href=\"\" style=\"font-weight: 400\">privacy policy</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"SlidesContainer\">\r\n    <!-- Slideshow container -->\r\n    <div class=\"slideshow-container\">\r\n      <!-- Full-width images with number and caption text -->\r\n      <div id=\"mySlide\" class=\"mySlides\">\r\n        <div class=\"cardDiv\">\r\n          <img src=\"{{ showSlides() }}\" alt=\"Slides\" class=\"img1\" />\r\n        </div>\r\n        <!-- <div class=\"text\">\r\n          <p>Manage Any Content Anywhere</p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis\r\n            repellat modi dicta suscipit vero\r\n          </p>\r\n        </div> -->\r\n      </div>\r\n      <!-- Next and previous buttons -->\r\n      <!-- <div style=\"display: flex; justify-content: space-between; position: relative; top: -50%;\">\r\n        <a class=\"prev\" (click)=\"prevSlides()\">&#10094;</a>\r\n        <a class=\"next\" (click)=\"nextSlides()\">&#10095;</a>\r\n      </div> -->\r\n    </div>\r\n    <!-- The dots/circles -->\r\n  </div>\r\n</div>\r\n\r\n@if(spinner){\r\n<div class=\"spinner\">\r\n  <app-spinner></app-spinner>\r\n</div>\r\n}"
        },
        {
            "name": "SortComponent",
            "id": "component-SortComponent-0bb1f04dd5bf4bc9b5b745b86ce52482fd60c89d8a93d297e1fff6fe2e5c2c15fa6b2a01523be3a327a6392d086d157543dd3d315b4457c324d27dfb250703f6",
            "file": "src/app/shared/sort/sort/sort.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sort",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sort.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onSort",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "openSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSortMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { ToggleDeleteModalService } from '../../../services/toggleModal/toggle-delete-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-sort',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './sort.component.html',\r\n  styleUrl: './sort.component.css'\r\n})\r\nexport class SortComponent {\r\n\r\n  openSort!: Boolean;\r\n  @Output() onSort = new EventEmitter<void>();\r\n\r\n  constructor(private _ToggleSortService: ToggleDeleteModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._ToggleSortService.getSortValue().subscribe({\r\n      next: (toggler) => { this.openSort = toggler }\r\n    })\r\n  }\r\n\r\n\r\n  toggleSortMenu() {\r\n    this._ToggleSortService.toggleSort()\r\n    this.openSort = !this.openSort\r\n  }\r\n}\r\n",
            "styleUrl": "./sort.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ToggleSortService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_ToggleSortService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"container\" (click)=\"toggleSortMenu()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"sort-container\">\r\n        <div>\r\n          <div class=\"sort-btn\">\r\n            <img src=\"assets/images/arrow-swap-inactive.svg\" alt=\"sort\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      @if(openSort){\r\n      <div class=\"sortMenu\">\r\n        <div class=\"sortSearch\">\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            placeholder=\"Search columns\"\r\n          />\r\n          <img src=\"assets/images/search-normal.svg\" alt=\"Search\" />\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-0fe749f059339e2c47ce1767e2ace8977082d3d040517e945ddf94f9919885645eaa9f2adc6c7e447177e758188caddf65f068e0a4832a6f737fe73d6e69ee21",
            "file": "src/stories/spinner/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'loading'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './spinner.component.html',\r\n  styleUrl: './spinner.component.css',\r\n})\r\nexport class SpinnerComponent {\r\n\r\n  @Input('backgroundColor') backgroundColor!: string;\r\n  @ViewChild('loading') loading!: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    this.loading.nativeElement.style.border = `6px solid ${this.backgroundColor}`;\r\n    this.loading.nativeElement.style.borderTop = `6px solid rgba(6, 96, 252, 0.12)`;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loading.nativeElement.style.border = `6px solid ${this.backgroundColor}`;\r\n    this.loading.nativeElement.style.borderTop = `6px solid rgba(6, 96, 252, 0.12)`;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./spinner.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<div id=\"loading\" #loading></div>\r\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-ea7a68608afc5a55123d987fa1e785dbbdb0ddf7765ec89a7c2a1c1603cdde50d94294448583bc2e71e2e489f627d684719d6de51dd1b1f6131f438eef243054-1",
            "file": "src/app/shared/spinner/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { animate, keyframes, style, transition, trigger } from '@angular/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './spinner.component.html',\r\n  styleUrl: './spinner.component.css',\r\n  // animations: [\r\n  //   trigger('keyframes', [\r\n  //     transition(':enter', [\r\n  //       animate('2s',\r\n  //         keyframes([\r\n  //           style({ transform: 'rotate(0deg)' }),\r\n  //           style({ transform: 'rotate(360deg)' }),\r\n  //         ])),\r\n  //     ])\r\n  //   ])\r\n  // ]\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./spinner.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SpinnerComponent-1",
            "templateData": "<div id=\"loading\"></div>\r\n"
        },
        {
            "name": "SubscriptionComponent",
            "id": "component-SubscriptionComponent-0a7f6941dbee5d9123488acb41ecf2ccf9d05ddafecb4b45150f3aa8739c48b28a8ac99a454885bbe394936ffbcc30e494ffea3a64e06391a9b17afb35538fc0",
            "file": "src/app/components/core/Setting/subscription/subscription.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-subscription",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./subscription.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentToast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Toast",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "paymentHandler",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "stripe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "subscriptionPlans",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SubscriptionPlan[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "ToastValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "switchSubscriptionPlan",
                    "args": [
                        {
                            "name": "subscriptionId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nFor YEARLY MONTHLY TOGGLE",
                    "description": "<p>For YEARLY MONTHLY TOGGLE</p>\n",
                    "jsdoctags": [
                        {
                            "name": "subscriptionId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "ToastSystemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CommonModule, DecimalPipe } from '@angular/common';\r\n\r\nimport { BreadcrumbService } from '../../../../services/breadcrumb/breadcrumb.service';\r\nimport { SpinnerComponent } from '../../../../shared/spinner/spinner/spinner.component';\r\nimport { ToastSystemComponent } from '../../../../shared/toasts/system/toast-system.component';\r\nimport { SettingsService } from '../services/settings.service';\r\nimport { SubscriptionPlan } from '../interfaces/subscriptionPlan';\r\nimport { ToastService } from '../../../../services/toast/toast.service';\r\nimport { Toast, ToastType } from '../../../../interfaces/toast';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'app-subscription',\r\n  standalone: true,\r\n  imports: [SpinnerComponent, CommonModule, DecimalPipe,\r\n    ToastSystemComponent],\r\n  templateUrl: './subscription.component.html',\r\n  styleUrl: './subscription.component.css'\r\n})\r\nexport class SubscriptionComponent implements OnInit, OnDestroy {\r\n\r\n  paymentHandler: any = null;\r\n  ToastValue!: Boolean;\r\n  currentToast!: Toast;\r\n  subscriptionPlans!: SubscriptionPlan[];\r\n  stripe!: any;\r\n  /** For YEARLY MONTHLY TOGGLE */\r\n  // @ViewChild('yearly') defaultSubscriptionDuration!: ElementRef\r\n  /** For YEARLY MONTHLY TOGGLE */\r\n\r\n  constructor(private _BreadCurmb: BreadcrumbService, private _SettingService: SettingsService, private _ToastService: ToastService) {\r\n    this.subscriptionPlans = [];\r\n    this.stripe = Stripe('pk_test_51P1mSOP1LthvrNRytSrlruNUBW9xu2RkU0wWebSIQnCon5rnbS9ChmgNEcSmW1BKYFCw8a8gi5Nkh66MkYnA1Ur800Dco3LkrG');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._BreadCurmb.changeCurrentPath();\r\n    this._SettingService.getSubscriptionPlans().subscribe({\r\n      next: (plans) => {\r\n        console.log(plans);\r\n        this.subscriptionPlans = plans;\r\n      },\r\n      error: () => {\r\n      }\r\n    })\r\n  }\r\n\r\n  /** For YEARLY MONTHLY TOGGLE */\r\n\r\n  // ngAfterViewInit(): void {\r\n  //   this.defaultSubscriptionDuration.nativeElement.classList.add('subscription-duration-active');\r\n  // }\r\n\r\n  // chooseSubscriptionPlanDuration(first: HTMLElement, second: HTMLElement) {\r\n  //   first.classList.add('subscription-duration-active');\r\n  //   second.classList.remove('subscription-duration-active');\r\n  // }\r\n\r\n  /** For YEARLY MONTHLY TOGGLE */\r\n\r\n\r\n  switchSubscriptionPlan(subscriptionId: number) {\r\n\r\n\r\n\r\n    // sessionStorage.setItem(\"sessionSettingId\", \"cs_test_a1oo8bKbEkXvYZDtVdcVAl0yxxAfJeOiHO5nKPJwvwCz8FIcGAflpRKRvP\");\r\n\r\n    // this.stripe.redirectToCheckout({\r\n    //   sessionId: \"cs_test_a1oo8bKbEkXvYZDtVdcVAl0yxxAfJeOiHO5nKPJwvwCz8FIcGAflpRKRvP\",\r\n    // });\r\n\r\n\r\n    this._SettingService.switchSubscriptionPlan(subscriptionId).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res.message);\r\n\r\n        this._ToastService.addToast(new Toast(ToastType.Success, 'Success', res.message, 3000));\r\n        this._SettingService.getStripeSessionIdToCheckout().subscribe({\r\n          next: (session) => {\r\n            this.stripe.redirectToCheckout({\r\n              sessionId: session\r\n            });\r\n            sessionStorage.setItem(\"sessionSettingId\", session);\r\n          },\r\n          error: () => {\r\n            console.log(\"No session id found\");\r\n          }\r\n        });\r\n      },\r\n      error: (err) => {\r\n        this._ToastService.addToast(new Toast(ToastType.Failed, 'Error', err.error.message, 3000));\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void { }\r\n}\r\n",
            "styleUrl": "./subscription.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>For YEARLY MONTHLY TOGGLE</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_SettingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "rawdescription": "\nFor YEARLY MONTHLY TOGGLE",
                "jsdoctags": [
                    {
                        "name": "_BreadCurmb",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_SettingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ToastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\">\r\n  <div>\r\n    <div class=\"col-12 subscription-content\">\r\n      <div class=\"section-title\">\r\n        <h3>Choose an annual membership</h3>\r\n        <small>Choose the perfect plan for your business needs</small>\r\n      </div>\r\n      <!-- <div class=\"year-month-toggle\">\r\n        <div class=\"year-month\">\r\n          <div #yearly class=\"subscription-duration-year\" (click)=\"chooseSubscriptionPlanDuration(yearly, monthly)\">\r\n            Yearly\r\n          </div>\r\n          <div class=\"subscription-duration-month\" #monthly (click)=\"chooseSubscriptionPlanDuration(monthly, yearly)\">\r\n            Monthly\r\n          </div>\r\n        </div>\r\n        <div class=\"hint-subscription\">\r\n          <p>Save 15% on yearly plan!</p>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <div class=\"cards\">\r\n        @for (plan of subscriptionPlans; track plan.id; let i = $index) {\r\n        @if(plan.id != 3){\r\n        <div class=\"card\">\r\n          <div class=\"card-title\">\r\n            <h4>{{ plan.title }}</h4>\r\n            <p>{{ plan.subTitle }}</p>\r\n          </div>\r\n          <div class=\"card-plan\">\r\n            <div class=\"card-plan-cost\">\r\n              <h2>${{ plan.price }}</h2>\r\n              <div class=\"card-plan-cost-per-month\">\r\n                @if(plan.duration){/month}@else {/year}\r\n              </div>\r\n            </div>\r\n            <div class=\"card-get-started\" (click)=\"switchSubscriptionPlan(plan.id)\"\r\n              [ngClass]=\"{ disable: plan.isCurrentPlan }\">\r\n              <p>Get Started</p>\r\n            </div>\r\n            <div class=\"card-plan-feature\">\r\n              <div class=\"card-plan-feature-title\">\r\n                <h5>What you get:</h5>\r\n              </div>\r\n              <div class=\"card-plan-feature-description\">\r\n                <ul>\r\n                  <li>\r\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                        d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                        fill=\"white\" />\r\n                    </svg>\r\n                    <p>{{ plan.numberOfUsers }}</p>\r\n                    Users\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                        d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                        fill=\"white\" />\r\n                    </svg>\r\n                    <p>{{ plan.numberOfPosts }}</p>\r\n                    Posts\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                        d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                        fill=\"white\" />\r\n                    </svg>\r\n                    @if(plan.storageCapacity >= 1024){\r\n                    <p>{{ plan.storageCapacity / 1024 }}</p>\r\n                    Gigabyte }@else {\r\n                    <p>\r\n                      {{ plan.storageCapacity | number }}\r\n                    </p>\r\n                    Megabyte }\r\n                  </li>\r\n                  <li>\r\n                    @if(plan.seoUsage){\r\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                        d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                        fill=\"white\" />\r\n                    </svg>\r\n                    }@else{\r\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <rect x=\"0.442749\" y=\"0.46582\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#D8D8E5\" />\r\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                        d=\"M15.8705 6.7704L8.65539 15.0162L5.01379 11.3746L5.89768 10.4908L8.59451 13.1876L14.9298 5.94727L15.8705 6.7704Z\"\r\n                        fill=\"white\" />\r\n                    </svg>\r\n                    } SEO Usage\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        }@else{\r\n        <div class=\"card-most-popular\">\r\n          <div class=\"top-section-most-popular\">\r\n            <p>Most Popular</p>\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <g clip-path=\"url(#clip0_562_20555)\">\r\n                <path\r\n                  d=\"M6.25006 15.0926C6.1023 15.0934 5.95783 15.049 5.83595 14.9654C5.71408 14.8819 5.6206 14.7631 5.56802 14.6251L4.4038 11.5976C4.38022 11.5366 4.34415 11.4812 4.2979 11.435C4.25165 11.3887 4.19625 11.3526 4.13524 11.3291L1.10693 10.164C0.968988 10.111 0.850339 10.0175 0.766645 9.89573C0.682951 9.77396 0.638148 9.62968 0.638148 9.48192C0.638148 9.33417 0.682951 9.18988 0.766645 9.06812C0.850339 8.94635 0.968988 8.85282 1.10693 8.79988L4.13437 7.63566C4.19537 7.61208 4.25078 7.57601 4.29702 7.52976C4.34327 7.48351 4.37934 7.42811 4.40292 7.3671L5.56802 4.33879C5.62096 4.20085 5.71449 4.0822 5.83625 3.9985C5.95802 3.91481 6.10231 3.87001 6.25006 3.87001C6.39782 3.87001 6.5421 3.91481 6.66387 3.9985C6.78564 4.0822 6.87917 4.20085 6.93211 4.33879L8.09633 7.36623C8.11991 7.42723 8.15598 7.48264 8.20223 7.52888C8.24848 7.57513 8.30388 7.6112 8.36488 7.63478L11.3748 8.79286C11.5183 8.84608 11.642 8.94223 11.729 9.06825C11.8159 9.19427 11.8619 9.34402 11.8608 9.49712C11.8585 9.6423 11.8128 9.78348 11.7294 9.90237C11.646 10.0213 11.5289 10.1124 11.3932 10.164L8.36576 11.3282C8.30476 11.3518 8.24935 11.3878 8.2031 11.4341C8.15686 11.4803 8.12079 11.5357 8.09721 11.5967L6.93211 14.6251C6.87953 14.7631 6.78605 14.8819 6.66418 14.9654C6.5423 15.049 6.39783 15.0934 6.25006 15.0926Z\"\r\n                  fill=\"white\" />\r\n                <path\r\n                  d=\"M2.74338 5.27391C2.65676 5.2739 2.57216 5.24765 2.50075 5.19862C2.42933 5.14958 2.37445 5.08006 2.34333 4.99922L1.85064 3.71811C1.83996 3.69009 1.82348 3.66465 1.80228 3.64345C1.78108 3.62224 1.75563 3.60576 1.72762 3.59509L0.44651 3.1024C0.365675 3.07127 0.296166 3.01638 0.247141 2.94497C0.198116 2.87355 0.171875 2.78897 0.171875 2.70234C0.171875 2.61572 0.198116 2.53113 0.247141 2.45972C0.296166 2.38831 0.365675 2.33342 0.44651 2.30229L1.72762 1.8096C1.75561 1.79887 1.78103 1.78238 1.80222 1.76118C1.82342 1.73999 1.83992 1.71457 1.85064 1.68658L2.33895 0.416865C2.36649 0.342115 2.41387 0.276283 2.47602 0.226443C2.53816 0.176604 2.61272 0.144642 2.69166 0.133993C2.78644 0.122471 2.88236 0.14292 2.9642 0.192098C3.04604 0.241277 3.10912 0.316369 3.14344 0.405468L3.63613 1.68658C3.64685 1.71457 3.66335 1.73999 3.68455 1.76118C3.70574 1.78238 3.73116 1.79887 3.75915 1.8096L5.04026 2.30229C5.12109 2.33342 5.1906 2.38831 5.23963 2.45972C5.28865 2.53113 5.31489 2.61572 5.31489 2.70234C5.31489 2.78897 5.28865 2.87355 5.23963 2.94497C5.1906 3.01638 5.12109 3.07127 5.04026 3.1024L3.75915 3.59509C3.73113 3.60576 3.70569 3.62224 3.68449 3.64345C3.66329 3.66465 3.64681 3.69009 3.63613 3.71811L3.14344 4.99922C3.11232 5.08006 3.05744 5.14958 2.98602 5.19862C2.91461 5.24765 2.83001 5.2739 2.74338 5.27391Z\"\r\n                  fill=\"white\" />\r\n                <path\r\n                  d=\"M11.8608 7.61169C11.7662 7.61167 11.674 7.583 11.5961 7.52948C11.5182 7.47595 11.4584 7.40009 11.4245 7.31187L10.757 5.57694C10.7453 5.54637 10.7272 5.51861 10.7041 5.49545C10.6809 5.4723 10.6532 5.45426 10.6226 5.44252L8.88767 4.77508C8.79953 4.74112 8.72374 4.68126 8.67029 4.60338C8.61684 4.5255 8.58823 4.43325 8.58823 4.33879C8.58823 4.24434 8.61684 4.15209 8.67029 4.07421C8.72374 3.99633 8.79953 3.93647 8.88767 3.9025L10.6226 3.23507C10.6532 3.22333 10.6809 3.20529 10.7041 3.18214C10.7272 3.15898 10.7453 3.13121 10.757 3.10064L11.4195 1.37799C11.4497 1.29653 11.5015 1.22478 11.5693 1.17039C11.637 1.116 11.7183 1.081 11.8044 1.06911C11.9078 1.05659 12.0124 1.07897 12.1017 1.13271C12.1909 1.18644 12.2597 1.26845 12.297 1.36571L12.9645 3.10064C12.9762 3.13121 12.9943 3.15898 13.0174 3.18214C13.0406 3.20529 13.0683 3.22333 13.0989 3.23507L14.8338 3.9025C14.922 3.93647 14.9978 3.99633 15.0512 4.07421C15.1047 4.15209 15.1333 4.24434 15.1333 4.33879C15.1333 4.43325 15.1047 4.5255 15.0512 4.60338C14.9978 4.68126 14.922 4.74112 14.8338 4.77508L13.0989 5.44252C13.0683 5.45426 13.0406 5.4723 13.0174 5.49545C12.9943 5.51861 12.9762 5.54637 12.9645 5.57694L12.297 7.31187C12.2631 7.40009 12.2033 7.47595 12.1254 7.52948C12.0475 7.583 11.9553 7.61167 11.8608 7.61169Z\"\r\n                  fill=\"white\" />\r\n              </g>\r\n              <defs>\r\n                <clipPath id=\"clip0_562_20555\">\r\n                  <rect width=\"14.9618\" height=\"14.9618\" fill=\"white\" transform=\"translate(0.171753 0.129883)\" />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n          </div>\r\n          <div class=\"card-most-popular-body\">\r\n            <div class=\"card-title\">\r\n              <h4>{{ plan.title }}</h4>\r\n              <p>{{ plan.subTitle }}</p>\r\n            </div>\r\n            <div class=\"card-plan\">\r\n              <div class=\"card-plan-cost\">\r\n                <h2>${{ plan.price }}</h2>\r\n                <div class=\"card-plan-cost-per-month\">\r\n                  @if(plan.duration){/month}@else {/year}\r\n                </div>\r\n              </div>\r\n              <div class=\"card-get-started\" [ngClass]=\"{ disable: plan.isCurrentPlan }\"\r\n                (click)=\"switchSubscriptionPlan(plan.id)\">\r\n                <p>Get Started</p>\r\n              </div>\r\n              <div class=\"card-plan-feature\">\r\n                <div class=\"card-plan-feature-title\">\r\n                  <h5>What you get:</h5>\r\n                </div>\r\n                <div class=\"card-plan-feature-description\">\r\n                  <ul>\r\n                    <li>\r\n                      <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                          fill=\"white\" />\r\n                      </svg>\r\n                      <p>{{ plan.numberOfUsers }}</p>\r\n                      Users\r\n                    </li>\r\n                    <li>\r\n                      <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                          fill=\"white\" />\r\n                      </svg>\r\n                      <p>{{ plan.numberOfPosts }}</p>\r\n                      Posts\r\n                    </li>\r\n\r\n                    <li>\r\n                      <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                          fill=\"white\" />\r\n                      </svg>\r\n                      @if(plan.storageCapacity / 1024 >=1){\r\n                      <p>{{ plan.storageCapacity / 1024 }}</p>\r\n                      Gigabyte }@else {\r\n                      <p>{{ plan.storageCapacity / 1024 }}</p>\r\n                      Megabyte }\r\n                    </li>\r\n\r\n                    <li>\r\n                      @if(plan.seoUsage){\r\n\r\n                      <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.442749\" y=\"0.541992\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M15.8705 6.84657L8.65539 15.0924L5.01379 11.4508L5.89768 10.5669L8.59451 13.2638L14.9298 6.02344L15.8705 6.84657Z\"\r\n                          fill=\"white\" />\r\n                      </svg>\r\n                      }@else {<svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g opacity=\"0.2\">\r\n                          <rect x=\"0.0687256\" y=\"0.350586\" width=\"20\" height=\"20\" rx=\"10\" fill=\"#0660FC\" />\r\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                            d=\"M15.4964 6.65516L8.28131 14.901L4.63971 11.2594L5.52359 10.3755L8.22042 13.0724L14.5557 5.83203L15.4964 6.65516Z\"\r\n                            fill=\"white\" />\r\n                        </g>\r\n                      </svg>\r\n                      } SEO Usage\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        } }\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "SubscriptionPlanComponent",
            "id": "component-SubscriptionPlanComponent-04c14a61685e2c2beaf67a5d7b5df26942c92b346f7a4514269a2f40c61d3e9a4318e6f9569c6627fb4b7987096e46b377c505c27df85ca1580f97ad23e8cd10",
            "file": "src/app/shared/subscription-plan/subscription-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-subscription-plan",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./subscription-plan.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-subscription-plan',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './subscription-plan.component.html',\r\n  styleUrl: './subscription-plan.component.css'\r\n})\r\nexport class SubscriptionPlanComponent {\r\n\r\n}\r\n",
            "styleUrl": "./subscription-plan.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"subscription-plan-container\">\r\n  <div class=\"subscription-plan-header\">\r\n    <div class=\"subscription-plan-header-content\">\r\n      <h2>Subscription Plan</h2>\r\n      <p>Placehold is a simple, fast and free image placeholder</p>\r\n    </div>\r\n    <div class=\"subscription-plan-header-image\">\r\n      <svg\r\n        width=\"24\"\r\n        height=\"25\"\r\n        viewBox=\"0 0 24 25\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          opacity=\"0.2\"\r\n          d=\"M16.19 2.50098H7.81C4.60123 2.50098 2 5.1022 2 8.31098V16.691C2 19.8998 4.60123 22.501 7.81 22.501H16.19C19.3988 22.501 22 19.8998 22 16.691V8.31098C22 5.1022 19.3988 2.50098 16.19 2.50098Z\"\r\n          fill=\"#7E8299\"\r\n        />\r\n        <path\r\n          d=\"M13.41 12.5007L16.24 9.67068C16.3447 9.58103 16.4297 9.47071 16.4898 9.34665C16.5498 9.22258 16.5835 9.08745 16.5888 8.94973C16.5941 8.81201 16.5709 8.67468 16.5207 8.54635C16.4704 8.41803 16.3941 8.30148 16.2967 8.20403C16.1992 8.10657 16.0827 8.03031 15.9544 7.98004C15.826 7.92976 15.6887 7.90656 15.551 7.91188C15.4133 7.9172 15.2781 7.95093 15.1541 8.01095C15.03 8.07097 14.9197 8.156 14.83 8.26068L12 11.0907L9.17003 8.26068C8.97873 8.09685 8.73265 8.01124 8.48098 8.02096C8.2293 8.03069 7.99056 8.13502 7.81247 8.31311C7.63437 8.49121 7.53004 8.72995 7.52032 8.98162C7.5106 9.2333 7.5962 9.47938 7.76003 9.67068L10.59 12.5007L7.76003 15.3307C7.57378 15.518 7.46924 15.7715 7.46924 16.0357C7.46924 16.2999 7.57378 16.5533 7.76003 16.7407C7.94739 16.9269 8.20085 17.0315 8.46503 17.0315C8.72922 17.0315 8.98267 16.9269 9.17003 16.7407L12 13.9107L14.83 16.7407C15.0174 16.9269 15.2708 17.0315 15.535 17.0315C15.7992 17.0315 16.0527 16.9269 16.24 16.7407C16.4263 16.5533 16.5308 16.2999 16.5308 16.0357C16.5308 15.7715 16.4263 15.518 16.24 15.3307L13.41 12.5007Z\"\r\n          fill=\"#7E8299\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  </div>\r\n  <div class=\"plan-type\">\r\n    <div class=\"plan-type-content\">\r\n      <div class=\"plan-type-plan\">\r\n        <div class=\"plan-type-title\">\r\n          <h4>Advanced</h4>\r\n          <p>Best for personal use</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"plan-type-price\">\r\n        <h2>$16</h2>\r\n        <span>/month</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"plan-type-summary\">\r\n      <h2>Plan summary</h2>\r\n      <div class=\"plan-summary-details\">\r\n        <div class=\"plan-summary-details-text\">\r\n          <h3>CMS system</h3>\r\n          <p>Standard plan 15 seats</p>\r\n        </div>\r\n        <div class=\"plan-summary-details-cost\">\r\n          <h3>$250</h3>\r\n          <p>($16 x 12 months)</p>\r\n        </div>\r\n      </div>\r\n      <p>You saved <span>$56</span> with the Yearly plan</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-152eb00034e4a317485d8c91f87f8140de4a9d8ea5595e0613d8727fe4b2055d759747d087929e7fdaffc370632f07d1c543cc7583f8edc2b7d46a1cbd7b5cd6",
            "file": "src/stories/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bodyRow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "ManageUser[]",
                    "decorators": []
                },
                {
                    "name": "headRow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCount",
                    "args": [
                        {
                            "name": "e",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChecked",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PaginatorComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { AsyncPipe, CommonModule } from '@angular/common';\r\n\r\n\r\nimport { PaginatorComponent } from '../paginator/paginator.component';\r\nimport { ManageUser } from '../../app/interfaces/manage-user';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  imports: [PaginatorComponent, AsyncPipe, CommonModule],\r\n  templateUrl: './table.component.html',\r\n  styleUrl: './table.component.css'\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n  @Input('headRow') headRow: string[] = [];\r\n  @Input('bodyRow') bodyRow: ManageUser[] = [];\r\n  @Input('rows') rows!: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.bodyRow.length) {\r\n      this.bodyRow.push({\r\n        id: '1',\r\n        fullName: \"string\",\r\n        profileImagePath: '',\r\n        userStatus: true,\r\n        email: 'string',\r\n        createdAt: '11:43 am - 18 Jun , 2024',\r\n        roleName: 'string',\r\n      }, {\r\n        id: '1',\r\n        fullName: \"string\",\r\n        profileImagePath: '',\r\n        userStatus: true,\r\n        email: 'string',\r\n        createdAt: '11:43 am - 18 Jun , 2024',\r\n        roleName: 'string',\r\n      }, {\r\n        id: '1',\r\n        fullName: \"string\",\r\n        profileImagePath: '',\r\n        userStatus: false,\r\n        email: 'string',\r\n        createdAt: '11:43 am - 18 Jun , 2024',\r\n        roleName: 'string',\r\n      }, {\r\n        id: '1',\r\n        fullName: \"string\",\r\n        profileImagePath: '',\r\n        userStatus: false,\r\n        email: 'string',\r\n        createdAt: '11:43 am - 18 Jun , 2024',\r\n        roleName: 'string',\r\n      }, {\r\n        id: '1',\r\n        fullName: \"string\",\r\n        profileImagePath: '',\r\n        userStatus: false,\r\n        email: 'string',\r\n        createdAt: '11:43 am - 18 Jun , 2024',\r\n        roleName: 'string',\r\n      });\r\n    }\r\n\r\n    this.headRow.push('id', 'name', 'Status', 'Role', 'Email', 'Created At', '');\r\n    console.log(this.bodyRow.length);\r\n    console.log(\"rows: \" + this.rows);\r\n    this.rows = 5\r\n  }\r\n\r\n  getCount(e: number) {\r\n    this.rows = e;\r\n    console.log(\"rows: \" + this.rows);\r\n\r\n  }\r\n\r\n  // activated selected class\r\n  onChecked(e: Event) {\r\n    (((e.target as HTMLElement).parentElement as HTMLElement).parentElement as HTMLElement).classList.toggle('selected');\r\n  }\r\n}\r\n",
            "styleUrl": "./table.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <table CELLSPACING=\"0\">\r\n    <thead>\r\n      <tr>\r\n        <th></th>\r\n        <!-- <th><input type=\"checkbox\" /></th> -->\r\n\r\n        @for (data of headRow; track $index) {\r\n        <th>{{ data }}</th>\r\n        }\r\n        <!-- <th></th> -->\r\n        <th>\r\n          <span><img src=\"table-setting.png\" alt=\"\" /></span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      @for (data of bodyRow; track data; let i=$index) {\r\n      @if(i < rows){ <tr class=\"row\">\r\n        <!-- <td><input type=\"checkbox\" (click)=\"onChecked($event)\" /></td> -->\r\n        <td></td>\r\n        <td>{{ i + 1 }}</td>\r\n        <td>\r\n          <img [src]=\"\r\n                data.profileImagePath\r\n                ? data.profileImagePath\r\n                : 'table-communication.png'\r\n                \" alt=\"\" />{{ data.fullName }}\r\n        </td>\r\n        <td>\r\n          <span class=\"status\"><span class=\"{{ data.userStatus ? 'active' : 'deactive' }}\"></span>{{ data.userStatus ?\r\n            \"Active\" : \"Deactive\" }}</span>\r\n        </td>\r\n        <td>{{ data.roleName }}</td>\r\n        <td>{{ data.email }}</td>\r\n        <td>{{ data.createdAt }}</td>\r\n        <td>\r\n          <span><img src=\"edit-user-management.svg\" alt=\"edit\" /></span>\r\n          <div class=\"dots\">\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n          </div>\r\n        </td>\r\n        </tr>\r\n        }\r\n\r\n        }\r\n    </tbody>\r\n    <tfoot></tfoot>\r\n  </table>\r\n</div>\r\n<app-paginator (rowsCount)=\"getCount($event)\" [all]=\"bodyRow.length ? bodyRow.length : 0\" />"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-2d7f0d03df5237b6818b5514eb3dbeca2f53da6eca1ed17250f8df08e760fc6bd9e32effd121f73a72d7e1d5d9c48a82be3f84e4db51a68a652f979df1dfdade-1",
            "file": "src/app/shared/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bodyRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ManageUser[]",
                    "decorators": []
                },
                {
                    "name": "headRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rows",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "getCount",
                    "args": [
                        {
                            "name": "e",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChecked",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PaginatorComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { PaginatorComponent } from '../paginator/paginator.component';\r\nimport { ManageUser } from '../../interfaces/manage-user';\r\nimport { AsyncPipe, DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  imports: [PaginatorComponent, AsyncPipe, DatePipe],\r\n  templateUrl: './table.component.html',\r\n  styleUrl: './table.component.css'\r\n})\r\nexport class TableComponent {\r\n  @Input('headRow') headRow!: string[];\r\n  @Input('bodyRow') bodyRow!: ManageUser[];\r\n\r\n  rows: number = 2;\r\n  constructor() {\r\n    this.bodyRow = [];\r\n    this.headRow = [];\r\n  }\r\n\r\n  getCount(e: number) {\r\n    this.rows = e;\r\n    console.log(this.rows, \"rows number\");\r\n  }\r\n\r\n  // activated selected class\r\n  onChecked(e: Event) {\r\n    (((e.target as HTMLElement).parentElement as HTMLElement).parentElement as HTMLElement).classList.toggle('selected');\r\n  }\r\n}\r\n",
            "styleUrl": "./table.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TableComponent-1",
            "templateData": "<div class=\"container\">\r\n  <table CELLSPACING=\"0\">\r\n    <thead>\r\n      <tr>\r\n        <th><input type=\"checkbox\" /></th>\r\n        @for (data of headRow; track $index) {\r\n        <th>{{ data }}</th>\r\n        }\r\n        <th>\r\n          <span><img src=\"assets/images/table-setting.png\" alt=\"\" /></span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      @for (data of bodyRow; track data; let i=$index) {\r\n      <tr class=\"row\">\r\n        <td><input type=\"checkbox\" (click)=\"onChecked($event)\" /></td>\r\n        <td>{{ i + 1 }}</td>\r\n        <td>\r\n          <img [src]=\"\r\n              data.profileImagePath\r\n                ? data.profileImagePath\r\n                : 'assets/images/table-communication.png'\r\n            \" alt=\"\" />{{ data.fullName }}\r\n        </td>\r\n        <td>\r\n          <span class=\"status\"><span class=\"{{ data.userStatus ? 'active' : 'deactive' }}\"></span>{{ data.userStatus ?\r\n            \"Active\" : \"Deactive\" }}</span>\r\n        </td>\r\n        <td>{{ data.roleName }}</td>\r\n        <td>{{ data.email }}</td>\r\n        <td>{{ data.createdAt | date }}</td>\r\n        <td>\r\n          <span><img src=\"assets/images/edit-user-management.svg\" alt=\"edit\" /></span>\r\n          <div class=\"dots\">\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      }\r\n    </tbody>\r\n    <tfoot></tfoot>\r\n  </table>\r\n</div>\r\n<app-paginator (rowsCount)=\"getCount($event)\" [all]=\"bodyRow.length ? bodyRow.length : 0\" />"
        },
        {
            "name": "ToastFailedComponent",
            "id": "component-ToastFailedComponent-15c6c2ba3b36195c9af397a0dbbe96cc3a5c0d6f554f205999cfa044fed438698f1fd8741622fc2f008e224d146c43a4b9b2c99bf864c8255accbafdc2d93c86",
            "file": "src/stories/toasts/failed/toast-failed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-failed",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast-failed.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toast-failed',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './toast-failed.component.html',\r\n  styleUrl: './toast-failed.component.css'\r\n})\r\nexport class ToastFailedComponent implements OnInit {\r\n\r\n  toast!: Boolean;\r\n  @Input('label') label!: string;\r\n  constructor() { this.toast = false }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openToast() {\r\n    this.toast = !this.toast;\r\n  }\r\n\r\n  closeToast() {\r\n    this.toast = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./toast-failed.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"button-container\" (click)=\"openToast()\">\r\n  <div class=\"button\">\r\n    {{label}}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container\">\r\n\r\n    <div class=\"close\" (click)=\"closeToast()\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity=\"0.2\"\r\n          d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n          fill=\"#7E8299\" />\r\n        <path\r\n          d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n          fill=\"#7E8299\" />\r\n      </svg>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#FFF5F8\" />\r\n        <path opacity=\"0.2\"\r\n          d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n          fill=\"#F1416C\" />\r\n        <path\r\n          d=\"M17.0599 16.0001L19.3599 13.7001C19.6499 13.4101 19.6499 12.9301 19.3599 12.6401C19.0699 12.3501 18.5899 12.3501 18.2999 12.6401L15.9999 14.9401L13.6999 12.6401C13.4099 12.3501 12.9299 12.3501 12.6399 12.6401C12.3499 12.9301 12.3499 13.4101 12.6399 13.7001L14.9399 16.0001L12.6399 18.3001C12.3499 18.5901 12.3499 19.0701 12.6399 19.3601C12.7899 19.5101 12.9799 19.5801 13.1699 19.5801C13.3599 19.5801 13.5499 19.5101 13.6999 19.3601L15.9999 17.0601L18.2999 19.3601C18.4499 19.5101 18.6399 19.5801 18.8299 19.5801C19.0199 19.5801 19.2099 19.5101 19.3599 19.3601C19.6499 19.0701 19.6499 18.5901 19.3599 18.3001L17.0599 16.0001Z\"\r\n          fill=\"#F1416C\" />\r\n      </svg>\r\n    </div>\r\n    <div>\r\n      <h5>Failed message</h5>\r\n      <p>Lorem ipsum is placeholder text commonly</p>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ToastSuccessComponent",
            "id": "component-ToastSuccessComponent-fe2879407aa5c27702162c7df698b793c0f9382bce78c365c3ea85df0ebf985c25cb5d682c3c110348b96a709e4c7826ce7681b40b378a1c73d3f76d2694be4f",
            "file": "src/stories/toasts/success/toast-success.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-success",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast-success.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toast-success',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './toast-success.component.html',\r\n  styleUrl: './toast-success.component.css'\r\n})\r\nexport class ToastSuccessComponent implements OnInit {\r\n\r\n  toast!: Boolean;\r\n  @Input('label') label!: string;\r\n  constructor() { this.toast = false }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openToast() {\r\n    this.toast = !this.toast;\r\n  }\r\n  \r\n  closeToast() {\r\n    this.toast = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./toast-success.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"button-container\" (click)=\"openToast()\">\r\n  <div class=\"button\">\r\n    {{label}}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container\">\r\n\r\n    <div class=\"close\" (click)=\"closeToast()\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity=\"0.2\"\r\n          d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n          fill=\"#7E8299\" />\r\n        <path\r\n          d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n          fill=\"#7E8299\" />\r\n      </svg>\r\n\r\n    </div>\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#48B29A\" fill-opacity=\"0.06\" />\r\n        <path opacity=\"0.2\"\r\n          d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n          fill=\"#48B29A\" />\r\n        <path\r\n          d=\"M14.5799 19.5801C14.3799 19.5801 14.1899 19.5001 14.0499 19.3601L11.2199 16.5301C10.9299 16.2401 10.9299 15.7601 11.2199 15.4701C11.5099 15.1801 11.9899 15.1801 12.2799 15.4701L14.5799 17.7701L19.7199 12.6301C20.0099 12.3401 20.4899 12.3401 20.7799 12.6301C21.0699 12.9201 21.0699 13.4001 20.7799 13.6901L15.1099 19.3601C14.9699 19.5001 14.7799 19.5801 14.5799 19.5801Z\"\r\n          fill=\"#48B29A\" />\r\n      </svg>\r\n    </div>\r\n    <div>\r\n      <h5>Success message</h5>\r\n      <p>Lorem ipsum is placeholder text commonly</p>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ToastSystemComponent",
            "id": "component-ToastSystemComponent-b0f22d38959220dd84acf479985ea4f491bd297a991d54727ece446b0b51833a04aab4a7db6dfc09a285920a8e5eefb44327f3f3c89e5cd534618ce50292c098",
            "file": "src/stories/toasts/system/toast-system.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-system",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast-system.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toast-system',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './toast-system.component.html',\r\n  styleUrl: './toast-system.component.css'\r\n})\r\nexport class ToastSystemComponent implements OnInit {\r\n\r\n  toast!: Boolean;\r\n  @Input('label') label!: string;\r\n  constructor() { this.toast = false }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openToast() {\r\n    this.toast = !this.toast;\r\n  }\r\n\r\n  closeToast() {\r\n    this.toast = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./toast-system.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"button-container\" (click)=\"openToast()\">\r\n  <div class=\"button\">\r\n    {{label}}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container\">\r\n\r\n    <div class=\"close\" (click)=\"closeToast()\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity=\"0.2\"\r\n          d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n          fill=\"#7E8299\" />\r\n        <path\r\n          d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n          fill=\"#7E8299\" />\r\n      </svg>\r\n\r\n    </div>\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#ECF3FF\" />\r\n        <path opacity=\"0.2\"\r\n          d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n          fill=\"#0660FC\" />\r\n        <path\r\n          d=\"M16 17.75C16.41 17.75 16.75 17.41 16.75 17V12C16.75 11.59 16.41 11.25 16 11.25C15.59 11.25 15.25 11.59 15.25 12V17C15.25 17.41 15.59 17.75 16 17.75Z\"\r\n          fill=\"#0660FC\" />\r\n        <path\r\n          d=\"M16.92 19.6199C16.87 19.4999 16.8 19.3899 16.71 19.2899C16.61 19.1999 16.5 19.1299 16.38 19.0799C16.14 18.9799 15.86 18.9799 15.62 19.0799C15.5 19.1299 15.39 19.1999 15.29 19.2899C15.2 19.3899 15.13 19.4999 15.08 19.6199C15.03 19.7399 15 19.8699 15 19.9999C15 20.1299 15.03 20.2599 15.08 20.3799C15.13 20.5099 15.2 20.6099 15.29 20.7099C15.39 20.7999 15.5 20.8699 15.62 20.9199C15.74 20.9699 15.87 20.9999 16 20.9999C16.13 20.9999 16.26 20.9699 16.38 20.9199C16.5 20.8699 16.61 20.7999 16.71 20.7099C16.8 20.6099 16.87 20.5099 16.92 20.3799C16.97 20.2599 17 20.1299 17 19.9999C17 19.8699 16.97 19.7399 16.92 19.6199Z\"\r\n          fill=\"#0660FC\" />\r\n      </svg>\r\n    </div>\r\n    <div>\r\n      <h5>System message</h5>\r\n      <p>Lorem ipsum is placeholder text commonly</p>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ToastSystemComponent",
            "id": "component-ToastSystemComponent-ee5a3e5e8f5acebfb5d871462c8ec1ad45a64aa4751e59648d0c0f89bb4679eeaf3ab609dcb7712bb1b6be223aa9bbf05895e257940eab1851013e427e569b4f-1",
            "file": "src/app/shared/toasts/system/toast-system.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-system",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast-system.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "'System Message is sent successfully'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'System'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toastType",
                    "defaultValue": "ToastType.System",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ToastType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeT",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "toast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ToastType } from '../../../interfaces/toast';\r\n\r\n@Component({\r\n  selector: 'app-toast-system',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './toast-system.component.html',\r\n  styleUrl: './toast-system.component.css'\r\n})\r\nexport class ToastSystemComponent implements OnInit {\r\n\r\n  toast!: Boolean;\r\n  @Input('toastType') toastType: ToastType = ToastType.System;\r\n  @Input('label') label: string = 'System';\r\n  @Input('info') info: string = 'System Message is sent successfully';\r\n  @Input('duration') duration: number = 3000;\r\n\r\n  @Output() closeT = new EventEmitter<void>();\r\n\r\n  constructor() { this.toast = false }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openToast() {\r\n    this.toast = !this.toast;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./toast-system.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ToastSystemComponent-1",
            "templateData": "@if(toastType == 'system'){\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container system\">\r\n    <div class=\"toast-content\">\r\n      <div class=\"close\" (click)=\"this.closeT.emit()\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path opacity=\"0.2\"\r\n            d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n            fill=\"#7E8299\" />\r\n          <path\r\n            d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n            fill=\"#7E8299\" />\r\n        </svg>\r\n\r\n      </div>\r\n      <div class=\"toast-icon-svg\">\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#ECF3FF\" />\r\n          <path opacity=\"0.2\"\r\n            d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n            fill=\"#0660FC\" />\r\n          <path\r\n            d=\"M16 17.75C16.41 17.75 16.75 17.41 16.75 17V12C16.75 11.59 16.41 11.25 16 11.25C15.59 11.25 15.25 11.59 15.25 12V17C15.25 17.41 15.59 17.75 16 17.75Z\"\r\n            fill=\"#0660FC\" />\r\n          <path\r\n            d=\"M16.92 19.6199C16.87 19.4999 16.8 19.3899 16.71 19.2899C16.61 19.1999 16.5 19.1299 16.38 19.0799C16.14 18.9799 15.86 18.9799 15.62 19.0799C15.5 19.1299 15.39 19.1999 15.29 19.2899C15.2 19.3899 15.13 19.4999 15.08 19.6199C15.03 19.7399 15 19.8699 15 19.9999C15 20.1299 15.03 20.2599 15.08 20.3799C15.13 20.5099 15.2 20.6099 15.29 20.7099C15.39 20.7999 15.5 20.8699 15.62 20.9199C15.74 20.9699 15.87 20.9999 16 20.9999C16.13 20.9999 16.26 20.9699 16.38 20.9199C16.5 20.8699 16.61 20.7999 16.71 20.7099C16.8 20.6099 16.87 20.5099 16.92 20.3799C16.97 20.2599 17 20.1299 17 19.9999C17 19.8699 16.97 19.7399 16.92 19.6199Z\"\r\n            fill=\"#0660FC\" />\r\n        </svg>\r\n      </div>\r\n      <div>\r\n        <h5>{{label}}</h5>\r\n        <p>{{info}}</p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n}\r\n@else if(toastType == 'failed'){\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container failed\">\r\n    <div class=\"toast-content\">\r\n      <div class=\"close\" (click)=\"this.closeT.emit()\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path opacity=\"0.2\"\r\n            d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n            fill=\"#7E8299\" />\r\n          <path\r\n            d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n            fill=\"#7E8299\" />\r\n        </svg>\r\n\r\n      </div>\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#FFF5F8\" />\r\n          <path opacity=\"0.2\"\r\n            d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n            fill=\"#F1416C\" />\r\n          <path\r\n            d=\"M17.0599 16.0001L19.3599 13.7001C19.6499 13.4101 19.6499 12.9301 19.3599 12.6401C19.0699 12.3501 18.5899 12.3501 18.2999 12.6401L15.9999 14.9401L13.6999 12.6401C13.4099 12.3501 12.9299 12.3501 12.6399 12.6401C12.3499 12.9301 12.3499 13.4101 12.6399 13.7001L14.9399 16.0001L12.6399 18.3001C12.3499 18.5901 12.3499 19.0701 12.6399 19.3601C12.7899 19.5101 12.9799 19.5801 13.1699 19.5801C13.3599 19.5801 13.5499 19.5101 13.6999 19.3601L15.9999 17.0601L18.2999 19.3601C18.4499 19.5101 18.6399 19.5801 18.8299 19.5801C19.0199 19.5801 19.2099 19.5101 19.3599 19.3601C19.6499 19.0701 19.6499 18.5901 19.3599 18.3001L17.0599 16.0001Z\"\r\n            fill=\"#F1416C\" />\r\n        </svg>\r\n      </div>\r\n      <div>\r\n        <h5>{{label}}</h5>\r\n        <p>{{info}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n}\r\n@else if(toastType == 'success'){\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container success\">\r\n    <div class=\"toast-content\">\r\n      <div class=\"close\" (click)=\"this.closeT.emit()\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path opacity=\"0.2\"\r\n            d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n            fill=\"#7E8299\" />\r\n          <path\r\n            d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n            fill=\"#7E8299\" />\r\n        </svg>\r\n\r\n      </div>\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#48B29A\" fill-opacity=\"0.06\" />\r\n          <path opacity=\"0.2\"\r\n            d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n            fill=\"#48B29A\" />\r\n          <path\r\n            d=\"M14.5799 19.5801C14.3799 19.5801 14.1899 19.5001 14.0499 19.3601L11.2199 16.5301C10.9299 16.2401 10.9299 15.7601 11.2199 15.4701C11.5099 15.1801 11.9899 15.1801 12.2799 15.4701L14.5799 17.7701L19.7199 12.6301C20.0099 12.3401 20.4899 12.3401 20.7799 12.6301C21.0699 12.9201 21.0699 13.4001 20.7799 13.6901L15.1099 19.3601C14.9699 19.5001 14.7799 19.5801 14.5799 19.5801Z\"\r\n            fill=\"#48B29A\" />\r\n        </svg>\r\n      </div>\r\n      <div>\r\n        <h5>{{label}}</h5>\r\n        <p>{{info}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n}\r\n@else {\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container warning\">\r\n    <div class=\"toast-content\">\r\n      <div class=\"close\" (click)=\"this.closeT.emit()\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path opacity=\"0.2\"\r\n            d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n            fill=\"#7E8299\" />\r\n          <path\r\n            d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n            fill=\"#7E8299\" />\r\n        </svg>\r\n\r\n      </div>\r\n\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#FFFAF2\" />\r\n          <path opacity=\"0.2\"\r\n            d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n            fill=\"#FFC727\" />\r\n          <path\r\n            d=\"M16 17.75C16.41 17.75 16.75 17.41 16.75 17V12C16.75 11.59 16.41 11.25 16 11.25C15.59 11.25 15.25 11.59 15.25 12V17C15.25 17.41 15.59 17.75 16 17.75Z\"\r\n            fill=\"#FFC727\" />\r\n          <path\r\n            d=\"M16.92 19.6199C16.87 19.4999 16.8 19.3899 16.71 19.2899C16.61 19.1999 16.5 19.1299 16.38 19.0799C16.14 18.9799 15.86 18.9799 15.62 19.0799C15.5 19.1299 15.39 19.1999 15.29 19.2899C15.2 19.3899 15.13 19.4999 15.08 19.6199C15.03 19.7399 15 19.8699 15 19.9999C15 20.1299 15.03 20.2599 15.08 20.3799C15.13 20.5099 15.2 20.6099 15.29 20.7099C15.39 20.7999 15.5 20.8699 15.62 20.9199C15.74 20.9699 15.87 20.9999 16 20.9999C16.13 20.9999 16.26 20.9699 16.38 20.9199C16.5 20.8699 16.61 20.7999 16.71 20.7099C16.8 20.6099 16.87 20.5099 16.92 20.3799C16.97 20.2599 17 20.1299 17 19.9999C17 19.8699 16.97 19.7399 16.92 19.6199Z\"\r\n            fill=\"#FFC727\" />\r\n        </svg>\r\n      </div>\r\n      <div>\r\n        <h5>{{label}}</h5>\r\n        <p>{{info}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n}"
        },
        {
            "name": "ToastWarningComponent",
            "id": "component-ToastWarningComponent-dc46aa7138cf4ced248475aeecb789af0afbb335da0261d08919615bb633c311ab2cb4162845c3f34adbb7b3bcb6e1c7e99c6c066396be594f3057dc454f89c5",
            "file": "src/stories/toasts/warning/toast-warning.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-warning",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast-warning.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toast-warning',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './toast-warning.component.html',\r\n  styleUrl: './toast-warning.component.css'\r\n})\r\nexport class ToastWarningComponent implements OnInit {\r\n\r\n  toast!: Boolean;\r\n  @Input('label') label!: string;\r\n  constructor() { this.toast = false }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openToast() {\r\n    this.toast = !this.toast;\r\n  }\r\n\r\n  closeToast() {\r\n    this.toast = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./toast-warning.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"button-container\" (click)=\"openToast()\">\r\n  <div class=\"button\">\r\n    {{label}}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"container\" [ngClass]=\"{'show': toast, 'hide':!toast}\">\r\n  <div class=\"toast-container\">\r\n\r\n    <div class=\"close\" (click)=\"closeToast()\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity=\"0.2\"\r\n          d=\"M16.19 2H7.81C4.60123 2 2 4.60123 2 7.81V16.19C2 19.3988 4.60123 22 7.81 22H16.19C19.3988 22 22 19.3988 22 16.19V7.81C22 4.60123 19.3988 2 16.19 2Z\"\r\n          fill=\"#7E8299\" />\r\n        <path\r\n          d=\"M13.4095 11.9999L16.2395 9.16994C16.3442 9.0803 16.4292 8.96998 16.4893 8.84591C16.5493 8.72185 16.583 8.58672 16.5883 8.449C16.5937 8.31128 16.5705 8.17395 16.5202 8.04562C16.4699 7.9173 16.3936 7.80075 16.2962 7.70329C16.1987 7.60584 16.0822 7.52958 15.9539 7.47931C15.8255 7.42903 15.6882 7.40583 15.5505 7.41115C15.4128 7.41647 15.2776 7.4502 15.1536 7.51022C15.0295 7.57024 14.9192 7.65526 14.8295 7.75994L11.9995 10.5899L9.16954 7.75994C8.97824 7.59612 8.73217 7.51051 8.48049 7.52023C8.22881 7.52995 7.99007 7.63429 7.81198 7.81238C7.63388 7.99048 7.52955 8.22921 7.51983 8.48089C7.51011 8.73257 7.59572 8.97864 7.75954 9.16994L10.5895 11.9999L7.75954 14.8299C7.57329 15.0173 7.46875 15.2708 7.46875 15.5349C7.46875 15.7991 7.57329 16.0526 7.75954 16.2399C7.94691 16.4262 8.20036 16.5307 8.46454 16.5307C8.72873 16.5307 8.98218 16.4262 9.16954 16.2399L11.9995 13.4099L14.8295 16.2399C15.0169 16.4262 15.2704 16.5307 15.5345 16.5307C15.7987 16.5307 16.0522 16.4262 16.2395 16.2399C16.4258 16.0526 16.5303 15.7991 16.5303 15.5349C16.5303 15.2708 16.4258 15.0173 16.2395 14.8299L13.4095 11.9999Z\"\r\n          fill=\"#7E8299\" />\r\n      </svg>\r\n\r\n    </div>\r\n\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect width=\"32\" height=\"32\" rx=\"12\" fill=\"#FFFAF2\" />\r\n        <path opacity=\"0.2\"\r\n          d=\"M16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z\"\r\n          fill=\"#FFC727\" />\r\n        <path\r\n          d=\"M16 17.75C16.41 17.75 16.75 17.41 16.75 17V12C16.75 11.59 16.41 11.25 16 11.25C15.59 11.25 15.25 11.59 15.25 12V17C15.25 17.41 15.59 17.75 16 17.75Z\"\r\n          fill=\"#FFC727\" />\r\n        <path\r\n          d=\"M16.92 19.6199C16.87 19.4999 16.8 19.3899 16.71 19.2899C16.61 19.1999 16.5 19.1299 16.38 19.0799C16.14 18.9799 15.86 18.9799 15.62 19.0799C15.5 19.1299 15.39 19.1999 15.29 19.2899C15.2 19.3899 15.13 19.4999 15.08 19.6199C15.03 19.7399 15 19.8699 15 19.9999C15 20.1299 15.03 20.2599 15.08 20.3799C15.13 20.5099 15.2 20.6099 15.29 20.7099C15.39 20.7999 15.5 20.8699 15.62 20.9199C15.74 20.9699 15.87 20.9999 16 20.9999C16.13 20.9999 16.26 20.9699 16.38 20.9199C16.5 20.8699 16.61 20.7999 16.71 20.7099C16.8 20.6099 16.87 20.5099 16.92 20.3799C16.97 20.2599 17 20.1299 17 19.9999C17 19.8699 16.97 19.7399 16.92 19.6199Z\"\r\n          fill=\"#FFC727\" />\r\n      </svg>\r\n    </div>\r\n    <div>\r\n      <h5>Warning message</h5>\r\n      <p>Lorem ipsum is placeholder text commonly</p>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "UserManagementComponent",
            "id": "component-UserManagementComponent-6dd9fde667b71e3881bd74d160d354cd6971e40edee8400dfbdf4a5da6d4611eb3365e43c5d4fcb7eb85c927db2e5dd0837d373b162f1beae36ff5cb4277c5a9",
            "file": "src/app/components/core/management/user-role-combine/user-management.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-management",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-management.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SidebarComponent",
                    "type": "component"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router, RouterLink, RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SidebarComponent } from '../../../../shared/sidebar/sidebar.component';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  standalone: true,\r\n  imports: [SidebarComponent, RouterOutlet, RouterLink, RouterModule],\r\n  templateUrl: './user-management.component.html',\r\n  styleUrl: './user-management.component.css'\r\n})\r\nexport class UserManagementComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
            "styleUrl": "./user-management.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "templateData": "<!DOCTYPE html>\r\n<router-outlet></router-outlet>"
        },
        {
            "name": "UserProfileComponent",
            "id": "component-UserProfileComponent-2d153c85679c8087d503ca876f2d298a7d277d6300cea706642b751152053df51b5cfc6c53a6072abe5f60e90d6cbd3d09c79477f89407285296a5324d5ce1b1",
            "file": "src/app/components/core/user-profile/user-profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-profile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "'edit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "deleteAccountModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isavailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "searchText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "display",
                    "args": [
                        {
                            "name": "tab",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CardModalComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterLink, RouterModule, RouterOutlet } from '@angular/router';\r\nimport { CardModalComponent } from '../../../shared/pop-up-card/card-modal/card-modal.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToggleDeleteModalService } from '../../../services/toggleModal/toggle-delete-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  standalone: true,\r\n  imports: [RouterOutlet, RouterModule, RouterLink, FormsModule, CardModalComponent, CommonModule],\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrl: './user-profile.component.css'\r\n})\r\nexport class UserProfileComponent {\r\n\r\n  searchText: string = '';\r\n  activeTab: string = 'edit';\r\n  isavailable: boolean = true;\r\n\r\n  deleteAccountModal!: Boolean;\r\n\r\n  constructor(private _ToggleDeleteModalService: ToggleDeleteModalService) {\r\n    this.deleteAccountModal = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._ToggleDeleteModalService.getToggleValue().subscribe({\r\n      next: (toggler) => {\r\n        this.deleteAccountModal = toggler;\r\n      }\r\n    })\r\n  }\r\n\r\n  display(tab: string) {\r\n    this.activeTab = tab;\r\n  }\r\n  close() {\r\n    this.isavailable = false;\r\n  }\r\n\r\n  openModal() {\r\n    this._ToggleDeleteModalService.toggle()\r\n  }\r\n\r\n  deleteAccount() {\r\n    console.log(\"Account Deleted\");\r\n  }\r\n  closeModal() {\r\n    this._ToggleDeleteModalService.toggle();\r\n  }\r\n}\r\n",
            "styleUrl": "./user-profile.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_ToggleDeleteModalService",
                        "type": "ToggleDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div\r\n  class=\"\"\r\n  [ngClass]=\"{ lowOpacity: deleteAccountModal, container: !deleteAccountModal }\"\r\n>\r\n  @if( isavailable){\r\n\r\n  <div class=\"user-profile-container\">\r\n    <div class=\"user-header\">\r\n      <div class=\"header-icons\">\r\n        <div class=\"refresh\">\r\n          <img src=\"assets/images/refresh-2.svg\" alt=\"\" />\r\n\r\n          <p>Last update : Today,15:05pm</p>\r\n        </div>\r\n\r\n        <img src=\"assets/images/cross-square.svg\" alt=\"\" (click)=\"close()\" />\r\n      </div>\r\n\r\n      <div class=\"user-info\">\r\n        <img\r\n          src=\"assets/images/Screenshot 2024-02-14 092120.png\"\r\n          alt=\"user-img\"\r\n        />\r\n        <div class=\"edit\"><img src=\"assets/images/edit.svg\" alt=\"\" /></div>\r\n        <h3>Haitham Mohamed</h3>\r\n        <p>Supper Admin</p>\r\n      </div>\r\n\r\n      <div class=\"user-actions\">\r\n        <div\r\n          class=\"a-box\"\r\n          (click)=\"display('edit')\"\r\n          [class.active]=\"activeTab == 'edit'\"\r\n        >\r\n          <a> Information</a>\r\n        </div>\r\n\r\n        <div class=\"hr\"></div>\r\n        <div class=\"a-box\">\r\n          <a\r\n            (click)=\"display('change-password')\"\r\n            [class.active]=\"activeTab == 'change-password'\"\r\n            >Password</a\r\n          >\r\n        </div>\r\n\r\n        <div class=\"hr\"></div>\r\n        <div\r\n          class=\"a-box\"\r\n          (click)=\"display('activity')\"\r\n          [class.active]=\"activeTab == 'activity'\"\r\n        >\r\n          <a>Activity log</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    @if(activeTab=='edit'){\r\n    <div class=\"user-form\">\r\n      <div class=\"user-form-header\">\r\n        <div class=\"inner-text\">\r\n          <h3>Edit account information</h3>\r\n          <p>Lorem ipsum is placeholder text commonly</p>\r\n        </div>\r\n        <button>Edit</button>\r\n      </div>\r\n      <div class=\"hr2\"></div>\r\n\r\n      <form>\r\n        <div class=\"inputs-container\">\r\n          <div class=\"input\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" value=\"Haitham Mohamed\" disabled />\r\n          </div>\r\n          <div class=\"input\">\r\n            <label for=\"role\">Role& permissions</label>\r\n            <input type=\"text\" id=\"role\" value=\"Super Admin\" disabled />\r\n          </div>\r\n        </div>\r\n        <div class=\"inputs-container\">\r\n          <div class=\"input\">\r\n            <label for=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              value=\"HaithamMohamed@saptiumsoftware.com\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div class=\"select\">\r\n            <label for=\"number\">Phone</label>\r\n            <div class=\"phone\">\r\n              <select name=\"\" id=\"\">\r\n                <!-- <option value=\"\"><img src=\"Group.svg\" alt=\"\"></option> -->\r\n              </select>\r\n              <input type=\"text\" value=\"+1258525645-555\" disabled />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"hr3\"></div>\r\n      <div class=\"user-form-footer\">\r\n        <div class=\"inner-text\">\r\n          <h3>Delete Account</h3>\r\n          <p>Lorem ipsum is placeholder text commonly</p>\r\n        </div>\r\n        <button (click)=\"openModal()\">Delete Account</button>\r\n      </div>\r\n    </div>\r\n    } @if(activeTab=='change-password'){\r\n\r\n    <div class=\"user-form\">\r\n      <div class=\"user-form-header\">\r\n        <div class=\"inner-text\">\r\n          <h3>Change Password</h3>\r\n          <p>Lorem ipsum is placeholder text commonly</p>\r\n        </div>\r\n        <button>Edit</button>\r\n      </div>\r\n      <div class=\"hr2\"></div>\r\n\r\n      <div class=\"form-container\">\r\n        <form action=\"\">\r\n          <div class=\"input\">\r\n            <label for=\"password\">Current Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter the Current Password\"\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" value=\"12345678910\" disabled />\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label for=\"confirm-password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm-password\"\r\n              value=\"12345678910\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </form>\r\n        <img src=\"assets/images/Group 1000016543.svg\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n    } @if(activeTab=='activity'){\r\n    <div class=\"user-form\">\r\n      <div class=\"user-form-header\">\r\n        <div class=\"inner-text\">\r\n          <h3>Activity Log</h3>\r\n          <p>Lorem ipsum is placeholder text commonly</p>\r\n        </div>\r\n        <div class=\"search\">\r\n          <img src=\"assets/images/magnifier.svg\" alt=\"search\" />\r\n          <input type=\"text\" placeholder=\"search...\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"hr2\"></div>\r\n      <div class=\"activity\">\r\n        <ul>\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/message-text.svg\" alt=\"\" />\r\n              </div>\r\n              There are 2 new comment for you in “AirPlus Mobile App” .\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/pin.svg\" alt=\"\" />\r\n              </div>\r\n              New Blog post is assigned to you.\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/files-folders.svg\" alt=\"\" />\r\n              </div>\r\n              12 new Files uploaded now.\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/message-text.svg\" alt=\"\" />\r\n              </div>\r\n              There are 2 new comment for you in “AirPlus Mobile App” .\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/files-folders.svg\" alt=\"\" />\r\n              </div>\r\n              12 new Files uploaded now .\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div class=\"txt-left\">\r\n              <div class=\"img-container\">\r\n                <img src=\"assets/images/message-text.svg\" alt=\"\" />\r\n              </div>\r\n              New Blog post is assigned to you .\r\n            </div>\r\n            <div class=\"time\">\r\n              <img src=\"assets/images/time.svg\" alt=\"time-icon\" />4:23 PM\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div\r\n  class=\"card-modal\"\r\n  [ngClass]=\"{ hide: !deleteAccountModal, show: deleteAccountModal }\"\r\n>\r\n  <app-card-modal\r\n    [title]=\"'Are you sure to delete the account?'\"\r\n    [description]=\"\r\n      'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly'\r\n    \"\r\n    [backgroundImg]=\"'http://localhost:4200/assets/images/ellipse.svg'\"\r\n    [icon_path]=\"'assets/images/delete_icon.svg'\"\r\n    [cancel]=\"'Cancel'\"\r\n    [action]=\"'Delete Account'\"\r\n    [actionBackground]=\"'rgba(241, 65, 108, 1);'\"\r\n    (actionBtn)=\"deleteAccount()\"\r\n    (cancelBtn)=\"closeModal()\"\r\n  ></app-card-modal>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "addNewUserCardModal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Are you sure to Add the account?',\r\n        description: 'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly',\r\n        icon_path: 'add_icon.svg',\r\n        backgroundImg: 'ellipse-blue.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Add Account',\r\n        actionBackground: '#0660FC'\r\n    },\r\n}"
            },
            {
                "name": "addUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        btnIcon: 'add-circle.svg',\r\n        btnName: 'Add Post'\r\n    },\r\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes, withPreloading(PreloadAllModules), withViewTransitions()), // preloding the lazy loading components\r\n    provideHttpClient(withFetch(), withInterceptors([tokenInterceptor, loadingInterceptor])),\r\n    provideClientHydration(),\r\n    provideAnimationsAsync(),\r\n  ],\r\n}"
            },
            {
                "name": "authButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/buttons/authButton/authButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Sign up',\r\n    },\r\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  return inject(AuthService).isLoggedIn\r\n    ? true\r\n    : inject(Router).createUrlTree(['/auth/signin']);\r\n}"
            },
            {
                "name": "authSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/authSlider/authslide.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        slides: [\r\n            'illustration-signup.png',\r\n            'second-signup-img.svg',\r\n        ],\r\n    },\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "deleteAccountCardModal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Are you sure to delete the account?',\r\n        description: 'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly',\r\n        icon_path: 'delete_icon.svg',\r\n        backgroundImg: 'ellipse.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Delete Account',\r\n        actionBackground: 'rgba(241, 65, 108, 1)'\r\n    },\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    BASEURL: 'https://192.168.1.74:7109/',\r\n    production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    BASEURL: 'https://192.168.1.75:7109/',\r\n    production: false\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/email-input/email.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/otp-input/otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: { },\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/password-input/password.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
            },
            {
                "name": "isLoggedInGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/is-logged-in.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n\r\n  const token = inject(AuthService).Token;\r\n  if (token) {\r\n    inject(Router).navigate(['/cms']);\r\n    return false;\r\n  }\r\n  else\r\n    return true;\r\n}"
            },
            {
                "name": "loadingInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/loading.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  const loader = inject(InterceptorLoaderRequestService);\r\n  loader.setIncomingRequests();\r\n\r\n\r\n  return next(req).pipe(finalize(() => {\r\n    loader.setIncomingRequests();\r\n    // console.log(loader.getIncomingRequests());\r\n\r\n  }));\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n\r\n  },\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n    await expect(loginButton).toBeInTheDocument();\r\n    await userEvent.click(loginButton);\r\n    await expect(loginButton).not.toBeInTheDocument();\r\n\r\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n    await expect(logoutButton).toBeInTheDocument();\r\n  },\r\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "MANAGEMENT_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/core/management/management.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n\r\n    { path: '', redirectTo: 'users', pathMatch: 'full' },\r\n    {\r\n        path: 'users',\r\n        loadComponent: () => import('./manage-users/manage-users.component').then(c => c.ManageUsersComponent)\r\n    },\r\n    {\r\n        path: 'roles',\r\n        loadComponent: () => import('./manage-roles/manageroles.component').then(c => c.ManageRolesComponent)\r\n\r\n    },\r\n]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\r\n  title: 'Example/Header',\r\n  component: HeaderComponent,\r\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\r\n  title: 'Example/Page',\r\n  component: PageComponent,\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/authSlider/authslide.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AuthSliderComponent>",
                "defaultValue": "{\r\n    title: 'sliders/authSlider',\r\n    component: AuthSliderComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\r\n    title: 'Cards/Card',\r\n    component: CardComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PaginatorComponent>",
                "defaultValue": "{\r\n    title: 'Pagination/Paginator',\r\n    component: PaginatorComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n    title: 'tables/table',\r\n    component: TableComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NewUserComponent>",
                "defaultValue": "{\r\n    title: 'buttons/NewUserButton',\r\n    component: NewUserComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/buttons/authButton/authButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AuthButtonComponent>",
                "defaultValue": "{\r\n    title: 'buttons/authButton',\r\n    component: AuthButtonComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/email-input/email.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<EmailInputComponent>",
                "defaultValue": "{\r\n    title: 'Inputs/InputEmail',\r\n    component: EmailInputComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n    title: 'Inputs/InputText',\r\n    component: InputComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/otp-input/otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<OtpComponent>",
                "defaultValue": "{\r\n    title: 'Inputs/otp',\r\n    component: OtpComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/inputs/password-input/password.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PasswordInputComponent>",
                "defaultValue": "{\r\n    title: 'Inputs/InputPassword',\r\n    component: PasswordInputComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardModalComponent>",
                "defaultValue": "{\r\n    title: 'Confirmation Popup/Card',\r\n    component: CardModalComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/spinner/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SpinnerComponent>",
                "defaultValue": "{\r\n    title: 'Spinners/Spinner',\r\n    component: SpinnerComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastFailedComponent>",
                "defaultValue": "{\r\n    title: 'toasts/failed',\r\n    component: ToastFailedComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/success/toast-success.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastSuccessComponent>",
                "defaultValue": "{\r\n    title: 'toasts/success',\r\n    component: ToastSuccessComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/system/toast-system.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastSystemComponent>",
                "defaultValue": "{\r\n    title: 'toasts/system',\r\n    component: ToastSystemComponent,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastWarningComponent>",
                "defaultValue": "{\r\n    title: 'toasts/warning',\r\n    component: ToastWarningComponent,\r\n}"
            },
            {
                "name": "Paginator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        all: 10,\r\n        active: 0,\r\n        pages: 5\r\n    },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
            },
            {
                "name": "SETTING_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/core/Setting/setting.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n    { path: '', pathMatch: 'full', redirectTo: '/cms/setting/subscription' },\r\n    {\r\n        path: 'subscription',\r\n        loadComponent: () => import('./subscription/subscription.component').then(c => c.SubscriptionComponent)\r\n    },\r\n    {\r\n        path: 'notification',\r\n        loadComponent: () => import('./notification/notification.component').then(c => c.NotificationComponent)\r\n    },\r\n]"
            },
            {
                "name": "Spinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/spinner/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        backgroundColor: 'rgba(6, 96, 252, 1)'\r\n    },\r\n}"
            },
            {
                "name": "Stripe",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/core/Setting/subscription/subscription.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "toastFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
            },
            {
                "name": "toastSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/success/toast-success.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
            },
            {
                "name": "toastSystem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/system/toast-system.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
            },
            {
                "name": "toastWarning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
            },
            {
                "name": "tokenInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/token.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  const token = inject(AuthService).Token;\r\n  //start loading\r\n  if (token) {\r\n    req = req.clone({\r\n      headers: req.headers\r\n        .set('Authorization', `Bearer ${token}`)\r\n        .append('Content-Type', 'text/plain')\r\n        .append('Access-Control-Allow-Origin', '*'),\r\n    });\r\n  }\r\n  return next(req);\r\n}"
            },
            {
                "name": "unSavedChangesCardModal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Unsaved Changes',\r\n        description: 'Do you want to save or discard changes ?',\r\n        icon_path: 'ellipse-yellow.svg',\r\n        backgroundImg: 'background-ellipse.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Save Changes',\r\n        actionBackground: '#0660FC'\r\n    },\r\n}"
            },
            {
                "name": "userManagementCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Active Users',\r\n        description: 'Total user number',\r\n        description_continue: 'in this system',\r\n        icon_path: 'user-management-count.svg',\r\n        total_number: '3500'\r\n    },\r\n}"
            },
            {
                "name": "UserManagementTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        headRow: [],\r\n        bodyRow: [],\r\n    },\r\n}"
            }
        ],
        "functions": [
            {
                "name": "routerTransition",
                "file": "src/app/globalAnimation/animation.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AuthSliderComponent>",
                "file": "src/stories/authSlider/authslide.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "src/stories/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PaginatorComponent>",
                "file": "src/stories/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "src/stories/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NewUserComponent>",
                "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AuthButtonComponent>",
                "file": "src/stories/buttons/authButton/authButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<EmailInputComponent>",
                "file": "src/stories/inputs/email-input/email.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "src/stories/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<OtpComponent>",
                "file": "src/stories/inputs/otp-input/otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PasswordInputComponent>",
                "file": "src/stories/inputs/password-input/password.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardModalComponent>",
                "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SpinnerComponent>",
                "file": "src/stories/spinner/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastFailedComponent>",
                "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastSuccessComponent>",
                "file": "src/stories/toasts/success/toast-success.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastSystemComponent>",
                "file": "src/stories/toasts/system/toast-system.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastWarningComponent>",
                "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "ToastType",
                "childs": [
                    {
                        "name": "System",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "system"
                    },
                    {
                        "name": "Success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "Failed",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "failed"
                    },
                    {
                        "name": "Warning",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "warning"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/interfaces/toast.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/pop-up-card/card-modal/CardModal.stories.ts": [
                {
                    "name": "addNewUserCardModal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Are you sure to Add the account?',\r\n        description: 'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly',\r\n        icon_path: 'add_icon.svg',\r\n        backgroundImg: 'ellipse-blue.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Add Account',\r\n        actionBackground: '#0660FC'\r\n    },\r\n}"
                },
                {
                    "name": "deleteAccountCardModal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Are you sure to delete the account?',\r\n        description: 'Lorem ipsum is placeholder text commonly ipsum is placeholde commonly',\r\n        icon_path: 'delete_icon.svg',\r\n        backgroundImg: 'ellipse.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Delete Account',\r\n        actionBackground: 'rgba(241, 65, 108, 1)'\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardModalComponent>",
                    "defaultValue": "{\r\n    title: 'Confirmation Popup/Card',\r\n    component: CardModalComponent,\r\n}"
                },
                {
                    "name": "unSavedChangesCardModal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Unsaved Changes',\r\n        description: 'Do you want to save or discard changes ?',\r\n        icon_path: 'ellipse-yellow.svg',\r\n        backgroundImg: 'background-ellipse.svg',\r\n        cancel: 'Cancel',\r\n        action: 'Save Changes',\r\n        actionBackground: '#0660FC'\r\n    },\r\n}"
                }
            ],
            "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts": [
                {
                    "name": "addUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        btnIcon: 'add-circle.svg',\r\n        btnName: 'Add Post'\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NewUserComponent>",
                    "defaultValue": "{\r\n    title: 'buttons/NewUserButton',\r\n    component: NewUserComponent,\r\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes, withPreloading(PreloadAllModules), withViewTransitions()), // preloding the lazy loading components\r\n    provideHttpClient(withFetch(), withInterceptors([tokenInterceptor, loadingInterceptor])),\r\n    provideClientHydration(),\r\n    provideAnimationsAsync(),\r\n  ],\r\n}"
                }
            ],
            "src/stories/buttons/authButton/authButton.stories.ts": [
                {
                    "name": "authButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/buttons/authButton/authButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Sign up',\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/buttons/authButton/authButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AuthButtonComponent>",
                    "defaultValue": "{\r\n    title: 'buttons/authButton',\r\n    component: AuthButtonComponent,\r\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  return inject(AuthService).isLoggedIn\r\n    ? true\r\n    : inject(Router).createUrlTree(['/auth/signin']);\r\n}"
                }
            ],
            "src/stories/authSlider/authslide.stories.ts": [
                {
                    "name": "authSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/authSlider/authslide.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        slides: [\r\n            'illustration-signup.png',\r\n            'second-signup-img.svg',\r\n        ],\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/authSlider/authslide.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AuthSliderComponent>",
                    "defaultValue": "{\r\n    title: 'sliders/authSlider',\r\n    component: AuthSliderComponent,\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    BASEURL: 'https://192.168.1.74:7109/',\r\n    production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    BASEURL: 'https://192.168.1.75:7109/',\r\n    production: false\r\n}"
                }
            ],
            "src/stories/inputs/email-input/email.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/email-input/email.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/email-input/email.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<EmailInputComponent>",
                    "defaultValue": "{\r\n    title: 'Inputs/InputEmail',\r\n    component: EmailInputComponent,\r\n}"
                }
            ],
            "src/stories/inputs/input/input.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n    title: 'Inputs/InputText',\r\n    component: InputComponent,\r\n}"
                }
            ],
            "src/stories/inputs/otp-input/otp.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/otp-input/otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: { },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/otp-input/otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<OtpComponent>",
                    "defaultValue": "{\r\n    title: 'Inputs/otp',\r\n    component: OtpComponent,\r\n}"
                }
            ],
            "src/stories/inputs/password-input/password.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/password-input/password.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inp: '',\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/inputs/password-input/password.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PasswordInputComponent>",
                    "defaultValue": "{\r\n    title: 'Inputs/InputPassword',\r\n    component: PasswordInputComponent,\r\n}"
                }
            ],
            "src/app/guards/is-logged-in.guard.ts": [
                {
                    "name": "isLoggedInGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/is-logged-in.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n\r\n  const token = inject(AuthService).Token;\r\n  if (token) {\r\n    inject(Router).navigate(['/cms']);\r\n    return false;\r\n  }\r\n  else\r\n    return true;\r\n}"
                }
            ],
            "src/app/interceptors/loading.interceptor.ts": [
                {
                    "name": "loadingInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/loading.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  const loader = inject(InterceptorLoaderRequestService);\r\n  loader.setIncomingRequests();\r\n\r\n\r\n  return next(req).pipe(finalize(() => {\r\n    loader.setIncomingRequests();\r\n    // console.log(loader.getIncomingRequests());\r\n\r\n  }));\r\n}"
                }
            ],
            "src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n\r\n  },\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Header',\r\n  component: HeaderComponent,\r\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n    await expect(loginButton).toBeInTheDocument();\r\n    await userEvent.click(loginButton);\r\n    await expect(loginButton).not.toBeInTheDocument();\r\n\r\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n    await expect(logoutButton).toBeInTheDocument();\r\n  },\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Page',\r\n  component: PageComponent,\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
                }
            ],
            "src/app/components/core/management/management.routes.ts": [
                {
                    "name": "MANAGEMENT_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/core/management/management.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n\r\n    { path: '', redirectTo: 'users', pathMatch: 'full' },\r\n    {\r\n        path: 'users',\r\n        loadComponent: () => import('./manage-users/manage-users.component').then(c => c.ManageUsersComponent)\r\n    },\r\n    {\r\n        path: 'roles',\r\n        loadComponent: () => import('./manage-roles/manageroles.component').then(c => c.ManageRolesComponent)\r\n\r\n    },\r\n]"
                }
            ],
            "src/stories/card/card.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\r\n    title: 'Cards/Card',\r\n    component: CardComponent,\r\n}"
                },
                {
                    "name": "userManagementCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Active Users',\r\n        description: 'Total user number',\r\n        description_continue: 'in this system',\r\n        icon_path: 'user-management-count.svg',\r\n        total_number: '3500'\r\n    },\r\n}"
                }
            ],
            "src/stories/paginator/paginator.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PaginatorComponent>",
                    "defaultValue": "{\r\n    title: 'Pagination/Paginator',\r\n    component: PaginatorComponent,\r\n}"
                },
                {
                    "name": "Paginator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        all: 10,\r\n        active: 0,\r\n        pages: 5\r\n    },\r\n}"
                }
            ],
            "src/stories/table/table.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n    title: 'tables/table',\r\n    component: TableComponent,\r\n}"
                },
                {
                    "name": "UserManagementTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        headRow: [],\r\n        bodyRow: [],\r\n    },\r\n}"
                }
            ],
            "src/stories/spinner/spinner/spinner.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/spinner/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SpinnerComponent>",
                    "defaultValue": "{\r\n    title: 'Spinners/Spinner',\r\n    component: SpinnerComponent,\r\n}"
                },
                {
                    "name": "Spinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/spinner/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        backgroundColor: 'rgba(6, 96, 252, 1)'\r\n    },\r\n}"
                }
            ],
            "src/stories/toasts/failed/toast-failed.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastFailedComponent>",
                    "defaultValue": "{\r\n    title: 'toasts/failed',\r\n    component: ToastFailedComponent,\r\n}"
                },
                {
                    "name": "toastFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
                }
            ],
            "src/stories/toasts/success/toast-success.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/success/toast-success.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastSuccessComponent>",
                    "defaultValue": "{\r\n    title: 'toasts/success',\r\n    component: ToastSuccessComponent,\r\n}"
                },
                {
                    "name": "toastSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/success/toast-success.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
                }
            ],
            "src/stories/toasts/system/toast-system.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/system/toast-system.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastSystemComponent>",
                    "defaultValue": "{\r\n    title: 'toasts/system',\r\n    component: ToastSystemComponent,\r\n}"
                },
                {
                    "name": "toastSystem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/system/toast-system.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
                }
            ],
            "src/stories/toasts/warning/toast-warning.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastWarningComponent>",
                    "defaultValue": "{\r\n    title: 'toasts/warning',\r\n    component: ToastWarningComponent,\r\n}"
                },
                {
                    "name": "toastWarning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Toggle Toast',\r\n    },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/components/core/Setting/setting.routes.ts": [
                {
                    "name": "SETTING_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/core/Setting/setting.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n    { path: '', pathMatch: 'full', redirectTo: '/cms/setting/subscription' },\r\n    {\r\n        path: 'subscription',\r\n        loadComponent: () => import('./subscription/subscription.component').then(c => c.SubscriptionComponent)\r\n    },\r\n    {\r\n        path: 'notification',\r\n        loadComponent: () => import('./notification/notification.component').then(c => c.NotificationComponent)\r\n    },\r\n]"
                }
            ],
            "src/app/components/core/Setting/subscription/subscription.component.ts": [
                {
                    "name": "Stripe",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/core/Setting/subscription/subscription.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/token.interceptor.ts": [
                {
                    "name": "tokenInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/token.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  const token = inject(AuthService).Token;\r\n  //start loading\r\n  if (token) {\r\n    req = req.clone({\r\n      headers: req.headers\r\n        .set('Authorization', `Bearer ${token}`)\r\n        .append('Content-Type', 'text/plain')\r\n        .append('Access-Control-Allow-Origin', '*'),\r\n    });\r\n  }\r\n  return next(req);\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/globalAnimation/animation.ts": [
                {
                    "name": "routerTransition",
                    "file": "src/app/globalAnimation/animation.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/interfaces/toast.ts": [
                {
                    "name": "ToastType",
                    "childs": [
                        {
                            "name": "System",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "system"
                        },
                        {
                            "name": "Success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "Failed",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "failed"
                        },
                        {
                            "name": "Warning",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "warning"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/interfaces/toast.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/authSlider/authslide.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AuthSliderComponent>",
                    "file": "src/stories/authSlider/authslide.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "src/stories/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/paginator/paginator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PaginatorComponent>",
                    "file": "src/stories/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "src/stories/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NewUserComponent>",
                    "file": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/buttons/authButton/authButton.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AuthButtonComponent>",
                    "file": "src/stories/buttons/authButton/authButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/inputs/email-input/email.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<EmailInputComponent>",
                    "file": "src/stories/inputs/email-input/email.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/inputs/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "src/stories/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/inputs/otp-input/otp.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<OtpComponent>",
                    "file": "src/stories/inputs/otp-input/otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/inputs/password-input/password.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PasswordInputComponent>",
                    "file": "src/stories/inputs/password-input/password.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/pop-up-card/card-modal/CardModal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardModalComponent>",
                    "file": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/spinner/spinner/spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SpinnerComponent>",
                    "file": "src/stories/spinner/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/toasts/failed/toast-failed.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastFailedComponent>",
                    "file": "src/stories/toasts/failed/toast-failed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/toasts/success/toast-success.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastSuccessComponent>",
                    "file": "src/stories/toasts/success/toast-success.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/toasts/system/toast-system.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastSystemComponent>",
                    "file": "src/stories/toasts/system/toast-system.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/toasts/warning/toast-warning.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastWarningComponent>",
                    "file": "src/stories/toasts/warning/toast-warning.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/correctchages/correctchages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CorrectchagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/directives/auto-focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutoFocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/directives/password.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PasswordDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/email-verification/email-verification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailVerificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/sendmail/sendmail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SendmailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/sendmail/sendmail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/setnewpassword/setnewpassword.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SetnewpasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/signin/signin.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/41",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Authentication/signupverification/signupverification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupverificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/interfaces/subscriptionPlan.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscriptionPlan",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/services/settings.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SettingsService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/setting.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/setting.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SETTING_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/subscription/subscription.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubscriptionComponent",
                "coveragePercent": 20,
                "coverageCount": "2/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/Setting/subscription/subscription.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stripe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/add-user/add-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/blog/blog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/cms-main/cms-main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmsMainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/management/manage-roles/manageroles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManageRolesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/management/manage-users/manage-users.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManageUsersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/management/management.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MANAGEMENT_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/management/user-role-combine/user-management.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserManagementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/user-profile/user-profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/notfound/notfound.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotfoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/globalAnimation/animation.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "routerTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/globalAnimation/navigation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavigationService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/is-logged-in.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoggedInGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/loading.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadingInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/app-user.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppUser",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/iforget-pass-request.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IForgetPassRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/isign-in-response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISignInResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/isign-up-response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISignUpResponse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/iuser.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/logininterface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILogin",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/manage-user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ManageUser",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/signupinterface.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ISignupRequest",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/toast.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Toast",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/user-info.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "userInfo",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/keys/local-storage-keys.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalStorageKeys",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/services/breadcrumb/breadcrumb.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BreadcrumbService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/request/interceptor-loader-request.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InterceptorLoaderRequestService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/reset-password.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResetPasswordService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/toast/toast.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ToastService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/toggleBtn/toggle.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ToggleService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/toggleModal/toggle-delete-modal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ToggleDeleteModalService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-managements/user-managements.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserManagementsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/add-new-user/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/outside-click.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutsideClickDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/toggle-filter.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ToggleFilterDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/filter/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pop-up-card/card-modal/card-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/popup/popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/sort/sort/sort.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SortComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/spinner/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/subscription-plan/subscription-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubscriptionPlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/toasts/system/toast-system.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastSystemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/token.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/authSlider/authslide.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/authSlider/authslide.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/authSlider/authslide.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/buttons/add-new-user/add-new-user-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/buttons/add-new-user/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/buttons/authButton/authButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/buttons/authButton/authButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/buttons/authButton/authButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userManagementCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/email-input/email.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/email-input/email.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/email-input/email.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/otp-input/otp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OtpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/otp-input/otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/otp-input/otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/password-input/password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/password-input/password.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/password-input/password.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/stories/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paginator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addNewUserCardModal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteAccountCardModal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pop-up-card/card-modal/CardModal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "unSavedChangesCardModal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pop-up-card/card-modal/card-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/spinner/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/spinner/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/spinner/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserManagementTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/failed/toast-failed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastFailedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/failed/toast-failed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/failed/toast-failed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toastFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/success/toast-success.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastSuccessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/success/toast-success.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/success/toast-success.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toastSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/system/toast-system.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastSystemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/system/toast-system.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/system/toast-system.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toastSystem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/warning/toast-warning.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastWarningComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/warning/toast-warning.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toasts/warning/toast-warning.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toastWarning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}